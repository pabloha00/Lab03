

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 02 18:28:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0018                     _RCSTAbits	set	24
   455  0013                     _SSPBUF	set	19
   456  0014                     _SSPCON	set	20
   457  0019                     _TXREG	set	25
   458  0009                     _PORTE	set	9
   459  0008                     _PORTD	set	8
   460  0007                     _PORTC	set	7
   461  0005                     _PORTA	set	5
   462  0006                     _PORTB	set	6
   463  0007                     _PORTCbits	set	7
   464  001A                     _RCREG	set	26
   465  000C                     _PIR1bits	set	12
   466  0001                     _TMR0	set	1
   467  000B                     _INTCONbits	set	11
   468  0099                     _SPBRG	set	153
   469  009A                     _SPBRGH	set	154
   470  0098                     _TXSTAbits	set	152
   471  0094                     _SSPSTATbits	set	148
   472  0094                     _SSPSTAT	set	148
   473  0081                     _OPTION_REG	set	129
   474  009F                     _ADCON1	set	159
   475  008F                     _OSCCONbits	set	143
   476  0089                     _TRISE	set	137
   477  0088                     _TRISD	set	136
   478  0087                     _TRISCbits	set	135
   479  0086                     _TRISB	set	134
   480  0085                     _TRISA	set	133
   481  008C                     _PIE1bits	set	140
   482  043B                     _TRISC3	set	1083
   483  043D                     _TRISC5	set	1085
   484  043A                     _TRISC2	set	1082
   485  0187                     _BAUDCTLbits	set	391
   486  0189                     _ANSELH	set	393
   487  0188                     _ANSEL	set	392
   488                           
   489                           	psect	cinit
   490  000F                     start_initialization:	
   491                           ; #config settings
   492                           
   493  000F                     __initialization:
   494                           
   495                           ; Clear objects allocated to COMMON
   496  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   497  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   498  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   499  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   500                           
   501                           ; Clear objects allocated to BANK0
   502  0013  1383               	bcf	3,7	;select IRP bank0
   503  0014  3039               	movlw	low __pbssBANK0
   504  0015  0084               	movwf	4
   505  0016  304E               	movlw	low (__pbssBANK0+21)
   506  0017  120A  118A  24D8  120A  118A  	fcall	clear_ram0
   507  001C                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510  001C                     __end_of__initialization:
   511  001C  0183               	clrf	3
   512  001D  120A  118A  2A96   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssCOMMON
   515  0076                     __pbssCOMMON:
   516  0076                     _Cen1:
   517  0076                     	ds	1
   518  0077                     _signo:
   519  0077                     	ds	1
   520  0078                     _toggleTX:
   521  0078                     	ds	1
   522  0079                     _v1:
   523  0079                     	ds	1
   524                           
   525                           	psect	bssBANK0
   526  0039                     __pbssBANK0:
   527  0039                     _AU3:
   528  0039                     	ds	1
   529  003A                     _AU2:
   530  003A                     	ds	1
   531  003B                     _AU1:
   532  003B                     	ds	1
   533  003C                     _AD3:
   534  003C                     	ds	1
   535  003D                     _AD2:
   536  003D                     	ds	1
   537  003E                     _AD1:
   538  003E                     	ds	1
   539  003F                     _AC3:
   540  003F                     	ds	1
   541  0040                     _AC2:
   542  0040                     	ds	1
   543  0041                     _AC1:
   544  0041                     	ds	1
   545  0042                     _Un3:
   546  0042                     	ds	1
   547  0043                     _Un2:
   548  0043                     	ds	1
   549  0044                     _Un1:
   550  0044                     	ds	1
   551  0045                     _Dec3:
   552  0045                     	ds	1
   553  0046                     _Dec2:
   554  0046                     	ds	1
   555  0047                     _Dec1:
   556  0047                     	ds	1
   557  0048                     _Cen3:
   558  0048                     	ds	1
   559  0049                     _Cen2:
   560  0049                     	ds	1
   561  004A                     _CONT:
   562  004A                     	ds	1
   563  004B                     _res:
   564  004B                     	ds	1
   565  004C                     _sum:
   566  004C                     	ds	1
   567  004D                     _v2:
   568  004D                     	ds	1
   569                           
   570                           	psect	clrtext
   571  04D8                     clear_ram0:	
   572                           ;	Called with FSR containing the base address, and
   573                           ;	W with the last address+1
   574                           
   575  04D8  0064               	clrwdt	;clear the watchdog before getting into this loop
   576  04D9                     clrloop0:
   577  04D9  0180               	clrf	0	;clear RAM location pointed to by FSR
   578  04DA  0A84               	incf	4,f	;increment pointer
   579  04DB  0604               	xorwf	4,w	;XOR with final address
   580  04DC  1903               	btfsc	3,2	;have we reached the end yet?
   581  04DD  3400               	retlw	0	;all done for this memory range, return
   582  04DE  0604               	xorwf	4,w	;XOR again to restore value
   583  04DF  2CD9               	goto	clrloop0	;do the next byte
   584                           
   585                           	psect	cstackCOMMON
   586  0070                     __pcstackCOMMON:
   587  0070                     ?_envio:
   588  0070                     ??_envio:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_setup:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_spiWrite:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_spiRead:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_CONTADOR:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_LECT1:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_LECT2:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_USARTcon:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_num_ascii:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_ISR:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_main:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_spiReceiveWait:	
   622                           ; 1 bytes @ 0x0
   623                           
   624                           
   625                           ; 1 bytes @ 0x0
   626  0070                     	ds	1
   627  0071                     ??_ISR:
   628                           
   629                           ; 1 bytes @ 0x1
   630  0071                     	ds	3
   631  0074                     ??_spiWrite:
   632  0074                     ??_spiRead:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0074                     ??_CONTADOR:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  0074                     ??_USARTcon:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  0074                     ??_spiInit:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0074                     ??_num_ascii:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ??_spiReceiveWait:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     ??___wmul:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     ?___bmul:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     spiInit@sType:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     spiWrite@dat:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ___bmul@multiplicand:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     ___wmul@product:	
   666                           ; 1 bytes @ 0x4
   667                           
   668                           
   669                           ; 2 bytes @ 0x4
   670  0074                     	ds	1
   671  0075                     ??_setup:
   672  0075                     ??___bmul:	
   673                           ; 1 bytes @ 0x5
   674                           
   675                           
   676                           ; 1 bytes @ 0x5
   677  0075                     	ds	1
   678                           
   679                           	psect	cstackBANK0
   680  0020                     __pcstackBANK0:
   681  0020                     ?_spiInit:
   682  0020                     ?___wmul:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0020                     spiInit@sDataSample:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0020                     num_ascii@num:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0020                     ___bmul@product:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0020                     ___wmul@multiplier:	
   695                           ; 1 bytes @ 0x0
   696                           
   697                           
   698                           ; 2 bytes @ 0x0
   699  0020                     	ds	1
   700  0021                     spiInit@sClockIdle:
   701  0021                     ___bmul@multiplier:	
   702                           ; 1 bytes @ 0x1
   703                           
   704                           
   705                           ; 1 bytes @ 0x1
   706  0021                     	ds	1
   707  0022                     spiInit@sTransmitEdge:
   708  0022                     ___wmul@multiplicand:	
   709                           ; 1 bytes @ 0x2
   710                           
   711                           
   712                           ; 2 bytes @ 0x2
   713  0022                     	ds	2
   714  0024                     ?___awdiv:
   715  0024                     ___awdiv@divisor:	
   716                           ; 2 bytes @ 0x4
   717                           
   718                           
   719                           ; 2 bytes @ 0x4
   720  0024                     	ds	2
   721  0026                     ___awdiv@dividend:
   722                           
   723                           ; 2 bytes @ 0x6
   724  0026                     	ds	2
   725  0028                     ??___awdiv:
   726                           
   727                           ; 1 bytes @ 0x8
   728  0028                     	ds	1
   729  0029                     ___awdiv@counter:
   730                           
   731                           ; 1 bytes @ 0x9
   732  0029                     	ds	1
   733  002A                     ___awdiv@sign:
   734                           
   735                           ; 1 bytes @ 0xA
   736  002A                     	ds	1
   737  002B                     ___awdiv@quotient:
   738                           
   739                           ; 2 bytes @ 0xB
   740  002B                     	ds	2
   741  002D                     ??_LECT1:
   742  002D                     ??_LECT2:	
   743                           ; 1 bytes @ 0xD
   744                           
   745                           
   746                           ; 1 bytes @ 0xD
   747  002D                     	ds	8
   748  0035                     _LECT2$1177:
   749                           
   750                           ; 2 bytes @ 0x15
   751  0035                     	ds	2
   752  0037                     ??_main:
   753                           
   754                           ; 1 bytes @ 0x17
   755  0037                     	ds	2
   756                           
   757                           	psect	maintext
   758  0296                     __pmaintext:	
   759 ;;
   760 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   761 ;;
   762 ;; *************** function _main *****************
   763 ;; Defined at:
   764 ;;		line 86 in file "main.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : B00/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       2       0       0       0
   781 ;;      Totals:         0       2       0       0       0
   782 ;;Total ram usage:        2 bytes
   783 ;; Hardware stack levels required when called: 4
   784 ;; This function calls:
   785 ;;		_CONTADOR
   786 ;;		_LECT1
   787 ;;		_LECT2
   788 ;;		_setup
   789 ;;		_spiRead
   790 ;;		_spiWrite
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _main
   798  0296                     _main:
   799  0296                     l1899:	
   800                           ;incstack = 0
   801                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   802                           
   803                           
   804                           ;main.c: 87:     setup();
   805  0296  120A  118A  23C2  120A  118A  	fcall	_setup
   806  029B                     l1901:
   807                           
   808                           ;main.c: 90:        PORTCbits.RC2 = 0;
   809  029B  1283               	bcf	3,5	;RP0=0, select bank0
   810  029C  1303               	bcf	3,6	;RP1=0, select bank0
   811  029D  1107               	bcf	7,2	;volatile
   812  029E                     l1903:
   813                           
   814                           ;main.c: 91:        _delay((unsigned long)((1)*(8000000/4000.0)));
   815  029E  3003               	movlw	3
   816  029F  1283               	bcf	3,5	;RP0=0, select bank0
   817  02A0  1303               	bcf	3,6	;RP1=0, select bank0
   818  02A1  00B8               	movwf	??_main+1
   819  02A2  3097               	movlw	151
   820  02A3  00B7               	movwf	??_main
   821  02A4                     u1197:
   822  02A4  0BB7               	decfsz	??_main,f
   823  02A5  2AA4               	goto	u1197
   824  02A6  0BB8               	decfsz	??_main+1,f
   825  02A7  2AA4               	goto	u1197
   826  02A8                     l1905:
   827                           
   828                           ;main.c: 92:        spiWrite(0);
   829  02A8  3000               	movlw	0
   830  02A9  120A  118A  24E7  120A  118A  	fcall	_spiWrite
   831  02AE                     l1907:
   832                           
   833                           ;main.c: 93:        v1 = spiRead();
   834  02AE  120A  118A  24CF  120A  118A  	fcall	_spiRead
   835  02B3  1283               	bcf	3,5	;RP0=0, select bank0
   836  02B4  1303               	bcf	3,6	;RP1=0, select bank0
   837  02B5  00B7               	movwf	??_main
   838  02B6  0837               	movf	??_main,w
   839  02B7  00F9               	movwf	_v1
   840  02B8                     l1909:
   841                           
   842                           ;main.c: 94:        _delay((unsigned long)((1)*(8000000/4000.0)));
   843  02B8  3003               	movlw	3
   844  02B9  1283               	bcf	3,5	;RP0=0, select bank0
   845  02BA  1303               	bcf	3,6	;RP1=0, select bank0
   846  02BB  00B8               	movwf	??_main+1
   847  02BC  3097               	movlw	151
   848  02BD  00B7               	movwf	??_main
   849  02BE                     u1207:
   850  02BE  0BB7               	decfsz	??_main,f
   851  02BF  2ABE               	goto	u1207
   852  02C0  0BB8               	decfsz	??_main+1,f
   853  02C1  2ABE               	goto	u1207
   854  02C2                     l1911:
   855                           
   856                           ;main.c: 95:        PORTCbits.RC2 = 1;
   857  02C2  1283               	bcf	3,5	;RP0=0, select bank0
   858  02C3  1303               	bcf	3,6	;RP1=0, select bank0
   859  02C4  1507               	bsf	7,2	;volatile
   860  02C5                     l1913:
   861                           
   862                           ;main.c: 96:        PORTCbits.RC2 = 0;
   863  02C5  1107               	bcf	7,2	;volatile
   864  02C6                     l1915:
   865                           
   866                           ;main.c: 97:        _delay((unsigned long)((1)*(8000000/4000.0)));
   867  02C6  3003               	movlw	3
   868  02C7  1283               	bcf	3,5	;RP0=0, select bank0
   869  02C8  1303               	bcf	3,6	;RP1=0, select bank0
   870  02C9  00B8               	movwf	??_main+1
   871  02CA  3097               	movlw	151
   872  02CB  00B7               	movwf	??_main
   873  02CC                     u1217:
   874  02CC  0BB7               	decfsz	??_main,f
   875  02CD  2ACC               	goto	u1217
   876  02CE  0BB8               	decfsz	??_main+1,f
   877  02CF  2ACC               	goto	u1217
   878  02D0                     l1917:
   879                           
   880                           ;main.c: 98:        spiWrite(0);
   881  02D0  3000               	movlw	0
   882  02D1  120A  118A  24E7  120A  118A  	fcall	_spiWrite
   883  02D6                     l1919:
   884                           
   885                           ;main.c: 99:        v2 = spiRead();
   886  02D6  120A  118A  24CF  120A  118A  	fcall	_spiRead
   887  02DB  1283               	bcf	3,5	;RP0=0, select bank0
   888  02DC  1303               	bcf	3,6	;RP1=0, select bank0
   889  02DD  00B7               	movwf	??_main
   890  02DE  0837               	movf	??_main,w
   891  02DF  00CD               	movwf	_v2
   892  02E0                     l1921:
   893                           
   894                           ;main.c: 100:        _delay((unsigned long)((1)*(8000000/4000.0)));
   895  02E0  3003               	movlw	3
   896  02E1  1283               	bcf	3,5	;RP0=0, select bank0
   897  02E2  1303               	bcf	3,6	;RP1=0, select bank0
   898  02E3  00B8               	movwf	??_main+1
   899  02E4  3097               	movlw	151
   900  02E5  00B7               	movwf	??_main
   901  02E6                     u1227:
   902  02E6  0BB7               	decfsz	??_main,f
   903  02E7  2AE6               	goto	u1227
   904  02E8  0BB8               	decfsz	??_main+1,f
   905  02E9  2AE6               	goto	u1227
   906  02EA                     l1923:
   907                           
   908                           ;main.c: 101:        PORTCbits.RC2 = 1;
   909  02EA  1283               	bcf	3,5	;RP0=0, select bank0
   910  02EB  1303               	bcf	3,6	;RP1=0, select bank0
   911  02EC  1507               	bsf	7,2	;volatile
   912  02ED                     l1925:
   913                           
   914                           ;main.c: 102:        if(signo != 13 && signo != 43 && signo != 45){
   915  02ED  300D               	movlw	13
   916  02EE  0677               	xorwf	_signo,w
   917  02EF  1903               	btfsc	3,2
   918  02F0  2AF2               	goto	u1161
   919  02F1  2AF3               	goto	u1160
   920  02F2                     u1161:
   921  02F2  2B01               	goto	l1933
   922  02F3                     u1160:
   923  02F3                     l1927:
   924  02F3  302B               	movlw	43
   925  02F4  0677               	xorwf	_signo,w
   926  02F5  1903               	btfsc	3,2
   927  02F6  2AF8               	goto	u1171
   928  02F7  2AF9               	goto	u1170
   929  02F8                     u1171:
   930  02F8  2B01               	goto	l1933
   931  02F9                     u1170:
   932  02F9                     l1929:
   933  02F9  302D               	movlw	45
   934  02FA  0677               	xorwf	_signo,w
   935  02FB  1903               	btfsc	3,2
   936  02FC  2AFE               	goto	u1181
   937  02FD  2AFF               	goto	u1180
   938  02FE                     u1181:
   939  02FE  2B01               	goto	l1933
   940  02FF                     u1180:
   941  02FF                     l1931:
   942                           
   943                           ;main.c: 103:             sum = 0;
   944  02FF  01CC               	clrf	_sum
   945                           
   946                           ;main.c: 104:             res = 0;
   947  0300  01CB               	clrf	_res
   948  0301                     l1933:
   949                           
   950                           ;main.c: 106:         CONTADOR();
   951  0301  120A  118A  23FF  120A  118A  	fcall	_CONTADOR
   952  0306                     l1935:
   953                           
   954                           ;main.c: 107:         LECT1();
   955  0306  120A  118A  21E4  120A  118A  	fcall	_LECT1
   956  030B                     l1937:
   957                           
   958                           ;main.c: 108:         LECT2();
   959  030B  120A  118A  2115  120A  118A  	fcall	_LECT2
   960  0310                     l1939:
   961                           
   962                           ;main.c: 109:         PORTB = v1;
   963  0310  0879               	movf	_v1,w
   964  0311  1283               	bcf	3,5	;RP0=0, select bank0
   965  0312  1303               	bcf	3,6	;RP1=0, select bank0
   966  0313  0086               	movwf	6	;volatile
   967  0314  2A9B               	goto	l1901
   968  0315  120A  118A  280C   	ljmp	start
   969  0318                     __end_of_main:
   970                           
   971                           	psect	text1
   972  04E7                     __ptext1:	
   973 ;; *************** function _spiWrite *****************
   974 ;; Defined at:
   975 ;;		line 25 in file "SPI_1.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  dat             1    wreg     unsigned char 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  dat             1    4[COMMON] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         0       0       0       0       0
   990 ;;      Locals:         1       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0
   992 ;;      Totals:         1       0       0       0       0
   993 ;;Total ram usage:        1 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 2
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _spiWrite
  1005  04E7                     _spiWrite:
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _spiWrite: [wreg]
  1009                           ;spiWrite@dat stored from wreg
  1010  04E7  00F4               	movwf	spiWrite@dat
  1011  04E8                     l1597:
  1012                           
  1013                           ;SPI_1.c: 25: void spiWrite(char dat);SPI_1.c: 26: {;SPI_1.c: 27:     SSPBUF = dat;
  1014  04E8  0874               	movf	spiWrite@dat,w
  1015  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1016  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1017  04EB  0093               	movwf	19	;volatile
  1018  04EC                     l204:
  1019  04EC  0008               	return
  1020  04ED                     __end_of_spiWrite:
  1021                           
  1022                           	psect	text2
  1023  04CF                     __ptext2:	
  1024 ;; *************** function _spiRead *****************
  1025 ;; Defined at:
  1026 ;;		line 38 in file "SPI_1.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      unsigned char 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0, pclath, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0
  1043 ;;      Totals:         0       0       0       0       0
  1044 ;;Total ram usage:        0 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 3
  1047 ;; This function calls:
  1048 ;;		_spiReceiveWait
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           
  1055                           ;psect for function _spiRead
  1056  04CF                     _spiRead:
  1057  04CF                     l1599:	
  1058                           ;incstack = 0
  1059                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1060                           
  1061                           
  1062                           ;SPI_1.c: 40:     spiReceiveWait();
  1063  04CF  120A  118A  24E0  120A  118A  	fcall	_spiReceiveWait
  1064  04D4                     l1601:
  1065                           
  1066                           ;SPI_1.c: 41:     return(SSPBUF);
  1067  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1068  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1069  04D6  0813               	movf	19,w	;volatile
  1070  04D7                     l212:
  1071  04D7  0008               	return
  1072  04D8                     __end_of_spiRead:
  1073                           
  1074                           	psect	text3
  1075  04E0                     __ptext3:	
  1076 ;; *************** function _spiReceiveWait *****************
  1077 ;; Defined at:
  1078 ;;		line 20 in file "SPI_1.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		None
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 2
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_spiRead
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           
  1107                           ;psect for function _spiReceiveWait
  1108  04E0                     _spiReceiveWait:
  1109  04E0                     l1381:	
  1110                           ;incstack = 0
  1111                           ; Regs used in _spiReceiveWait: []
  1112                           
  1113  04E0                     l198:	
  1114                           ;SPI_1.c: 22:     while ( !SSPSTATbits.BF );
  1115                           
  1116  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  1117  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  1118  04E2  1C14               	btfss	20,0	;volatile
  1119  04E3  2CE5               	goto	u561
  1120  04E4  2CE6               	goto	u560
  1121  04E5                     u561:
  1122  04E5  2CE0               	goto	l198
  1123  04E6                     u560:
  1124  04E6                     l201:
  1125  04E6  0008               	return
  1126  04E7                     __end_of_spiReceiveWait:
  1127                           
  1128                           	psect	text4
  1129  03C2                     __ptext4:	
  1130 ;; *************** function _setup *****************
  1131 ;; Defined at:
  1132 ;;		line 114 in file "main.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 3
  1153 ;; This function calls:
  1154 ;;		_USARTcon
  1155 ;;		_spiInit
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           
  1162                           ;psect for function _setup
  1163  03C2                     _setup:
  1164  03C2                     l1839:	
  1165                           ;incstack = 0
  1166                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1167                           
  1168                           
  1169                           ;main.c: 116:     ANSEL = 0;
  1170  03C2  1683               	bsf	3,5	;RP0=1, select bank3
  1171  03C3  1703               	bsf	3,6	;RP1=1, select bank3
  1172  03C4  0188               	clrf	8	;volatile
  1173                           
  1174                           ;main.c: 117:     ANSELH = 0;
  1175  03C5  0189               	clrf	9	;volatile
  1176                           
  1177                           ;main.c: 118:     TRISA = 0;
  1178  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  1179  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  1180  03C8  0185               	clrf	5	;volatile
  1181                           
  1182                           ;main.c: 119:     TRISB = 0;
  1183  03C9  0186               	clrf	6	;volatile
  1184  03CA                     l1841:
  1185                           
  1186                           ;main.c: 120:     TRISC2 = 0;
  1187  03CA  1107               	bcf	7,2	;volatile
  1188  03CB                     l1843:
  1189                           
  1190                           ;main.c: 121:     TRISCbits.TRISC6 = 0;
  1191  03CB  1307               	bcf	7,6	;volatile
  1192  03CC                     l1845:
  1193                           
  1194                           ;main.c: 122:     TRISCbits.TRISC7 = 1;
  1195  03CC  1787               	bsf	7,7	;volatile
  1196                           
  1197                           ;main.c: 123:     TRISD = 0;
  1198  03CD  0188               	clrf	8	;volatile
  1199                           
  1200                           ;main.c: 124:     TRISE = 0;
  1201  03CE  0189               	clrf	9	;volatile
  1202                           
  1203                           ;main.c: 125:     PORTA = 0;
  1204  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1205  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1206  03D1  0185               	clrf	5	;volatile
  1207                           
  1208                           ;main.c: 126:     PORTB = 0;
  1209  03D2  0186               	clrf	6	;volatile
  1210  03D3                     l1847:
  1211                           
  1212                           ;main.c: 127:     PORTC = 0b00000100;
  1213  03D3  3004               	movlw	4
  1214  03D4  0087               	movwf	7	;volatile
  1215  03D5                     l1849:
  1216                           
  1217                           ;main.c: 128:     PORTD = 0;
  1218  03D5  0188               	clrf	8	;volatile
  1219  03D6                     l1851:
  1220                           
  1221                           ;main.c: 129:     PORTE = 0;
  1222  03D6  0189               	clrf	9	;volatile
  1223  03D7                     l1853:
  1224                           
  1225                           ;main.c: 130:     INTCONbits.TMR0IF = 0;
  1226  03D7  110B               	bcf	11,2	;volatile
  1227  03D8                     l1855:
  1228                           
  1229                           ;main.c: 131:     INTCONbits.RBIF = 0;
  1230  03D8  100B               	bcf	11,0	;volatile
  1231  03D9                     l1857:
  1232                           
  1233                           ;main.c: 132:     INTCONbits.GIE = 1;
  1234  03D9  178B               	bsf	11,7	;volatile
  1235  03DA                     l1859:
  1236                           
  1237                           ;main.c: 133:     INTCONbits.PEIE = 1;
  1238  03DA  170B               	bsf	11,6	;volatile
  1239  03DB                     l1861:
  1240                           
  1241                           ;main.c: 134:     INTCONbits.T0IE = 1;
  1242  03DB  168B               	bsf	11,5	;volatile
  1243  03DC                     l1863:
  1244                           
  1245                           ;main.c: 135:     INTCONbits.RBIE = 0;
  1246  03DC  118B               	bcf	11,3	;volatile
  1247  03DD                     l1865:
  1248                           
  1249                           ;main.c: 136:     PIR1bits.ADIF = 0;
  1250  03DD  130C               	bcf	12,6	;volatile
  1251  03DE                     l1867:
  1252                           
  1253                           ;main.c: 137:     OSCCONbits.IRCF0 = 1;
  1254  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  1255  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  1256  03E0  160F               	bsf	15,4	;volatile
  1257  03E1                     l1869:
  1258                           
  1259                           ;main.c: 138:     OSCCONbits.IRCF1 = 1;
  1260  03E1  168F               	bsf	15,5	;volatile
  1261  03E2                     l1871:
  1262                           
  1263                           ;main.c: 139:     OSCCONbits.IRCF2 = 1;
  1264  03E2  170F               	bsf	15,6	;volatile
  1265  03E3                     l1873:
  1266                           
  1267                           ;main.c: 140:     ADCON1 = 0;
  1268  03E3  019F               	clrf	31	;volatile
  1269                           
  1270                           ;main.c: 141:     TMR0 = 216;
  1271  03E4  30D8               	movlw	216
  1272  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1273  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1274  03E7  0081               	movwf	1	;volatile
  1275                           
  1276                           ;main.c: 142:     OPTION_REG = 0b01010111;
  1277  03E8  3057               	movlw	87
  1278  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1279  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1280  03EB  0081               	movwf	1	;volatile
  1281  03EC                     l1875:
  1282                           
  1283                           ;main.c: 143:     PIE1bits.RCIE = 1;
  1284  03EC  168C               	bsf	12,5	;volatile
  1285  03ED                     l1877:
  1286                           
  1287                           ;main.c: 144:     PIE1bits.TXIE = 1;
  1288  03ED  160C               	bsf	12,4	;volatile
  1289  03EE                     l1879:
  1290                           
  1291                           ;main.c: 145:     USARTcon();
  1292  03EE  120A  118A  24B9  120A  118A  	fcall	_USARTcon
  1293  03F3                     l1881:
  1294                           
  1295                           ;main.c: 146:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1296  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1297  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1298  03F5  01A0               	clrf	spiInit@sDataSample
  1299  03F6  01A1               	clrf	spiInit@sClockIdle
  1300  03F7  01A2               	clrf	spiInit@sTransmitEdge
  1301  03F8  3020               	movlw	32
  1302  03F9  120A  118A  2484  120A  118A  	fcall	_spiInit
  1303  03FE                     l138:
  1304  03FE  0008               	return
  1305  03FF                     __end_of_setup:
  1306                           
  1307                           	psect	text5
  1308  0484                     __ptext5:	
  1309 ;; *************** function _spiInit *****************
  1310 ;; Defined at:
  1311 ;;		line 3 in file "SPI_1.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  sType           1    wreg     enum E1264
  1314 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1315 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1316 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  sType           1    4[COMMON] enum E1264
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         0       3       0       0       0
  1329 ;;      Locals:         1       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0
  1331 ;;      Totals:         1       3       0       0       0
  1332 ;;Total ram usage:        4 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 2
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_setup
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function _spiInit
  1344  0484                     _spiInit:
  1345                           
  1346                           ;incstack = 0
  1347                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1348                           ;spiInit@sType stored from wreg
  1349  0484  00F4               	movwf	spiInit@sType
  1350  0485                     l1723:
  1351                           
  1352                           ;SPI_1.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_1.c: 4: {;SPI_1.c: 5:     TRISC5 = 0;
  1353  0485  1683               	bsf	3,5	;RP0=1, select bank1
  1354  0486  1303               	bcf	3,6	;RP1=0, select bank1
  1355  0487  1287               	bcf	7,5	;volatile
  1356                           
  1357                           ;SPI_1.c: 6:     if(sType & 0b00000100)
  1358  0488  1D74               	btfss	spiInit@sType,2
  1359  0489  2C8B               	goto	u1091
  1360  048A  2C8C               	goto	u1090
  1361  048B                     u1091:
  1362  048B  2C94               	goto	l1729
  1363  048C                     u1090:
  1364  048C                     l1725:
  1365                           
  1366                           ;SPI_1.c: 7:     {;SPI_1.c: 8:         SSPSTAT = sTransmitEdge;
  1367  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1368  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1369  048E  0822               	movf	spiInit@sTransmitEdge,w
  1370  048F  1683               	bsf	3,5	;RP0=1, select bank1
  1371  0490  1303               	bcf	3,6	;RP1=0, select bank1
  1372  0491  0094               	movwf	20	;volatile
  1373  0492                     l1727:
  1374                           
  1375                           ;SPI_1.c: 9:         TRISC3 = 1;
  1376  0492  1587               	bsf	7,3	;volatile
  1377                           
  1378                           ;SPI_1.c: 10:     }
  1379  0493  2C9C               	goto	l194
  1380  0494                     l1729:
  1381                           
  1382                           ;SPI_1.c: 12:     {;SPI_1.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
  1383  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0496  0820               	movf	spiInit@sDataSample,w
  1386  0497  0422               	iorwf	spiInit@sTransmitEdge,w
  1387  0498  1683               	bsf	3,5	;RP0=1, select bank1
  1388  0499  1303               	bcf	3,6	;RP1=0, select bank1
  1389  049A  0094               	movwf	20	;volatile
  1390  049B                     l1731:
  1391                           
  1392                           ;SPI_1.c: 14:         TRISC3 = 0;
  1393  049B  1187               	bcf	7,3	;volatile
  1394  049C                     l194:	
  1395                           ;SPI_1.c: 15:     }
  1396                           
  1397                           
  1398                           ;SPI_1.c: 17:     SSPCON = sType | sClockIdle;
  1399  049C  0874               	movf	spiInit@sType,w
  1400  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1401  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1402  049F  0421               	iorwf	spiInit@sClockIdle,w
  1403  04A0  0094               	movwf	20	;volatile
  1404  04A1                     l195:
  1405  04A1  0008               	return
  1406  04A2                     __end_of_spiInit:
  1407                           
  1408                           	psect	text6
  1409  04B9                     __ptext6:	
  1410 ;; *************** function _USARTcon *****************
  1411 ;; Defined at:
  1412 ;;		line 3 in file "USART_2.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 2
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_setup
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _USARTcon
  1442  04B9                     _USARTcon:
  1443  04B9                     l1281:	
  1444                           ;incstack = 0
  1445                           ; Regs used in _USARTcon: [wreg+status,2]
  1446                           
  1447                           
  1448                           ;USART_2.c: 5:  TXSTAbits.SYNC = 0;
  1449  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  1450  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  1451  04BB  1218               	bcf	24,4	;volatile
  1452                           
  1453                           ;USART_2.c: 6:  TXSTAbits.BRGH = 1;
  1454  04BC  1518               	bsf	24,2	;volatile
  1455                           
  1456                           ;USART_2.c: 7:  TXSTAbits.TX9 = 0;
  1457  04BD  1318               	bcf	24,6	;volatile
  1458                           
  1459                           ;USART_2.c: 8:  BAUDCTLbits.BRG16 = 0;
  1460  04BE  1683               	bsf	3,5	;RP0=1, select bank3
  1461  04BF  1703               	bsf	3,6	;RP1=1, select bank3
  1462  04C0  1187               	bcf	7,3	;volatile
  1463  04C1                     l1283:
  1464                           
  1465                           ;USART_2.c: 9:  SPBRGH = 0;
  1466  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  1467  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  1468  04C3  019A               	clrf	26	;volatile
  1469  04C4                     l1285:
  1470                           
  1471                           ;USART_2.c: 10:  SPBRG = 51;
  1472  04C4  3033               	movlw	51
  1473  04C5  0099               	movwf	25	;volatile
  1474  04C6                     l1287:
  1475                           
  1476                           ;USART_2.c: 12:  RCSTAbits.SPEN = 1;
  1477  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  1478  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  1479  04C8  1798               	bsf	24,7	;volatile
  1480  04C9                     l1289:
  1481                           
  1482                           ;USART_2.c: 13:  RCSTAbits.RX9 = 0;
  1483  04C9  1318               	bcf	24,6	;volatile
  1484  04CA                     l1291:
  1485                           
  1486                           ;USART_2.c: 14:  RCSTAbits.CREN = 1;
  1487  04CA  1618               	bsf	24,4	;volatile
  1488  04CB                     l1293:
  1489                           
  1490                           ;USART_2.c: 15:  TXSTAbits.TXEN = 1;
  1491  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  1492  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  1493  04CD  1698               	bsf	24,5	;volatile
  1494  04CE                     l225:
  1495  04CE  0008               	return
  1496  04CF                     __end_of_USARTcon:
  1497                           
  1498                           	psect	text7
  1499  0115                     __ptext7:	
  1500 ;; *************** function _LECT2 *****************
  1501 ;; Defined at:
  1502 ;;		line 157 in file "main.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       0       0       0       0
  1517 ;;      Locals:         0       2       0       0       0
  1518 ;;      Temps:          0       8       0       0       0
  1519 ;;      Totals:         0      10       0       0       0
  1520 ;;Total ram usage:       10 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 3
  1523 ;; This function calls:
  1524 ;;		___awdiv
  1525 ;;		___bmul
  1526 ;;		___wmul
  1527 ;;		_num_ascii
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _LECT2
  1535  0115                     _LECT2:
  1536  0115                     l1891:	
  1537                           ;incstack = 0
  1538                           ; Regs used in _LECT2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1539                           
  1540                           
  1541                           ;main.c: 158:     Cen2 = v2/51;
  1542  0115  3033               	movlw	51
  1543  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0118  00A4               	movwf	___awdiv@divisor
  1546  0119  3000               	movlw	0
  1547  011A  00A5               	movwf	___awdiv@divisor+1
  1548  011B  084D               	movf	_v2,w
  1549  011C  00AD               	movwf	??_LECT2
  1550  011D  01AE               	clrf	??_LECT2+1
  1551  011E  082D               	movf	??_LECT2,w
  1552  011F  00A6               	movwf	___awdiv@dividend
  1553  0120  082E               	movf	??_LECT2+1,w
  1554  0121  00A7               	movwf	___awdiv@dividend+1
  1555  0122  120A  118A  2318  120A  118A  	fcall	___awdiv
  1556  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0129  0824               	movf	?___awdiv,w
  1559  012A  00AF               	movwf	??_LECT2+2
  1560  012B  082F               	movf	??_LECT2+2,w
  1561  012C  00C9               	movwf	_Cen2
  1562                           
  1563                           ;main.c: 159:     Dec2 = (((100*v2)/51-(Cen2*100))/10);
  1564  012D  3033               	movlw	51
  1565  012E  00A4               	movwf	___awdiv@divisor
  1566  012F  3000               	movlw	0
  1567  0130  00A5               	movwf	___awdiv@divisor+1
  1568  0131  084D               	movf	_v2,w
  1569  0132  00AD               	movwf	??_LECT2
  1570  0133  01AE               	clrf	??_LECT2+1
  1571  0134  082D               	movf	??_LECT2,w
  1572  0135  00A0               	movwf	___wmul@multiplier
  1573  0136  082E               	movf	??_LECT2+1,w
  1574  0137  00A1               	movwf	___wmul@multiplier+1
  1575  0138  3064               	movlw	100
  1576  0139  00A2               	movwf	___wmul@multiplicand
  1577  013A  3000               	movlw	0
  1578  013B  00A3               	movwf	___wmul@multiplicand+1
  1579  013C  120A  118A  2436  120A  118A  	fcall	___wmul
  1580  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0143  0821               	movf	?___wmul+1,w
  1583  0144  00A7               	movwf	___awdiv@dividend+1
  1584  0145  0820               	movf	?___wmul,w
  1585  0146  00A6               	movwf	___awdiv@dividend
  1586  0147  120A  118A  2318  120A  118A  	fcall	___awdiv
  1587  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1588  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1589  014E  0824               	movf	?___awdiv,w
  1590  014F  00AF               	movwf	??_LECT2+2
  1591  0150  0825               	movf	?___awdiv+1,w
  1592  0151  00B0               	movwf	??_LECT2+3
  1593  0152  0849               	movf	_Cen2,w
  1594  0153  00B1               	movwf	??_LECT2+4
  1595  0154  01B2               	clrf	??_LECT2+5
  1596  0155  0831               	movf	??_LECT2+4,w
  1597  0156  00A0               	movwf	___wmul@multiplier
  1598  0157  0832               	movf	??_LECT2+5,w
  1599  0158  00A1               	movwf	___wmul@multiplier+1
  1600  0159  309C               	movlw	156
  1601  015A  00A2               	movwf	___wmul@multiplicand
  1602  015B  30FF               	movlw	255
  1603  015C  00A3               	movwf	___wmul@multiplicand+1
  1604  015D  120A  118A  2436  120A  118A  	fcall	___wmul
  1605  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0164  0820               	movf	?___wmul,w
  1608  0165  072F               	addwf	??_LECT2+2,w
  1609  0166  00B5               	movwf	_LECT2$1177
  1610  0167  0821               	movf	?___wmul+1,w
  1611  0168  1803               	skipnc
  1612  0169  0A21               	incf	?___wmul+1,w
  1613  016A  0730               	addwf	??_LECT2+3,w
  1614  016B  00B6               	movwf	_LECT2$1177+1
  1615                           
  1616                           ;main.c: 159:     Dec2 = (((100*v2)/51-(Cen2*100))/10);
  1617  016C  300A               	movlw	10
  1618  016D  00A4               	movwf	___awdiv@divisor
  1619  016E  3000               	movlw	0
  1620  016F  00A5               	movwf	___awdiv@divisor+1
  1621  0170  0836               	movf	_LECT2$1177+1,w
  1622  0171  00A7               	movwf	___awdiv@dividend+1
  1623  0172  0835               	movf	_LECT2$1177,w
  1624  0173  00A6               	movwf	___awdiv@dividend
  1625  0174  120A  118A  2318  120A  118A  	fcall	___awdiv
  1626  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1627  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1628  017B  0824               	movf	?___awdiv,w
  1629  017C  00AD               	movwf	??_LECT2
  1630  017D  082D               	movf	??_LECT2,w
  1631  017E  00C6               	movwf	_Dec2
  1632                           
  1633                           ;main.c: 160:     Un2 = (100*v2)/51-(100*Cen2+Dec2*10);
  1634  017F  3033               	movlw	51
  1635  0180  00A4               	movwf	___awdiv@divisor
  1636  0181  3000               	movlw	0
  1637  0182  00A5               	movwf	___awdiv@divisor+1
  1638  0183  084D               	movf	_v2,w
  1639  0184  00AD               	movwf	??_LECT2
  1640  0185  01AE               	clrf	??_LECT2+1
  1641  0186  082D               	movf	??_LECT2,w
  1642  0187  00A0               	movwf	___wmul@multiplier
  1643  0188  082E               	movf	??_LECT2+1,w
  1644  0189  00A1               	movwf	___wmul@multiplier+1
  1645  018A  3064               	movlw	100
  1646  018B  00A2               	movwf	___wmul@multiplicand
  1647  018C  3000               	movlw	0
  1648  018D  00A3               	movwf	___wmul@multiplicand+1
  1649  018E  120A  118A  2436  120A  118A  	fcall	___wmul
  1650  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1651  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1652  0195  0821               	movf	?___wmul+1,w
  1653  0196  00A7               	movwf	___awdiv@dividend+1
  1654  0197  0820               	movf	?___wmul,w
  1655  0198  00A6               	movwf	___awdiv@dividend
  1656  0199  120A  118A  2318  120A  118A  	fcall	___awdiv
  1657  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1658  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1659  01A0  0824               	movf	?___awdiv,w
  1660  01A1  00AF               	movwf	??_LECT2+2
  1661  01A2  0825               	movf	?___awdiv+1,w
  1662  01A3  00B0               	movwf	??_LECT2+3
  1663  01A4  309C               	movlw	156
  1664  01A5  00B1               	movwf	??_LECT2+4
  1665  01A6  0831               	movf	??_LECT2+4,w
  1666  01A7  00F4               	movwf	___bmul@multiplicand
  1667  01A8  0849               	movf	_Cen2,w
  1668  01A9  120A  118A  24A2  120A  118A  	fcall	___bmul
  1669  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1670  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1671  01B0  00B2               	movwf	??_LECT2+5
  1672  01B1  30F6               	movlw	246
  1673  01B2  00B3               	movwf	??_LECT2+6
  1674  01B3  0833               	movf	??_LECT2+6,w
  1675  01B4  00F4               	movwf	___bmul@multiplicand
  1676  01B5  0846               	movf	_Dec2,w
  1677  01B6  120A  118A  24A2  120A  118A  	fcall	___bmul
  1678  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1679  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1680  01BD  0732               	addwf	??_LECT2+5,w
  1681  01BE  072F               	addwf	??_LECT2+2,w
  1682  01BF  00B4               	movwf	??_LECT2+7
  1683  01C0  0834               	movf	??_LECT2+7,w
  1684  01C1  00C3               	movwf	_Un2
  1685  01C2                     l1893:
  1686                           
  1687                           ;main.c: 161:     AC2 = num_ascii(Cen2);
  1688  01C2  0849               	movf	_Cen2,w
  1689  01C3  120A  118A  2381  120A  118A  	fcall	_num_ascii
  1690  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1691  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1692  01CA  00AD               	movwf	??_LECT2
  1693  01CB  082D               	movf	??_LECT2,w
  1694  01CC  00C0               	movwf	_AC2
  1695  01CD                     l1895:
  1696                           
  1697                           ;main.c: 162:     AD2 = num_ascii(Dec2);
  1698  01CD  0846               	movf	_Dec2,w
  1699  01CE  120A  118A  2381  120A  118A  	fcall	_num_ascii
  1700  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1701  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1702  01D5  00AD               	movwf	??_LECT2
  1703  01D6  082D               	movf	??_LECT2,w
  1704  01D7  00BD               	movwf	_AD2
  1705  01D8                     l1897:
  1706                           
  1707                           ;main.c: 163:     AU2 = num_ascii(Un2);
  1708  01D8  0843               	movf	_Un2,w
  1709  01D9  120A  118A  2381  120A  118A  	fcall	_num_ascii
  1710  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1711  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1712  01E0  00AD               	movwf	??_LECT2
  1713  01E1  082D               	movf	??_LECT2,w
  1714  01E2  00BA               	movwf	_AU2
  1715  01E3                     l144:
  1716  01E3  0008               	return
  1717  01E4                     __end_of_LECT2:
  1718                           
  1719                           	psect	text8
  1720  01E4                     __ptext8:	
  1721 ;; *************** function _LECT1 *****************
  1722 ;; Defined at:
  1723 ;;		line 149 in file "main.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0
  1739 ;;      Temps:          0       8       0       0       0
  1740 ;;      Totals:         0       8       0       0       0
  1741 ;;Total ram usage:        8 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 3
  1744 ;; This function calls:
  1745 ;;		___awdiv
  1746 ;;		___bmul
  1747 ;;		___wmul
  1748 ;;		_num_ascii
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function _LECT1
  1756  01E4                     _LECT1:
  1757  01E4                     l1883:	
  1758                           ;incstack = 0
  1759                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1760                           
  1761                           
  1762                           ;main.c: 150:     Cen1 = v1/51;
  1763  01E4  3033               	movlw	51
  1764  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1765  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1766  01E7  00A4               	movwf	___awdiv@divisor
  1767  01E8  3000               	movlw	0
  1768  01E9  00A5               	movwf	___awdiv@divisor+1
  1769  01EA  0879               	movf	_v1,w
  1770  01EB  00AD               	movwf	??_LECT1
  1771  01EC  01AE               	clrf	??_LECT1+1
  1772  01ED  082D               	movf	??_LECT1,w
  1773  01EE  00A6               	movwf	___awdiv@dividend
  1774  01EF  082E               	movf	??_LECT1+1,w
  1775  01F0  00A7               	movwf	___awdiv@dividend+1
  1776  01F1  120A  118A  2318  120A  118A  	fcall	___awdiv
  1777  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1778  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1779  01F8  0824               	movf	?___awdiv,w
  1780  01F9  00AF               	movwf	??_LECT1+2
  1781  01FA  082F               	movf	??_LECT1+2,w
  1782  01FB  00F6               	movwf	_Cen1
  1783                           
  1784                           ;main.c: 151:     Dec1 = ((10*v1)/51-Cen1*10);
  1785  01FC  3033               	movlw	51
  1786  01FD  00A4               	movwf	___awdiv@divisor
  1787  01FE  3000               	movlw	0
  1788  01FF  00A5               	movwf	___awdiv@divisor+1
  1789  0200  0879               	movf	_v1,w
  1790  0201  00AD               	movwf	??_LECT1
  1791  0202  01AE               	clrf	??_LECT1+1
  1792  0203  082D               	movf	??_LECT1,w
  1793  0204  00A0               	movwf	___wmul@multiplier
  1794  0205  082E               	movf	??_LECT1+1,w
  1795  0206  00A1               	movwf	___wmul@multiplier+1
  1796  0207  300A               	movlw	10
  1797  0208  00A2               	movwf	___wmul@multiplicand
  1798  0209  3000               	movlw	0
  1799  020A  00A3               	movwf	___wmul@multiplicand+1
  1800  020B  120A  118A  2436  120A  118A  	fcall	___wmul
  1801  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0212  0821               	movf	?___wmul+1,w
  1804  0213  00A7               	movwf	___awdiv@dividend+1
  1805  0214  0820               	movf	?___wmul,w
  1806  0215  00A6               	movwf	___awdiv@dividend
  1807  0216  120A  118A  2318  120A  118A  	fcall	___awdiv
  1808  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1809  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1810  021D  0824               	movf	?___awdiv,w
  1811  021E  00AF               	movwf	??_LECT1+2
  1812  021F  0825               	movf	?___awdiv+1,w
  1813  0220  00B0               	movwf	??_LECT1+3
  1814  0221  30F6               	movlw	246
  1815  0222  00B1               	movwf	??_LECT1+4
  1816  0223  0831               	movf	??_LECT1+4,w
  1817  0224  00F4               	movwf	___bmul@multiplicand
  1818  0225  0876               	movf	_Cen1,w
  1819  0226  120A  118A  24A2  120A  118A  	fcall	___bmul
  1820  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1821  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1822  022D  072F               	addwf	??_LECT1+2,w
  1823  022E  00B2               	movwf	??_LECT1+5
  1824  022F  0832               	movf	??_LECT1+5,w
  1825  0230  00C7               	movwf	_Dec1
  1826                           
  1827                           ;main.c: 152:     Un1 = (100*v1)/51-(Cen1*100+Dec1*10);
  1828  0231  3033               	movlw	51
  1829  0232  00A4               	movwf	___awdiv@divisor
  1830  0233  3000               	movlw	0
  1831  0234  00A5               	movwf	___awdiv@divisor+1
  1832  0235  0879               	movf	_v1,w
  1833  0236  00AD               	movwf	??_LECT1
  1834  0237  01AE               	clrf	??_LECT1+1
  1835  0238  082D               	movf	??_LECT1,w
  1836  0239  00A0               	movwf	___wmul@multiplier
  1837  023A  082E               	movf	??_LECT1+1,w
  1838  023B  00A1               	movwf	___wmul@multiplier+1
  1839  023C  3064               	movlw	100
  1840  023D  00A2               	movwf	___wmul@multiplicand
  1841  023E  3000               	movlw	0
  1842  023F  00A3               	movwf	___wmul@multiplicand+1
  1843  0240  120A  118A  2436  120A  118A  	fcall	___wmul
  1844  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1845  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1846  0247  0821               	movf	?___wmul+1,w
  1847  0248  00A7               	movwf	___awdiv@dividend+1
  1848  0249  0820               	movf	?___wmul,w
  1849  024A  00A6               	movwf	___awdiv@dividend
  1850  024B  120A  118A  2318  120A  118A  	fcall	___awdiv
  1851  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0252  0824               	movf	?___awdiv,w
  1854  0253  00AF               	movwf	??_LECT1+2
  1855  0254  0825               	movf	?___awdiv+1,w
  1856  0255  00B0               	movwf	??_LECT1+3
  1857  0256  309C               	movlw	156
  1858  0257  00B1               	movwf	??_LECT1+4
  1859  0258  0831               	movf	??_LECT1+4,w
  1860  0259  00F4               	movwf	___bmul@multiplicand
  1861  025A  0876               	movf	_Cen1,w
  1862  025B  120A  118A  24A2  120A  118A  	fcall	___bmul
  1863  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0262  00B2               	movwf	??_LECT1+5
  1866  0263  30F6               	movlw	246
  1867  0264  00B3               	movwf	??_LECT1+6
  1868  0265  0833               	movf	??_LECT1+6,w
  1869  0266  00F4               	movwf	___bmul@multiplicand
  1870  0267  0847               	movf	_Dec1,w
  1871  0268  120A  118A  24A2  120A  118A  	fcall	___bmul
  1872  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1873  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1874  026F  0732               	addwf	??_LECT1+5,w
  1875  0270  072F               	addwf	??_LECT1+2,w
  1876  0271  00B4               	movwf	??_LECT1+7
  1877  0272  0834               	movf	??_LECT1+7,w
  1878  0273  00C4               	movwf	_Un1
  1879  0274                     l1885:
  1880                           
  1881                           ;main.c: 153:     AC1 = num_ascii(Cen1);
  1882  0274  0876               	movf	_Cen1,w
  1883  0275  120A  118A  2381  120A  118A  	fcall	_num_ascii
  1884  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1885  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1886  027C  00AD               	movwf	??_LECT1
  1887  027D  082D               	movf	??_LECT1,w
  1888  027E  00C1               	movwf	_AC1
  1889  027F                     l1887:
  1890                           
  1891                           ;main.c: 154:     AD1 = num_ascii(Dec1);
  1892  027F  0847               	movf	_Dec1,w
  1893  0280  120A  118A  2381  120A  118A  	fcall	_num_ascii
  1894  0285  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0287  00AD               	movwf	??_LECT1
  1897  0288  082D               	movf	??_LECT1,w
  1898  0289  00BE               	movwf	_AD1
  1899  028A                     l1889:
  1900                           
  1901                           ;main.c: 155:     AU1 = num_ascii(Un1);
  1902  028A  0844               	movf	_Un1,w
  1903  028B  120A  118A  2381  120A  118A  	fcall	_num_ascii
  1904  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1906  0292  00AD               	movwf	??_LECT1
  1907  0293  082D               	movf	??_LECT1,w
  1908  0294  00BB               	movwf	_AU1
  1909  0295                     l141:
  1910  0295  0008               	return
  1911  0296                     __end_of_LECT1:
  1912                           
  1913                           	psect	text9
  1914  0381                     __ptext9:	
  1915 ;; *************** function _num_ascii *****************
  1916 ;; Defined at:
  1917 ;;		line 3 in file "ASCII_1.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  num             1    wreg     unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  num             1    0[BANK0 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      unsigned char 
  1924 ;; Registers used:
  1925 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       0       0       0       0
  1932 ;;      Locals:         0       1       0       0       0
  1933 ;;      Temps:          2       0       0       0       0
  1934 ;;      Totals:         2       1       0       0       0
  1935 ;;Total ram usage:        3 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 2
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_LECT1
  1942 ;;		_LECT2
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           
  1947                           ;psect for function _num_ascii
  1948  0381                     _num_ascii:
  1949                           
  1950                           ;incstack = 0
  1951                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  1952                           ;num_ascii@num stored from wreg
  1953  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0383  00A0               	movwf	num_ascii@num
  1956  0384                     l1733:
  1957                           
  1958                           ;ASCII_1.c: 4:  switch(num){
  1959  0384  2B99               	goto	l1803
  1960  0385                     l1735:
  1961                           
  1962                           ;ASCII_1.c: 6:   return 0x30;
  1963  0385  3030               	movlw	48
  1964  0386  2BC1               	goto	l230
  1965  0387                     l1747:
  1966                           
  1967                           ;ASCII_1.c: 14:   return 0x31;
  1968  0387  3031               	movlw	49
  1969  0388  2BC1               	goto	l230
  1970  0389                     l1753:
  1971                           
  1972                           ;ASCII_1.c: 18:   return 0x32;
  1973  0389  3032               	movlw	50
  1974  038A  2BC1               	goto	l230
  1975  038B                     l1759:
  1976                           
  1977                           ;ASCII_1.c: 22:   return 0x33;
  1978  038B  3033               	movlw	51
  1979  038C  2BC1               	goto	l230
  1980  038D                     l1765:
  1981                           
  1982                           ;ASCII_1.c: 26:   return 0x34;
  1983  038D  3034               	movlw	52
  1984  038E  2BC1               	goto	l230
  1985  038F                     l1771:
  1986                           
  1987                           ;ASCII_1.c: 30:   return 0x35;
  1988  038F  3035               	movlw	53
  1989  0390  2BC1               	goto	l230
  1990  0391                     l1777:
  1991                           
  1992                           ;ASCII_1.c: 34:   return 0x36;
  1993  0391  3036               	movlw	54
  1994  0392  2BC1               	goto	l230
  1995  0393                     l1783:
  1996                           
  1997                           ;ASCII_1.c: 38:   return 0x37;
  1998  0393  3037               	movlw	55
  1999  0394  2BC1               	goto	l230
  2000  0395                     l1789:
  2001                           
  2002                           ;ASCII_1.c: 42:   return 0x38;
  2003  0395  3038               	movlw	56
  2004  0396  2BC1               	goto	l230
  2005  0397                     l1795:
  2006                           
  2007                           ;ASCII_1.c: 46:   return 0x39;
  2008  0397  3039               	movlw	57
  2009  0398  2BC1               	goto	l230
  2010  0399                     l1803:
  2011  0399  0820               	movf	num_ascii@num,w
  2012  039A  00F4               	movwf	??_num_ascii
  2013  039B  01F5               	clrf	??_num_ascii+1
  2014                           
  2015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2016                           ; Switch size 1, requested type "simple"
  2017                           ; Number of cases is 1, Range of values is 0 to 0
  2018                           ; switch strategies available:
  2019                           ; Name         Instructions Cycles
  2020                           ; simple_byte            4     3 (average)
  2021                           ; direct_byte           11     8 (fixed)
  2022                           ; jumptable            260     6 (fixed)
  2023                           ;	Chosen strategy is simple_byte
  2024  039C  0875               	movf	??_num_ascii+1,w
  2025  039D  3A00               	xorlw	0	; case 0
  2026  039E  1903               	skipnz
  2027  039F  2BA1               	goto	l1971
  2028  03A0  2B85               	goto	l1735
  2029  03A1                     l1971:
  2030                           
  2031                           ; Switch size 1, requested type "simple"
  2032                           ; Number of cases is 10, Range of values is 0 to 9
  2033                           ; switch strategies available:
  2034                           ; Name         Instructions Cycles
  2035                           ; simple_byte           31    16 (average)
  2036                           ; direct_byte           38     8 (fixed)
  2037                           ; jumptable            260     6 (fixed)
  2038                           ;	Chosen strategy is simple_byte
  2039  03A1  0874               	movf	??_num_ascii,w
  2040  03A2  3A00               	xorlw	0	; case 0
  2041  03A3  1903               	skipnz
  2042  03A4  2B85               	goto	l1735
  2043  03A5  3A01               	xorlw	1	; case 1
  2044  03A6  1903               	skipnz
  2045  03A7  2B87               	goto	l1747
  2046  03A8  3A03               	xorlw	3	; case 2
  2047  03A9  1903               	skipnz
  2048  03AA  2B89               	goto	l1753
  2049  03AB  3A01               	xorlw	1	; case 3
  2050  03AC  1903               	skipnz
  2051  03AD  2B8B               	goto	l1759
  2052  03AE  3A07               	xorlw	7	; case 4
  2053  03AF  1903               	skipnz
  2054  03B0  2B8D               	goto	l1765
  2055  03B1  3A01               	xorlw	1	; case 5
  2056  03B2  1903               	skipnz
  2057  03B3  2B8F               	goto	l1771
  2058  03B4  3A03               	xorlw	3	; case 6
  2059  03B5  1903               	skipnz
  2060  03B6  2B91               	goto	l1777
  2061  03B7  3A01               	xorlw	1	; case 7
  2062  03B8  1903               	skipnz
  2063  03B9  2B93               	goto	l1783
  2064  03BA  3A0F               	xorlw	15	; case 8
  2065  03BB  1903               	skipnz
  2066  03BC  2B95               	goto	l1789
  2067  03BD  3A01               	xorlw	1	; case 9
  2068  03BE  1903               	skipnz
  2069  03BF  2B97               	goto	l1795
  2070  03C0  2B85               	goto	l1735
  2071  03C1                     l230:
  2072  03C1  0008               	return
  2073  03C2                     __end_of_num_ascii:
  2074                           
  2075                           	psect	text10
  2076  0436                     __ptext10:	
  2077 ;; *************** function ___wmul *****************
  2078 ;; Defined at:
  2079 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2082 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  product         2    4[COMMON] unsigned int 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2    0[BANK0 ] unsigned int 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         0       4       0       0       0
  2095 ;;      Locals:         2       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0
  2097 ;;      Totals:         2       4       0       0       0
  2098 ;;Total ram usage:        6 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; Hardware stack levels required when called: 2
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_LECT1
  2105 ;;		_LECT2
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function ___wmul
  2111  0436                     ___wmul:
  2112  0436                     l1811:	
  2113                           ;incstack = 0
  2114                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2115                           
  2116  0436  01F4               	clrf	___wmul@product
  2117  0437  01F5               	clrf	___wmul@product+1
  2118  0438                     l1813:
  2119  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2121  043A  1C20               	btfss	___wmul@multiplier,0
  2122  043B  2C3D               	goto	u1101
  2123  043C  2C3E               	goto	u1100
  2124  043D                     u1101:
  2125  043D  2C44               	goto	l327
  2126  043E                     u1100:
  2127  043E                     l1815:
  2128  043E  0822               	movf	___wmul@multiplicand,w
  2129  043F  07F4               	addwf	___wmul@product,f
  2130  0440  1803               	skipnc
  2131  0441  0AF5               	incf	___wmul@product+1,f
  2132  0442  0823               	movf	___wmul@multiplicand+1,w
  2133  0443  07F5               	addwf	___wmul@product+1,f
  2134  0444                     l327:
  2135  0444  3001               	movlw	1
  2136  0445                     u1115:
  2137  0445  1003               	clrc
  2138  0446  0DA2               	rlf	___wmul@multiplicand,f
  2139  0447  0DA3               	rlf	___wmul@multiplicand+1,f
  2140  0448  3EFF               	addlw	-1
  2141  0449  1D03               	skipz
  2142  044A  2C45               	goto	u1115
  2143  044B                     l1817:
  2144  044B  3001               	movlw	1
  2145  044C                     u1125:
  2146  044C  1003               	clrc
  2147  044D  0CA1               	rrf	___wmul@multiplier+1,f
  2148  044E  0CA0               	rrf	___wmul@multiplier,f
  2149  044F  3EFF               	addlw	-1
  2150  0450  1D03               	skipz
  2151  0451  2C4C               	goto	u1125
  2152  0452                     l1819:
  2153  0452  0820               	movf	___wmul@multiplier,w
  2154  0453  0421               	iorwf	___wmul@multiplier+1,w
  2155  0454  1D03               	btfss	3,2
  2156  0455  2C57               	goto	u1131
  2157  0456  2C58               	goto	u1130
  2158  0457                     u1131:
  2159  0457  2C38               	goto	l1813
  2160  0458                     u1130:
  2161  0458                     l1821:
  2162  0458  0875               	movf	___wmul@product+1,w
  2163  0459  00A1               	movwf	?___wmul+1
  2164  045A  0874               	movf	___wmul@product,w
  2165  045B  00A0               	movwf	?___wmul
  2166  045C                     l329:
  2167  045C  0008               	return
  2168  045D                     __end_of___wmul:
  2169                           
  2170                           	psect	text11
  2171  04A2                     __ptext11:	
  2172 ;; *************** function ___bmul *****************
  2173 ;; Defined at:
  2174 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  multiplier      1    wreg     unsigned char 
  2177 ;;  multiplicand    1    4[COMMON] unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2180 ;;  product         1    0[BANK0 ] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      unsigned char 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         1       0       0       0       0
  2191 ;;      Locals:         0       2       0       0       0
  2192 ;;      Temps:          1       0       0       0       0
  2193 ;;      Totals:         2       2       0       0       0
  2194 ;;Total ram usage:        4 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 2
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_LECT1
  2201 ;;		_LECT2
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function ___bmul
  2207  04A2                     ___bmul:
  2208                           
  2209                           ;incstack = 0
  2210                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2211                           ;___bmul@multiplier stored from wreg
  2212  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2213  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2214  04A4  00A1               	movwf	___bmul@multiplier
  2215  04A5                     l1825:
  2216  04A5  01A0               	clrf	___bmul@product
  2217  04A6                     l1827:
  2218  04A6  1C21               	btfss	___bmul@multiplier,0
  2219  04A7  2CA9               	goto	u1141
  2220  04A8  2CAA               	goto	u1140
  2221  04A9                     u1141:
  2222  04A9  2CAE               	goto	l1831
  2223  04AA                     u1140:
  2224  04AA                     l1829:
  2225  04AA  0874               	movf	___bmul@multiplicand,w
  2226  04AB  00F5               	movwf	??___bmul
  2227  04AC  0875               	movf	??___bmul,w
  2228  04AD  07A0               	addwf	___bmul@product,f
  2229  04AE                     l1831:
  2230  04AE  1003               	clrc
  2231  04AF  0DF4               	rlf	___bmul@multiplicand,f
  2232  04B0                     l1833:
  2233  04B0  1003               	clrc
  2234  04B1  0CA1               	rrf	___bmul@multiplier,f
  2235  04B2  0821               	movf	___bmul@multiplier,w
  2236  04B3  1D03               	btfss	3,2
  2237  04B4  2CB6               	goto	u1151
  2238  04B5  2CB7               	goto	u1150
  2239  04B6                     u1151:
  2240  04B6  2CA6               	goto	l1827
  2241  04B7                     u1150:
  2242  04B7                     l1835:
  2243  04B7  0820               	movf	___bmul@product,w
  2244  04B8                     l353:
  2245  04B8  0008               	return
  2246  04B9                     __end_of___bmul:
  2247                           
  2248                           	psect	text12
  2249  0318                     __ptext12:	
  2250 ;; *************** function ___awdiv *****************
  2251 ;; Defined at:
  2252 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  divisor         2    4[BANK0 ] int 
  2255 ;;  dividend        2    6[BANK0 ] int 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  quotient        2   11[BANK0 ] int 
  2258 ;;  sign            1   10[BANK0 ] unsigned char 
  2259 ;;  counter         1    9[BANK0 ] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2    4[BANK0 ] int 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         0       4       0       0       0
  2270 ;;      Locals:         0       4       0       0       0
  2271 ;;      Temps:          0       1       0       0       0
  2272 ;;      Totals:         0       9       0       0       0
  2273 ;;Total ram usage:        9 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 2
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_LECT1
  2280 ;;		_LECT2
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function ___awdiv
  2286  0318                     ___awdiv:
  2287  0318                     l1411:	
  2288                           ;incstack = 0
  2289                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2290                           
  2291  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2292  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2293  031A  01AA               	clrf	___awdiv@sign
  2294  031B                     l1413:
  2295  031B  1FA5               	btfss	___awdiv@divisor+1,7
  2296  031C  2B1E               	goto	u631
  2297  031D  2B1F               	goto	u630
  2298  031E                     u631:
  2299  031E  2B26               	goto	l1419
  2300  031F                     u630:
  2301  031F                     l1415:
  2302  031F  09A4               	comf	___awdiv@divisor,f
  2303  0320  09A5               	comf	___awdiv@divisor+1,f
  2304  0321  0AA4               	incf	___awdiv@divisor,f
  2305  0322  1903               	skipnz
  2306  0323  0AA5               	incf	___awdiv@divisor+1,f
  2307  0324                     l1417:
  2308  0324  01AA               	clrf	___awdiv@sign
  2309  0325  0AAA               	incf	___awdiv@sign,f
  2310  0326                     l1419:
  2311  0326  1FA7               	btfss	___awdiv@dividend+1,7
  2312  0327  2B29               	goto	u641
  2313  0328  2B2A               	goto	u640
  2314  0329                     u641:
  2315  0329  2B33               	goto	l1425
  2316  032A                     u640:
  2317  032A                     l1421:
  2318  032A  09A6               	comf	___awdiv@dividend,f
  2319  032B  09A7               	comf	___awdiv@dividend+1,f
  2320  032C  0AA6               	incf	___awdiv@dividend,f
  2321  032D  1903               	skipnz
  2322  032E  0AA7               	incf	___awdiv@dividend+1,f
  2323  032F                     l1423:
  2324  032F  3001               	movlw	1
  2325  0330  00A8               	movwf	??___awdiv
  2326  0331  0828               	movf	??___awdiv,w
  2327  0332  06AA               	xorwf	___awdiv@sign,f
  2328  0333                     l1425:
  2329  0333  01AB               	clrf	___awdiv@quotient
  2330  0334  01AC               	clrf	___awdiv@quotient+1
  2331  0335                     l1427:
  2332  0335  0824               	movf	___awdiv@divisor,w
  2333  0336  0425               	iorwf	___awdiv@divisor+1,w
  2334  0337  1903               	btfsc	3,2
  2335  0338  2B3A               	goto	u651
  2336  0339  2B3B               	goto	u650
  2337  033A                     u651:
  2338  033A  2B72               	goto	l1447
  2339  033B                     u650:
  2340  033B                     l1429:
  2341  033B  01A9               	clrf	___awdiv@counter
  2342  033C  0AA9               	incf	___awdiv@counter,f
  2343  033D  2B49               	goto	l1435
  2344  033E                     l1431:
  2345  033E  3001               	movlw	1
  2346  033F                     u665:
  2347  033F  1003               	clrc
  2348  0340  0DA4               	rlf	___awdiv@divisor,f
  2349  0341  0DA5               	rlf	___awdiv@divisor+1,f
  2350  0342  3EFF               	addlw	-1
  2351  0343  1D03               	skipz
  2352  0344  2B3F               	goto	u665
  2353  0345                     l1433:
  2354  0345  3001               	movlw	1
  2355  0346  00A8               	movwf	??___awdiv
  2356  0347  0828               	movf	??___awdiv,w
  2357  0348  07A9               	addwf	___awdiv@counter,f
  2358  0349                     l1435:
  2359  0349  1FA5               	btfss	___awdiv@divisor+1,7
  2360  034A  2B4C               	goto	u671
  2361  034B  2B4D               	goto	u670
  2362  034C                     u671:
  2363  034C  2B3E               	goto	l1431
  2364  034D                     u670:
  2365  034D                     l1437:
  2366  034D  3001               	movlw	1
  2367  034E                     u685:
  2368  034E  1003               	clrc
  2369  034F  0DAB               	rlf	___awdiv@quotient,f
  2370  0350  0DAC               	rlf	___awdiv@quotient+1,f
  2371  0351  3EFF               	addlw	-1
  2372  0352  1D03               	skipz
  2373  0353  2B4E               	goto	u685
  2374  0354  0825               	movf	___awdiv@divisor+1,w
  2375  0355  0227               	subwf	___awdiv@dividend+1,w
  2376  0356  1D03               	skipz
  2377  0357  2B5A               	goto	u695
  2378  0358  0824               	movf	___awdiv@divisor,w
  2379  0359  0226               	subwf	___awdiv@dividend,w
  2380  035A                     u695:
  2381  035A  1C03               	skipc
  2382  035B  2B5D               	goto	u691
  2383  035C  2B5E               	goto	u690
  2384  035D                     u691:
  2385  035D  2B65               	goto	l1443
  2386  035E                     u690:
  2387  035E                     l1439:
  2388  035E  0824               	movf	___awdiv@divisor,w
  2389  035F  02A6               	subwf	___awdiv@dividend,f
  2390  0360  0825               	movf	___awdiv@divisor+1,w
  2391  0361  1C03               	skipc
  2392  0362  03A7               	decf	___awdiv@dividend+1,f
  2393  0363  02A7               	subwf	___awdiv@dividend+1,f
  2394  0364                     l1441:
  2395  0364  142B               	bsf	___awdiv@quotient,0
  2396  0365                     l1443:
  2397  0365  3001               	movlw	1
  2398  0366                     u705:
  2399  0366  1003               	clrc
  2400  0367  0CA5               	rrf	___awdiv@divisor+1,f
  2401  0368  0CA4               	rrf	___awdiv@divisor,f
  2402  0369  3EFF               	addlw	-1
  2403  036A  1D03               	skipz
  2404  036B  2B66               	goto	u705
  2405  036C                     l1445:
  2406  036C  3001               	movlw	1
  2407  036D  02A9               	subwf	___awdiv@counter,f
  2408  036E  1D03               	btfss	3,2
  2409  036F  2B71               	goto	u711
  2410  0370  2B72               	goto	u710
  2411  0371                     u711:
  2412  0371  2B4D               	goto	l1437
  2413  0372                     u710:
  2414  0372                     l1447:
  2415  0372  082A               	movf	___awdiv@sign,w
  2416  0373  1903               	btfsc	3,2
  2417  0374  2B76               	goto	u721
  2418  0375  2B77               	goto	u720
  2419  0376                     u721:
  2420  0376  2B7C               	goto	l1451
  2421  0377                     u720:
  2422  0377                     l1449:
  2423  0377  09AB               	comf	___awdiv@quotient,f
  2424  0378  09AC               	comf	___awdiv@quotient+1,f
  2425  0379  0AAB               	incf	___awdiv@quotient,f
  2426  037A  1903               	skipnz
  2427  037B  0AAC               	incf	___awdiv@quotient+1,f
  2428  037C                     l1451:
  2429  037C  082C               	movf	___awdiv@quotient+1,w
  2430  037D  00A5               	movwf	?___awdiv+1
  2431  037E  082B               	movf	___awdiv@quotient,w
  2432  037F  00A4               	movwf	?___awdiv
  2433  0380                     l480:
  2434  0380  0008               	return
  2435  0381                     __end_of___awdiv:
  2436                           
  2437                           	psect	text13
  2438  03FF                     __ptext13:	
  2439 ;; *************** function _CONTADOR *****************
  2440 ;; Defined at:
  2441 ;;		line 241 in file "main.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0
  2457 ;;      Temps:          1       0       0       0       0
  2458 ;;      Totals:         1       0       0       0       0
  2459 ;;Total ram usage:        1 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 2
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_main
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _CONTADOR
  2471  03FF                     _CONTADOR:
  2472  03FF                     l1605:	
  2473                           ;incstack = 0
  2474                           ; Regs used in _CONTADOR: [wreg+status,2+status,0]
  2475                           
  2476                           
  2477                           ;main.c: 242:     if (signo == 43){
  2478  03FF  302B               	movlw	43
  2479  0400  0677               	xorwf	_signo,w
  2480  0401  1D03               	btfss	3,2
  2481  0402  2C04               	goto	u971
  2482  0403  2C05               	goto	u970
  2483  0404                     u971:
  2484  0404  2C09               	goto	l1609
  2485  0405                     u970:
  2486  0405                     l1607:
  2487                           
  2488                           ;main.c: 243:         sum = 1;
  2489  0405  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0406  1303               	bcf	3,6	;RP1=0, select bank0
  2491  0407  01CC               	clrf	_sum
  2492  0408  0ACC               	incf	_sum,f
  2493  0409                     l1609:
  2494                           
  2495                           ;main.c: 246:     if (signo == 13 && sum == 1){
  2496  0409  300D               	movlw	13
  2497  040A  0677               	xorwf	_signo,w
  2498  040B  1D03               	btfss	3,2
  2499  040C  2C0E               	goto	u981
  2500  040D  2C0F               	goto	u980
  2501  040E                     u981:
  2502  040E  2C1B               	goto	l1617
  2503  040F                     u980:
  2504  040F                     l1611:
  2505  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0411  034C               	decf	_sum,w
  2508  0412  1D03               	btfss	3,2
  2509  0413  2C15               	goto	u991
  2510  0414  2C16               	goto	u990
  2511  0415                     u991:
  2512  0415  2C1B               	goto	l1617
  2513  0416                     u990:
  2514  0416                     l1613:
  2515                           
  2516                           ;main.c: 247:             sum = 0;
  2517  0416  01CC               	clrf	_sum
  2518  0417                     l1615:
  2519                           
  2520                           ;main.c: 248:             PORTD++;
  2521  0417  3001               	movlw	1
  2522  0418  00F4               	movwf	??_CONTADOR
  2523  0419  0874               	movf	??_CONTADOR,w
  2524  041A  0788               	addwf	8,f	;volatile
  2525  041B                     l1617:
  2526                           
  2527                           ;main.c: 251:     if (signo == 45){
  2528  041B  302D               	movlw	45
  2529  041C  0677               	xorwf	_signo,w
  2530  041D  1D03               	btfss	3,2
  2531  041E  2C20               	goto	u1001
  2532  041F  2C21               	goto	u1000
  2533  0420                     u1001:
  2534  0420  2C25               	goto	l1621
  2535  0421                     u1000:
  2536  0421                     l1619:
  2537                           
  2538                           ;main.c: 252:         res = 1;
  2539  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0423  01CB               	clrf	_res
  2542  0424  0ACB               	incf	_res,f
  2543  0425                     l1621:
  2544                           
  2545                           ;main.c: 255:     if(signo ==13 && res == 1){
  2546  0425  300D               	movlw	13
  2547  0426  0677               	xorwf	_signo,w
  2548  0427  1D03               	btfss	3,2
  2549  0428  2C2A               	goto	u1011
  2550  0429  2C2B               	goto	u1010
  2551  042A                     u1011:
  2552  042A  2C35               	goto	l178
  2553  042B                     u1010:
  2554  042B                     l1623:
  2555  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2556  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2557  042D  034B               	decf	_res,w
  2558  042E  1D03               	btfss	3,2
  2559  042F  2C31               	goto	u1021
  2560  0430  2C32               	goto	u1020
  2561  0431                     u1021:
  2562  0431  2C35               	goto	l178
  2563  0432                     u1020:
  2564  0432                     l1625:
  2565                           
  2566                           ;main.c: 256:         res = 0;
  2567  0432  01CB               	clrf	_res
  2568  0433                     l1627:
  2569                           
  2570                           ;main.c: 257:         PORTD--;
  2571  0433  3001               	movlw	1
  2572  0434  0288               	subwf	8,f	;volatile
  2573  0435                     l178:
  2574  0435  0008               	return
  2575  0436                     __end_of_CONTADOR:
  2576                           
  2577                           	psect	text14
  2578  045D                     __ptext14:	
  2579 ;; *************** function _ISR *****************
  2580 ;; Defined at:
  2581 ;;		line 72 in file "main.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0
  2597 ;;      Temps:          3       0       0       0       0
  2598 ;;      Totals:         3       0       0       0       0
  2599 ;;Total ram usage:        3 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 1
  2602 ;; This function calls:
  2603 ;;		_envio
  2604 ;; This function is called by:
  2605 ;;		Interrupt level 1
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           
  2610                           ;psect for function _ISR
  2611  045D                     _ISR:
  2612  045D                     i1l1645:
  2613                           
  2614                           ;main.c: 73:     if(INTCONbits.TMR0IF == 1){
  2615  045D  1D0B               	btfss	11,2	;volatile
  2616  045E  2C60               	goto	u103_21
  2617  045F  2C61               	goto	u103_20
  2618  0460                     u103_21:
  2619  0460  2C66               	goto	i1l1651
  2620  0461                     u103_20:
  2621  0461                     i1l1647:
  2622                           
  2623                           ;main.c: 74:         INTCONbits.TMR0IF = 0;
  2624  0461  110B               	bcf	11,2	;volatile
  2625  0462                     i1l1649:
  2626                           
  2627                           ;main.c: 75:         TMR0 = 216;
  2628  0462  30D8               	movlw	216
  2629  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0465  0081               	movwf	1	;volatile
  2632  0466                     i1l1651:
  2633                           
  2634                           ;main.c: 77:     if (PIR1bits.TXIF == 1){
  2635  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0468  1E0C               	btfss	12,4	;volatile
  2638  0469  2C6B               	goto	u104_21
  2639  046A  2C6C               	goto	u104_20
  2640  046B                     u104_21:
  2641  046B  2C74               	goto	i1l1657
  2642  046C                     u104_20:
  2643  046C                     i1l1653:
  2644                           
  2645                           ;main.c: 78:         envio();
  2646  046C  120A  118A  2020  120A  118A  	fcall	_envio
  2647  0471                     i1l1655:
  2648                           
  2649                           ;main.c: 79:         PIE1bits.TXIE = 0;
  2650  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0473  120C               	bcf	12,4	;volatile
  2653  0474                     i1l1657:
  2654                           
  2655                           ;main.c: 81:     if (PIR1bits.RCIF == 1){
  2656  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0475  1E8C               	btfss	12,5	;volatile
  2658  0476  2C78               	goto	u105_21
  2659  0477  2C79               	goto	u105_20
  2660  0478                     u105_21:
  2661  0478  2C7D               	goto	i1l126
  2662  0479                     u105_20:
  2663  0479                     i1l1659:
  2664                           
  2665                           ;main.c: 82:         signo = RCREG;
  2666  0479  081A               	movf	26,w	;volatile
  2667  047A  00F1               	movwf	??_ISR
  2668  047B  0871               	movf	??_ISR,w
  2669  047C  00F7               	movwf	_signo
  2670  047D                     i1l126:
  2671  047D  0873               	movf	??_ISR+2,w
  2672  047E  008A               	movwf	10
  2673  047F  0E72               	swapf	??_ISR+1,w
  2674  0480  0083               	movwf	3
  2675  0481  0EFE               	swapf	btemp,f
  2676  0482  0E7E               	swapf	btemp,w
  2677  0483  0009               	retfie
  2678  0484                     __end_of_ISR:
  2679                           
  2680                           	psect	intentry
  2681  0004                     __pintentry:	
  2682                           ;incstack = 0
  2683                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2684                           
  2685  0004                     interrupt_function:
  2686  007E                     saved_w	set	btemp
  2687  0004  00FE               	movwf	btemp
  2688  0005  0E03               	swapf	3,w
  2689  0006  00F2               	movwf	??_ISR+1
  2690  0007  080A               	movf	10,w
  2691  0008  00F3               	movwf	??_ISR+2
  2692  0009  120A  118A  2C5D   	ljmp	_ISR
  2693                           
  2694                           	psect	text15
  2695  0020                     __ptext15:	
  2696 ;; *************** function _envio *****************
  2697 ;; Defined at:
  2698 ;;		line 165 in file "main.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2712 ;;      Params:         0       0       0       0       0
  2713 ;;      Locals:         0       0       0       0       0
  2714 ;;      Temps:          1       0       0       0       0
  2715 ;;      Totals:         1       0       0       0       0
  2716 ;;Total ram usage:        1 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_ISR
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _envio
  2727  0020                     _envio:
  2728  0020                     i1l1455:	
  2729                           ;incstack = 0
  2730                           ; Regs used in _envio: [wreg+status,2+status,0]
  2731                           
  2732                           
  2733                           ;main.c: 166:     toggleTX++;
  2734  0020  3001               	movlw	1
  2735  0021  00F0               	movwf	??_envio
  2736  0022  0870               	movf	??_envio,w
  2737  0023  07F8               	addwf	_toggleTX,f
  2738                           
  2739                           ;main.c: 167:     if (toggleTX == 1){
  2740  0024  0378               	decf	_toggleTX,w
  2741  0025  1D03               	btfss	3,2
  2742  0026  2828               	goto	u73_21
  2743  0027  2829               	goto	u73_20
  2744  0028                     u73_21:
  2745  0028  282D               	goto	i1l1459
  2746  0029                     u73_20:
  2747  0029                     i1l1457:
  2748                           
  2749                           ;main.c: 168:         TXREG = 0x50;
  2750  0029  3050               	movlw	80
  2751  002A  1283               	bcf	3,5	;RP0=0, select bank0
  2752  002B  1303               	bcf	3,6	;RP1=0, select bank0
  2753  002C  0099               	movwf	25	;volatile
  2754  002D                     i1l1459:
  2755                           
  2756                           ;main.c: 170:     if (toggleTX == 2){
  2757  002D  3002               	movlw	2
  2758  002E  0678               	xorwf	_toggleTX,w
  2759  002F  1D03               	btfss	3,2
  2760  0030  2832               	goto	u74_21
  2761  0031  2833               	goto	u74_20
  2762  0032                     u74_21:
  2763  0032  2837               	goto	i1l1463
  2764  0033                     u74_20:
  2765  0033                     i1l1461:
  2766                           
  2767                           ;main.c: 171:         TXREG = 0x4F;
  2768  0033  304F               	movlw	79
  2769  0034  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0035  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0036  0099               	movwf	25	;volatile
  2772  0037                     i1l1463:
  2773                           
  2774                           ;main.c: 173:     if (toggleTX == 3){
  2775  0037  3003               	movlw	3
  2776  0038  0678               	xorwf	_toggleTX,w
  2777  0039  1D03               	btfss	3,2
  2778  003A  283C               	goto	u75_21
  2779  003B  283D               	goto	u75_20
  2780  003C                     u75_21:
  2781  003C  2841               	goto	i1l1467
  2782  003D                     u75_20:
  2783  003D                     i1l1465:
  2784                           
  2785                           ;main.c: 174:         TXREG = 0x54;
  2786  003D  3054               	movlw	84
  2787  003E  1283               	bcf	3,5	;RP0=0, select bank0
  2788  003F  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0040  0099               	movwf	25	;volatile
  2790  0041                     i1l1467:
  2791                           
  2792                           ;main.c: 176:     if (toggleTX == 4){
  2793  0041  3004               	movlw	4
  2794  0042  0678               	xorwf	_toggleTX,w
  2795  0043  1D03               	btfss	3,2
  2796  0044  2846               	goto	u76_21
  2797  0045  2847               	goto	u76_20
  2798  0046                     u76_21:
  2799  0046  284B               	goto	i1l1471
  2800  0047                     u76_20:
  2801  0047                     i1l1469:
  2802                           
  2803                           ;main.c: 177:         TXREG = 0x31;
  2804  0047  3031               	movlw	49
  2805  0048  1283               	bcf	3,5	;RP0=0, select bank0
  2806  0049  1303               	bcf	3,6	;RP1=0, select bank0
  2807  004A  0099               	movwf	25	;volatile
  2808  004B                     i1l1471:
  2809                           
  2810                           ;main.c: 179:     if (toggleTX == 5){
  2811  004B  3005               	movlw	5
  2812  004C  0678               	xorwf	_toggleTX,w
  2813  004D  1D03               	btfss	3,2
  2814  004E  2850               	goto	u77_21
  2815  004F  2851               	goto	u77_20
  2816  0050                     u77_21:
  2817  0050  2855               	goto	i1l1475
  2818  0051                     u77_20:
  2819  0051                     i1l1473:
  2820                           
  2821                           ;main.c: 180:         TXREG = 0x3A;
  2822  0051  303A               	movlw	58
  2823  0052  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0053  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0054  0099               	movwf	25	;volatile
  2826  0055                     i1l1475:
  2827                           
  2828                           ;main.c: 182:     if (toggleTX == 6){
  2829  0055  3006               	movlw	6
  2830  0056  0678               	xorwf	_toggleTX,w
  2831  0057  1D03               	btfss	3,2
  2832  0058  285A               	goto	u78_21
  2833  0059  285B               	goto	u78_20
  2834  005A                     u78_21:
  2835  005A  285F               	goto	i1l1479
  2836  005B                     u78_20:
  2837  005B                     i1l1477:
  2838                           
  2839                           ;main.c: 183:         TXREG = 0x20;
  2840  005B  3020               	movlw	32
  2841  005C  1283               	bcf	3,5	;RP0=0, select bank0
  2842  005D  1303               	bcf	3,6	;RP1=0, select bank0
  2843  005E  0099               	movwf	25	;volatile
  2844  005F                     i1l1479:
  2845                           
  2846                           ;main.c: 185:     if (toggleTX == 7){
  2847  005F  3007               	movlw	7
  2848  0060  0678               	xorwf	_toggleTX,w
  2849  0061  1D03               	btfss	3,2
  2850  0062  2864               	goto	u79_21
  2851  0063  2865               	goto	u79_20
  2852  0064                     u79_21:
  2853  0064  2869               	goto	i1l1483
  2854  0065                     u79_20:
  2855  0065                     i1l1481:
  2856                           
  2857                           ;main.c: 186:         TXREG = AC1;
  2858  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0067  0841               	movf	_AC1,w
  2861  0068  0099               	movwf	25	;volatile
  2862  0069                     i1l1483:
  2863                           
  2864                           ;main.c: 188:     if (toggleTX == 8){
  2865  0069  3008               	movlw	8
  2866  006A  0678               	xorwf	_toggleTX,w
  2867  006B  1D03               	btfss	3,2
  2868  006C  286E               	goto	u80_21
  2869  006D  286F               	goto	u80_20
  2870  006E                     u80_21:
  2871  006E  2873               	goto	i1l1487
  2872  006F                     u80_20:
  2873  006F                     i1l1485:
  2874                           
  2875                           ;main.c: 189:         TXREG = 0x2E;
  2876  006F  302E               	movlw	46
  2877  0070  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0071  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0072  0099               	movwf	25	;volatile
  2880  0073                     i1l1487:
  2881                           
  2882                           ;main.c: 191:     if (toggleTX == 9){
  2883  0073  3009               	movlw	9
  2884  0074  0678               	xorwf	_toggleTX,w
  2885  0075  1D03               	btfss	3,2
  2886  0076  2878               	goto	u81_21
  2887  0077  2879               	goto	u81_20
  2888  0078                     u81_21:
  2889  0078  287D               	goto	i1l1491
  2890  0079                     u81_20:
  2891  0079                     i1l1489:
  2892                           
  2893                           ;main.c: 192:         TXREG = AD1;
  2894  0079  1283               	bcf	3,5	;RP0=0, select bank0
  2895  007A  1303               	bcf	3,6	;RP1=0, select bank0
  2896  007B  083E               	movf	_AD1,w
  2897  007C  0099               	movwf	25	;volatile
  2898  007D                     i1l1491:
  2899                           
  2900                           ;main.c: 194:     if (toggleTX == 10){
  2901  007D  300A               	movlw	10
  2902  007E  0678               	xorwf	_toggleTX,w
  2903  007F  1D03               	btfss	3,2
  2904  0080  2882               	goto	u82_21
  2905  0081  2883               	goto	u82_20
  2906  0082                     u82_21:
  2907  0082  2887               	goto	i1l1495
  2908  0083                     u82_20:
  2909  0083                     i1l1493:
  2910                           
  2911                           ;main.c: 195:         TXREG = AU1;
  2912  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0084  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0085  083B               	movf	_AU1,w
  2915  0086  0099               	movwf	25	;volatile
  2916  0087                     i1l1495:
  2917                           
  2918                           ;main.c: 197:     if (toggleTX == 11){
  2919  0087  300B               	movlw	11
  2920  0088  0678               	xorwf	_toggleTX,w
  2921  0089  1D03               	btfss	3,2
  2922  008A  288C               	goto	u83_21
  2923  008B  288D               	goto	u83_20
  2924  008C                     u83_21:
  2925  008C  2891               	goto	i1l1499
  2926  008D                     u83_20:
  2927  008D                     i1l1497:
  2928                           
  2929                           ;main.c: 198:         TXREG = 0x76;
  2930  008D  3076               	movlw	118
  2931  008E  1283               	bcf	3,5	;RP0=0, select bank0
  2932  008F  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0090  0099               	movwf	25	;volatile
  2934  0091                     i1l1499:
  2935                           
  2936                           ;main.c: 200:     if (toggleTX == 12){
  2937  0091  300C               	movlw	12
  2938  0092  0678               	xorwf	_toggleTX,w
  2939  0093  1D03               	btfss	3,2
  2940  0094  2896               	goto	u84_21
  2941  0095  2897               	goto	u84_20
  2942  0096                     u84_21:
  2943  0096  289B               	goto	i1l1503
  2944  0097                     u84_20:
  2945  0097                     i1l1501:
  2946                           
  2947                           ;main.c: 201:         TXREG = 0x2C;
  2948  0097  302C               	movlw	44
  2949  0098  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0099  1303               	bcf	3,6	;RP1=0, select bank0
  2951  009A  0099               	movwf	25	;volatile
  2952  009B                     i1l1503:
  2953                           
  2954                           ;main.c: 203:     if (toggleTX == 13){
  2955  009B  300D               	movlw	13
  2956  009C  0678               	xorwf	_toggleTX,w
  2957  009D  1D03               	btfss	3,2
  2958  009E  28A0               	goto	u85_21
  2959  009F  28A1               	goto	u85_20
  2960  00A0                     u85_21:
  2961  00A0  28A5               	goto	i1l1507
  2962  00A1                     u85_20:
  2963  00A1                     i1l1505:
  2964                           
  2965                           ;main.c: 204:         TXREG = 0x20;
  2966  00A1  3020               	movlw	32
  2967  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  2968  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  2969  00A4  0099               	movwf	25	;volatile
  2970  00A5                     i1l1507:
  2971                           
  2972                           ;main.c: 206:     if (toggleTX == 14){
  2973  00A5  300E               	movlw	14
  2974  00A6  0678               	xorwf	_toggleTX,w
  2975  00A7  1D03               	btfss	3,2
  2976  00A8  28AA               	goto	u86_21
  2977  00A9  28AB               	goto	u86_20
  2978  00AA                     u86_21:
  2979  00AA  28AF               	goto	i1l1511
  2980  00AB                     u86_20:
  2981  00AB                     i1l1509:
  2982                           
  2983                           ;main.c: 207:         TXREG = 0x50;
  2984  00AB  3050               	movlw	80
  2985  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2986  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2987  00AE  0099               	movwf	25	;volatile
  2988  00AF                     i1l1511:
  2989                           
  2990                           ;main.c: 209:     if (toggleTX == 15){
  2991  00AF  300F               	movlw	15
  2992  00B0  0678               	xorwf	_toggleTX,w
  2993  00B1  1D03               	btfss	3,2
  2994  00B2  28B4               	goto	u87_21
  2995  00B3  28B5               	goto	u87_20
  2996  00B4                     u87_21:
  2997  00B4  28B9               	goto	i1l1515
  2998  00B5                     u87_20:
  2999  00B5                     i1l1513:
  3000                           
  3001                           ;main.c: 210:         TXREG = 0x4F;
  3002  00B5  304F               	movlw	79
  3003  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  3004  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  3005  00B8  0099               	movwf	25	;volatile
  3006  00B9                     i1l1515:
  3007                           
  3008                           ;main.c: 212:     if (toggleTX == 16){
  3009  00B9  3010               	movlw	16
  3010  00BA  0678               	xorwf	_toggleTX,w
  3011  00BB  1D03               	btfss	3,2
  3012  00BC  28BE               	goto	u88_21
  3013  00BD  28BF               	goto	u88_20
  3014  00BE                     u88_21:
  3015  00BE  28C3               	goto	i1l1519
  3016  00BF                     u88_20:
  3017  00BF                     i1l1517:
  3018                           
  3019                           ;main.c: 213:         TXREG = 0x54;
  3020  00BF  3054               	movlw	84
  3021  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  3022  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  3023  00C2  0099               	movwf	25	;volatile
  3024  00C3                     i1l1519:
  3025                           
  3026                           ;main.c: 215:     if (toggleTX == 17){
  3027  00C3  3011               	movlw	17
  3028  00C4  0678               	xorwf	_toggleTX,w
  3029  00C5  1D03               	btfss	3,2
  3030  00C6  28C8               	goto	u89_21
  3031  00C7  28C9               	goto	u89_20
  3032  00C8                     u89_21:
  3033  00C8  28CD               	goto	i1l1523
  3034  00C9                     u89_20:
  3035  00C9                     i1l1521:
  3036                           
  3037                           ;main.c: 216:         TXREG = 0x32;
  3038  00C9  3032               	movlw	50
  3039  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  3040  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  3041  00CC  0099               	movwf	25	;volatile
  3042  00CD                     i1l1523:
  3043                           
  3044                           ;main.c: 218:     if (toggleTX == 18){
  3045  00CD  3012               	movlw	18
  3046  00CE  0678               	xorwf	_toggleTX,w
  3047  00CF  1D03               	btfss	3,2
  3048  00D0  28D2               	goto	u90_21
  3049  00D1  28D3               	goto	u90_20
  3050  00D2                     u90_21:
  3051  00D2  28D7               	goto	i1l1527
  3052  00D3                     u90_20:
  3053  00D3                     i1l1525:
  3054                           
  3055                           ;main.c: 219:         TXREG = 0x3A;
  3056  00D3  303A               	movlw	58
  3057  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  3058  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  3059  00D6  0099               	movwf	25	;volatile
  3060  00D7                     i1l1527:
  3061                           
  3062                           ;main.c: 221:     if (toggleTX == 19){
  3063  00D7  3013               	movlw	19
  3064  00D8  0678               	xorwf	_toggleTX,w
  3065  00D9  1D03               	btfss	3,2
  3066  00DA  28DC               	goto	u91_21
  3067  00DB  28DD               	goto	u91_20
  3068  00DC                     u91_21:
  3069  00DC  28E1               	goto	i1l1531
  3070  00DD                     u91_20:
  3071  00DD                     i1l1529:
  3072                           
  3073                           ;main.c: 222:         TXREG = AC2;
  3074  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  3075  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  3076  00DF  0840               	movf	_AC2,w
  3077  00E0  0099               	movwf	25	;volatile
  3078  00E1                     i1l1531:
  3079                           
  3080                           ;main.c: 224:     if (toggleTX == 20){
  3081  00E1  3014               	movlw	20
  3082  00E2  0678               	xorwf	_toggleTX,w
  3083  00E3  1D03               	btfss	3,2
  3084  00E4  28E6               	goto	u92_21
  3085  00E5  28E7               	goto	u92_20
  3086  00E6                     u92_21:
  3087  00E6  28EB               	goto	i1l1535
  3088  00E7                     u92_20:
  3089  00E7                     i1l1533:
  3090                           
  3091                           ;main.c: 225:         TXREG = 0x2E;
  3092  00E7  302E               	movlw	46
  3093  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  3094  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  3095  00EA  0099               	movwf	25	;volatile
  3096  00EB                     i1l1535:
  3097                           
  3098                           ;main.c: 227:     if (toggleTX == 21){
  3099  00EB  3015               	movlw	21
  3100  00EC  0678               	xorwf	_toggleTX,w
  3101  00ED  1D03               	btfss	3,2
  3102  00EE  28F0               	goto	u93_21
  3103  00EF  28F1               	goto	u93_20
  3104  00F0                     u93_21:
  3105  00F0  28F5               	goto	i1l1539
  3106  00F1                     u93_20:
  3107  00F1                     i1l1537:
  3108                           
  3109                           ;main.c: 228:         TXREG = AD2;
  3110  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  3111  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  3112  00F3  083D               	movf	_AD2,w
  3113  00F4  0099               	movwf	25	;volatile
  3114  00F5                     i1l1539:
  3115                           
  3116                           ;main.c: 230:     if (toggleTX == 22){
  3117  00F5  3016               	movlw	22
  3118  00F6  0678               	xorwf	_toggleTX,w
  3119  00F7  1D03               	btfss	3,2
  3120  00F8  28FA               	goto	u94_21
  3121  00F9  28FB               	goto	u94_20
  3122  00FA                     u94_21:
  3123  00FA  28FF               	goto	i1l1543
  3124  00FB                     u94_20:
  3125  00FB                     i1l1541:
  3126                           
  3127                           ;main.c: 231:         TXREG = AU2;
  3128  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  3129  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  3130  00FD  083A               	movf	_AU2,w
  3131  00FE  0099               	movwf	25	;volatile
  3132  00FF                     i1l1543:
  3133                           
  3134                           ;main.c: 233:     if (toggleTX == 23){
  3135  00FF  3017               	movlw	23
  3136  0100  0678               	xorwf	_toggleTX,w
  3137  0101  1D03               	btfss	3,2
  3138  0102  2904               	goto	u95_21
  3139  0103  2905               	goto	u95_20
  3140  0104                     u95_21:
  3141  0104  2909               	goto	i1l1547
  3142  0105                     u95_20:
  3143  0105                     i1l1545:
  3144                           
  3145                           ;main.c: 234:         TXREG = 0x76;
  3146  0105  3076               	movlw	118
  3147  0106  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0107  1303               	bcf	3,6	;RP1=0, select bank0
  3149  0108  0099               	movwf	25	;volatile
  3150  0109                     i1l1547:
  3151                           
  3152                           ;main.c: 236:     if (toggleTX == 24){
  3153  0109  3018               	movlw	24
  3154  010A  0678               	xorwf	_toggleTX,w
  3155  010B  1D03               	btfss	3,2
  3156  010C  290E               	goto	u96_21
  3157  010D  290F               	goto	u96_20
  3158  010E                     u96_21:
  3159  010E  2914               	goto	i1l171
  3160  010F                     u96_20:
  3161  010F                     i1l1549:
  3162                           
  3163                           ;main.c: 237:         TXREG = 13;
  3164  010F  300D               	movlw	13
  3165  0110  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0111  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0112  0099               	movwf	25	;volatile
  3168  0113                     i1l1551:
  3169                           
  3170                           ;main.c: 238:         toggleTX = 0;
  3171  0113  01F8               	clrf	_toggleTX
  3172  0114                     i1l171:
  3173  0114  0008               	return
  3174  0115                     __end_of_envio:
  3175  007E                     btemp	set	126	;btemp
  3176  007E                     wtemp0	set	126
  3177                           
  3178                           	psect	config
  3179                           
  3180                           ;Config register CONFIG1 @ 0x2007
  3181                           ;	Oscillator Selection bits
  3182                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3183                           ;	Watchdog Timer Enable bit
  3184                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3185                           ;	Power-up Timer Enable bit
  3186                           ;	PWRTE = OFF, PWRT disabled
  3187                           ;	RE3/MCLR pin function select bit
  3188                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3189                           ;	Code Protection bit
  3190                           ;	CP = OFF, Program memory code protection is disabled
  3191                           ;	Data Code Protection bit
  3192                           ;	CPD = OFF, Data memory code protection is disabled
  3193                           ;	Brown Out Reset Selection bits
  3194                           ;	BOREN = OFF, BOR disabled
  3195                           ;	Internal External Switchover bit
  3196                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3197                           ;	Fail-Safe Clock Monitor Enabled bit
  3198                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3199                           ;	Low Voltage Programming Enable bit
  3200                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3201                           ;	In-Circuit Debugger Mode bit
  3202                           ;	DEBUG = 0x1, unprogrammed default
  3203  2007                     	org	8199
  3204  2007  20D4               	dw	8404
  3205                           
  3206                           ;Config register CONFIG2 @ 0x2008
  3207                           ;	Brown-out Reset Selection bit
  3208                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3209                           ;	Flash Program Memory Self Write Enable bits
  3210                           ;	WRT = OFF, Write protection off
  3211  2008                     	org	8200
  3212  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     25      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _LECT2->___bmul
    _LECT2->___wmul
    _LECT2->_num_ascii
    _LECT1->___bmul
    _LECT1->___wmul
    _LECT1->_num_ascii
    ___awdiv->___wmul

Critical Paths under _ISR in COMMON

    _ISR->_envio

Critical Paths under _main in BANK0

    _main->_LECT2
    _setup->_spiInit
    _LECT2->___awdiv
    _LECT1->___awdiv
    ___awdiv->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6546
                                             23 BANK0      2     2      0
                           _CONTADOR
                              _LECT1
                              _LECT2
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                           _USARTcon
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _USARTcon                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LECT2                                               10    10      0    3051
                                             13 BANK0     10    10      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                8     8      0    3017
                                             13 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1036
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     586
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CONTADOR                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              1 COMMON     3     3      0
                              _envio
 ---------------------------------------------------------------------------------
 (4) _envio                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONTADOR
   _LECT1
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _LECT2
     ___awdiv
     ___bmul
     ___wmul
     _num_ascii
   _setup
     _USARTcon
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _ISR (ROOT)
   _envio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 02 18:28:04 2021

         ___bmul@product 0020              _SSPSTATbits 0094             ___awdiv@sign 002A  
                     _v1 0079                       _v2 004D                       fsr 0004  
    ___wmul@multiplicand 0022                      _AC1 0041                      _AC2 0040  
                    _AC3 003F                      _AD1 003E                      _AD2 003D  
                    _AD3 003C                      l201 04E6                      l212 04D7  
                    l204 04EC                      l141 0295                      l230 03C1  
                    l144 01E3                      l225 04CE                      l138 03FE  
                    l327 0444                      l353 04B8                      l329 045C  
                    l178 0435                      l194 049C                      l195 04A1  
                    l198 04E0                      l480 0380                      _AU1 003B  
                    _AU2 003A                      _AU3 0039                      _ISR 045D  
                    u710 0372                      u630 031F                      u711 0371  
                    u631 031E                      u720 0377                      u640 032A  
                    u560 04E6                      u721 0376                      u705 0366  
                    u641 0329                      u561 04E5                      u650 033B  
                    u651 033A                      u670 034D                      u671 034C  
                    u665 033F                      u690 035E                      u691 035D  
                    u685 034E                      u695 035A                      u970 0405  
                    u971 0404                      u980 040F                      u981 040E  
                    u990 0416                      u991 0415                      _Un1 0044  
                    _Un2 0043                      _Un3 0042                      _res 004B  
                    _sum 004C                      indf 0000                     ?_ISR 0070  
                   l1411 0318                     l1421 032A                     l1413 031B  
                   l1431 033E                     l1423 032F                     l1415 031F  
                   l1441 0364                     l1433 0345                     l1425 0333  
                   l1417 0324                     l1281 04B9                     l1601 04D4  
                   l1611 040F                     l1451 037C                     l1443 0365  
                   l1435 0349                     l1427 0335                     l1419 0326  
                   l1291 04CA                     l1283 04C1                     l1621 0425  
                   l1613 0416                     l1605 03FF                     l1445 036C  
                   l1437 034D                     l1429 033B                     l1293 04CB  
                   l1285 04C4                     l1381 04E0                     l1623 042B  
                   l1615 0417                     l1607 0405                     l1439 035E  
                   l1447 0372                     l1287 04C6                     l1625 0432  
                   l1617 041B                     l1609 0409                     l1449 0377  
                   l1289 04C9                     l1627 0433                     l1619 0421  
                   l1811 0436                     l1803 0399                     l1731 049B  
                   l1723 0485                     l1821 0458                     l1813 0438  
                   l1733 0384                     l1725 048C                     l1901 029B  
                   l1831 04AE                     l1815 043E                     l1735 0385  
                   l1727 0492                     l1911 02C2                     l1903 029E  
                   l1833 04B0                     l1825 04A5                     l1817 044B  
                   l1753 0389                     l1729 0494                     l1841 03CA  
                   l1921 02E0                     l1913 02C5                     l1905 02A8  
                   l1835 04B7                     l1827 04A6                     l1819 0452  
                   l1771 038F                     l1747 0387                     l1851 03D6  
                   l1843 03CB                     l1931 02FF                     l1923 02EA  
                   l1915 02C6                     l1907 02AE                     l1829 04AA  
                   l1765 038D                     l1861 03DB                     l1853 03D7  
                   l1845 03CC                     l1597 04E8                     l1933 0301  
                   l1925 02ED                     l1917 02D0                     l1909 02B8  
                   l1783 0393                     l1759 038B                     l1871 03E2  
                   l1863 03DC                     l1855 03D8                     l1847 03D3  
                   l1839 03C2                     l1599 04CF                     l1935 0306  
                   l1927 02F3                     l1919 02D6                     l1777 0391  
                   l1881 03F3                     l1873 03E3                     l1865 03DD  
                   l1857 03D9                     l1849 03D5                     l1937 030B  
                   l1929 02F9                     l1971 03A1                     l1795 0397  
                   l1883 01E4                     l1891 0115                     l1875 03EC  
                   l1867 03DE                     l1859 03DA                     l1939 0310  
                   l1789 0395                     l1885 0274                     l1893 01C2  
                   l1877 03ED                     l1869 03E1                     l1887 027F  
                   l1895 01CD                     l1879 03EE                     l1889 028A  
                   l1897 01D8                     l1899 0296                     u1000 0421  
                   u1001 0420                     u1010 042B                     u1011 042A  
                   u1020 0432                     u1100 043E                     u1021 0431  
                   u1101 043D                     u1130 0458                     u1131 0457  
                   u1115 0445                     u1140 04AA                     _CONT 004A  
                   u1141 04A9                     u1125 044C                     u1150 04B7  
                   u1151 04B6                     u1207 02BE                     u1160 02F3  
                   u1161 02F2                     u1217 02CC                     u1090 048C  
                   u1170 02F9                     u1091 048B                     u1171 02F8  
                   u1227 02E6                     u1180 02FF                     u1181 02FE  
                   u1197 02A4                     _TMR0 0001                     _Dec1 0047  
                   _Dec2 0046                     _Dec3 0045                     _Cen1 0076  
                   _Cen2 0049                     _Cen3 0048                     _main 0296  
                   btemp 007E                     start 000C        ___bmul@multiplier 0021  
       __end_of_CONTADOR 0436                    ??_ISR 0071                    ?_main 0070  
        __end_of___awdiv 0381                    _ANSEL 0188          ___awdiv@divisor 0024  
                  _LECT1 01E4                    _LECT2 0115                    i1l126 047D  
                  i1l171 0114          ___awdiv@counter 0029                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u80_20 006F                    u80_21 006E                    u81_20 0079  
                  u73_20 0029                    u81_21 0078                    u73_21 0028  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089                    u90_20 00D3                    u82_20 0083  
                  u74_20 0033                    u90_21 00D2                    u82_21 0082  
                  u74_21 0032                    u91_20 00DD                    u83_20 008D  
                  u75_20 003D                    u91_21 00DC                    u83_21 008C  
                  u75_21 003C                    u92_20 00E7                    u84_20 0097  
                  u76_20 0047                    u92_21 00E6                    u84_21 0096  
                  u76_21 0046                    u93_20 00F1                    u85_20 00A1  
                  u77_20 0051                    u93_21 00F0                    u85_21 00A0  
                  u77_21 0050                    u94_20 00FB                    u86_20 00AB  
                  u78_20 005B                    u94_21 00FA                    u86_21 00AA  
                  u78_21 005A                    u95_20 0105                    u87_20 00B5  
                  u79_20 0065                    u95_21 0104                    u87_21 00B4  
                  u79_21 0064                    u96_20 010F                    u88_20 00BF  
                  u96_21 010E                    u88_21 00BE                    u89_20 00C9  
                  u89_21 00C8                    _TXREG 0019                    _envio 0020  
                  _signo 0077                    _setup 03C2         __end_of_USARTcon 04CF  
                  pclath 000A          __end_of_spiInit 04A2          __end_of_spiRead 04D8  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0318                   ??_main 0037                   ?_LECT1 0070  
                 ?_LECT2 0070                   _ADCON1 009F                   ?_envio 0070  
       ___awdiv@dividend 0026                   ?_setup 0070                   _ANSELH 0189  
                 u103_20 0461                   u103_21 0460                   i1l1501 0097  
                 i1l1511 00AF                   i1l1503 009B                   u104_20 046C  
                 i1l1521 00C9                   i1l1513 00B5                   i1l1505 00A1  
                 u104_21 046B                   i1l1531 00E1                   i1l1523 00CD  
                 i1l1515 00B9                   i1l1507 00A5                   i1l1541 00FB  
                 i1l1533 00E7                   i1l1525 00D3                   i1l1517 00BF  
                 i1l1509 00AB                   i1l1461 0033                   i1l1551 0113  
                 i1l1543 00FF                   i1l1535 00EB                   i1l1527 00D7  
                 i1l1519 00C3                   i1l1471 004B                   i1l1463 0037  
                 i1l1455 0020                   u105_20 0479                   i1l1545 0105  
                 i1l1537 00F1                   i1l1529 00DD                   i1l1481 0065  
                 i1l1473 0051                   i1l1465 003D                   i1l1457 0029  
                 u105_21 0478                   i1l1547 0109                   i1l1539 00F5  
                 i1l1491 007D                   i1l1483 0069                   i1l1475 0055  
                 i1l1467 0041                   i1l1459 002D                   i1l1651 0466  
                 i1l1549 010F                   i1l1493 0083                   i1l1485 006F  
                 i1l1477 005B                   i1l1469 0047                   i1l1653 046C  
                 i1l1645 045D                   i1l1495 0087                   i1l1487 0073  
                 i1l1479 005F                   i1l1655 0471                   i1l1647 0461  
                 i1l1497 008D                   i1l1489 0079                   i1l1657 0474  
                 i1l1649 0462                   i1l1499 0091                   i1l1659 0479  
                 _SPBRGH 009A                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 ___bmul 04A2                   ___wmul 0436                ??___awdiv 0028  
       ___awdiv@quotient 002B                   saved_w 007E         __end_of_spiWrite 04ED  
              ??_spiInit 0074                ??_spiRead 0074                ?_CONTADOR 0070  
__end_of__initialization 001C            __end_of_LECT1 0296            __end_of_LECT2 01E4  
    ___bmul@multiplicand 0074           __pcstackCOMMON 0070            __end_of_envio 0115  
          __end_of_setup 03FF                ?_USARTcon 0070                  ??_LECT1 002D  
                ??_LECT2 002D                  ??_envio 0070                  ??_setup 0075  
             ??_CONTADOR 0074               __pbssBANK0 0039               __pmaintext 0296  
                ?___bmul 0074                  ?___wmul 0020               __pintentry 0004  
__size_of_spiReceiveWait 0007               ??_USARTcon 0074       __size_of_num_ascii 0041  
                _SSPSTAT 0094                ?_spiWrite 0070          __size_of___bmul 0017  
                ___awdiv 0318          __size_of___wmul 0027                  __ptext1 04E7  
                __ptext2 04CF                  __ptext3 04E0                  __ptext4 03C2  
                __ptext5 0484                  __ptext6 04B9                  __ptext7 0115  
                __ptext8 01E4                  __ptext9 0381             __size_of_ISR 0027  
                _spiInit 0484                  _spiRead 04CF                  clrloop0 04D9  
   end_of_initialization 001C        __end_of_num_ascii 03C2                _RCSTAbits 0018  
             ??_spiWrite 0074                _PORTCbits 0007                _TRISCbits 0087  
            spiWrite@dat 0074        __size_of_CONTADOR 0037                _TXSTAbits 0098  
         _spiReceiveWait 04E0           __end_of___bmul 04B9           __end_of___wmul 045D  
            _BAUDCTLbits 0187        __size_of_USARTcon 0016      start_initialization 000F  
            __end_of_ISR 0484   __end_of_spiReceiveWait 04E7                 ??___bmul 0075  
               ??___wmul 0074              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070                 ?___awdiv 0024  
      __size_of_spiWrite 0006           __size_of_LECT1 00B2           __size_of_LECT2 00CF  
               ?_spiInit 0020                 ?_spiRead 0070           __size_of_envio 00F5  
               _CONTADOR 03FF           __size_of_setup 003D     spiInit@sTransmitEdge 0022  
      interrupt_function 0004           ___wmul@product 0074                clear_ram0 04D8  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
              _num_ascii 0381                 _USARTcon 04B9        ___wmul@multiplier 0020  
             ?_num_ascii 0070         __size_of___awdiv 0069               _LECT2$1177 0035  
               __ptext10 0436                 __ptext11 04A2                 __ptext12 0318  
               __ptext13 03FF                 __ptext14 045D                 __ptext15 0020  
       __size_of_spiInit 001E         __size_of_spiRead 0009            __size_of_main 0082  
               _spiWrite 04E7                 _toggleTX 0078             spiInit@sType 0074  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0074             num_ascii@num 0020               _OSCCONbits 008F  
            ??_num_ascii 0074               _OPTION_REG 0081  
