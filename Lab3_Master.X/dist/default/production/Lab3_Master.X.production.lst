

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 31 20:59:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0018                     _RCSTAbits	set	24
   454  0013                     _SSPBUF	set	19
   455  0014                     _SSPCON	set	20
   456  0005                     _PORTAbits	set	5
   457  0019                     _TXREG	set	25
   458  0009                     _PORTE	set	9
   459  0008                     _PORTD	set	8
   460  0007                     _PORTC	set	7
   461  0005                     _PORTA	set	5
   462  0006                     _PORTB	set	6
   463  0007                     _PORTCbits	set	7
   464  001A                     _RCREG	set	26
   465  000C                     _PIR1bits	set	12
   466  0001                     _TMR0	set	1
   467  000B                     _INTCONbits	set	11
   468  0099                     _SPBRG	set	153
   469  009A                     _SPBRGH	set	154
   470  0098                     _TXSTAbits	set	152
   471  0094                     _SSPSTATbits	set	148
   472  0094                     _SSPSTAT	set	148
   473  0081                     _OPTION_REG	set	129
   474  009F                     _ADCON1	set	159
   475  008F                     _OSCCONbits	set	143
   476  0089                     _TRISE	set	137
   477  0088                     _TRISD	set	136
   478  0087                     _TRISCbits	set	135
   479  0086                     _TRISB	set	134
   480  0085                     _TRISA	set	133
   481  008C                     _PIE1bits	set	140
   482  043B                     _TRISC3	set	1083
   483  043D                     _TRISC5	set	1085
   484  043A                     _TRISC2	set	1082
   485  0187                     _BAUDCTLbits	set	391
   486  0189                     _ANSELH	set	393
   487  0188                     _ANSEL	set	392
   488                           
   489                           	psect	cinit
   490  000F                     start_initialization:	
   491                           ; #config settings
   492                           
   493  000F                     __initialization:
   494                           
   495                           ; Clear objects allocated to COMMON
   496  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   497  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   498  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   499  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   500                           
   501                           ; Clear objects allocated to BANK0
   502  0013  1383               	bcf	3,7	;select IRP bank0
   503  0014  3037               	movlw	low __pbssBANK0
   504  0015  0084               	movwf	4
   505  0016  304C               	movlw	low (__pbssBANK0+21)
   506  0017  120A  118A  232C  120A  118A  	fcall	clear_ram0
   507  001C                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510  001C                     __end_of__initialization:
   511  001C  0183               	clrf	3
   512  001D  120A  118A  293B   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssCOMMON
   515  0076                     __pbssCOMMON:
   516  0076                     _Cen1:
   517  0076                     	ds	1
   518  0077                     _signo:
   519  0077                     	ds	1
   520  0078                     _toggleTX:
   521  0078                     	ds	1
   522  0079                     _v1:
   523  0079                     	ds	1
   524                           
   525                           	psect	bssBANK0
   526  0037                     __pbssBANK0:
   527  0037                     _AU3:
   528  0037                     	ds	1
   529  0038                     _AU2:
   530  0038                     	ds	1
   531  0039                     _AU1:
   532  0039                     	ds	1
   533  003A                     _AD3:
   534  003A                     	ds	1
   535  003B                     _AD2:
   536  003B                     	ds	1
   537  003C                     _AD1:
   538  003C                     	ds	1
   539  003D                     _AC3:
   540  003D                     	ds	1
   541  003E                     _AC2:
   542  003E                     	ds	1
   543  003F                     _AC1:
   544  003F                     	ds	1
   545  0040                     _Un3:
   546  0040                     	ds	1
   547  0041                     _Un2:
   548  0041                     	ds	1
   549  0042                     _Un1:
   550  0042                     	ds	1
   551  0043                     _Dec3:
   552  0043                     	ds	1
   553  0044                     _Dec2:
   554  0044                     	ds	1
   555  0045                     _Dec1:
   556  0045                     	ds	1
   557  0046                     _Cen3:
   558  0046                     	ds	1
   559  0047                     _Cen2:
   560  0047                     	ds	1
   561  0048                     _CONT:
   562  0048                     	ds	1
   563  0049                     _res:
   564  0049                     	ds	1
   565  004A                     _sum:
   566  004A                     	ds	1
   567  004B                     _v2:
   568  004B                     	ds	1
   569                           
   570                           	psect	clrtext
   571  032C                     clear_ram0:	
   572                           ;	Called with FSR containing the base address, and
   573                           ;	W with the last address+1
   574                           
   575  032C  0064               	clrwdt	;clear the watchdog before getting into this loop
   576  032D                     clrloop0:
   577  032D  0180               	clrf	0	;clear RAM location pointed to by FSR
   578  032E  0A84               	incf	4,f	;increment pointer
   579  032F  0604               	xorwf	4,w	;XOR with final address
   580  0330  1903               	btfsc	3,2	;have we reached the end yet?
   581  0331  3400               	retlw	0	;all done for this memory range, return
   582  0332  0604               	xorwf	4,w	;XOR again to restore value
   583  0333  2B2D               	goto	clrloop0	;do the next byte
   584                           
   585                           	psect	cstackCOMMON
   586  0070                     __pcstackCOMMON:
   587  0070                     ?_envio:
   588  0070                     ??_envio:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_setup:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_spiWrite:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_spiRead:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_CONTADOR:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_LECT1:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_USARTcon:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_num_ascii:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_ISR:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_spiReceiveWait:	
   619                           ; 1 bytes @ 0x0
   620                           
   621                           
   622                           ; 1 bytes @ 0x0
   623  0070                     	ds	1
   624  0071                     ??_ISR:
   625                           
   626                           ; 1 bytes @ 0x1
   627  0071                     	ds	3
   628  0074                     ??_spiWrite:
   629  0074                     ??_spiRead:	
   630                           ; 1 bytes @ 0x4
   631                           
   632  0074                     ??_CONTADOR:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0074                     ??_USARTcon:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  0074                     ??_spiInit:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  0074                     ??_num_ascii:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0074                     ??_spiReceiveWait:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ??___wmul:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     ?___bmul:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     spiInit@sType:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     spiWrite@dat:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     ___bmul@multiplicand:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ___wmul@product:	
   663                           ; 1 bytes @ 0x4
   664                           
   665                           
   666                           ; 2 bytes @ 0x4
   667  0074                     	ds	1
   668  0075                     ??_setup:
   669  0075                     ??___bmul:	
   670                           ; 1 bytes @ 0x5
   671                           
   672                           
   673                           ; 1 bytes @ 0x5
   674  0075                     	ds	1
   675                           
   676                           	psect	cstackBANK0
   677  0020                     __pcstackBANK0:
   678  0020                     ?_spiInit:
   679  0020                     ?___wmul:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0020                     spiInit@sDataSample:	
   683                           ; 2 bytes @ 0x0
   684                           
   685  0020                     num_ascii@num:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0020                     ___bmul@product:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0020                     ___wmul@multiplier:	
   692                           ; 1 bytes @ 0x0
   693                           
   694                           
   695                           ; 2 bytes @ 0x0
   696  0020                     	ds	1
   697  0021                     spiInit@sClockIdle:
   698  0021                     ___bmul@multiplier:	
   699                           ; 1 bytes @ 0x1
   700                           
   701                           
   702                           ; 1 bytes @ 0x1
   703  0021                     	ds	1
   704  0022                     spiInit@sTransmitEdge:
   705  0022                     ___wmul@multiplicand:	
   706                           ; 1 bytes @ 0x2
   707                           
   708                           
   709                           ; 2 bytes @ 0x2
   710  0022                     	ds	2
   711  0024                     ?___awdiv:
   712  0024                     ___awdiv@divisor:	
   713                           ; 2 bytes @ 0x4
   714                           
   715                           
   716                           ; 2 bytes @ 0x4
   717  0024                     	ds	2
   718  0026                     ___awdiv@dividend:
   719                           
   720                           ; 2 bytes @ 0x6
   721  0026                     	ds	2
   722  0028                     ??___awdiv:
   723                           
   724                           ; 1 bytes @ 0x8
   725  0028                     	ds	1
   726  0029                     ___awdiv@counter:
   727                           
   728                           ; 1 bytes @ 0x9
   729  0029                     	ds	1
   730  002A                     ___awdiv@sign:
   731                           
   732                           ; 1 bytes @ 0xA
   733  002A                     	ds	1
   734  002B                     ___awdiv@quotient:
   735                           
   736                           ; 2 bytes @ 0xB
   737  002B                     	ds	2
   738  002D                     ??_LECT1:
   739                           
   740                           ; 1 bytes @ 0xD
   741  002D                     	ds	8
   742  0035                     ??_main:
   743                           
   744                           ; 1 bytes @ 0x15
   745  0035                     	ds	2
   746                           
   747                           	psect	maintext
   748  013B                     __pmaintext:	
   749 ;;
   750 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   751 ;;
   752 ;; *************** function _main *****************
   753 ;; Defined at:
   754 ;;		line 85 in file "main.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : B00/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0
   770 ;;      Temps:          0       2       0       0       0
   771 ;;      Totals:         0       2       0       0       0
   772 ;;Total ram usage:        2 bytes
   773 ;; Hardware stack levels required when called: 4
   774 ;; This function calls:
   775 ;;		_CONTADOR
   776 ;;		_LECT1
   777 ;;		_setup
   778 ;;		_spiRead
   779 ;;		_spiWrite
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _main
   787  013B                     _main:
   788  013B                     l1698:	
   789                           ;incstack = 0
   790                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   791                           
   792                           
   793                           ;main.c: 86:     setup();
   794  013B  120A  118A  2216  120A  118A  	fcall	_setup
   795  0140                     l1700:
   796                           
   797                           ;main.c: 89:        PORTCbits.RC2 = 0;
   798  0140  1283               	bcf	3,5	;RP0=0, select bank0
   799  0141  1303               	bcf	3,6	;RP1=0, select bank0
   800  0142  1107               	bcf	7,2	;volatile
   801  0143                     l1702:
   802                           
   803                           ;main.c: 90:        _delay((unsigned long)((1)*(8000000/4000.0)));
   804  0143  3003               	movlw	3
   805  0144  1283               	bcf	3,5	;RP0=0, select bank0
   806  0145  1303               	bcf	3,6	;RP1=0, select bank0
   807  0146  00B6               	movwf	??_main+1
   808  0147  3097               	movlw	151
   809  0148  00B5               	movwf	??_main
   810  0149                     u837:
   811  0149  0BB5               	decfsz	??_main,f
   812  014A  2949               	goto	u837
   813  014B  0BB6               	decfsz	??_main+1,f
   814  014C  2949               	goto	u837
   815  014D                     l1704:
   816                           
   817                           ;main.c: 91:        spiWrite(0);
   818  014D  3000               	movlw	0
   819  014E  120A  118A  233B  120A  118A  	fcall	_spiWrite
   820  0153                     l1706:
   821                           
   822                           ;main.c: 92:        v1 = spiRead();
   823  0153  120A  118A  2323  120A  118A  	fcall	_spiRead
   824  0158  1283               	bcf	3,5	;RP0=0, select bank0
   825  0159  1303               	bcf	3,6	;RP1=0, select bank0
   826  015A  00B5               	movwf	??_main
   827  015B  0835               	movf	??_main,w
   828  015C  00F9               	movwf	_v1
   829  015D                     l1708:
   830                           
   831                           ;main.c: 93:        _delay((unsigned long)((1)*(8000000/4000.0)));
   832  015D  3003               	movlw	3
   833  015E  1283               	bcf	3,5	;RP0=0, select bank0
   834  015F  1303               	bcf	3,6	;RP1=0, select bank0
   835  0160  00B6               	movwf	??_main+1
   836  0161  3097               	movlw	151
   837  0162  00B5               	movwf	??_main
   838  0163                     u847:
   839  0163  0BB5               	decfsz	??_main,f
   840  0164  2963               	goto	u847
   841  0165  0BB6               	decfsz	??_main+1,f
   842  0166  2963               	goto	u847
   843  0167                     l1710:
   844                           
   845                           ;main.c: 94:        PORTCbits.RC2 = 1;
   846  0167  1283               	bcf	3,5	;RP0=0, select bank0
   847  0168  1303               	bcf	3,6	;RP1=0, select bank0
   848  0169  1507               	bsf	7,2	;volatile
   849  016A                     l1712:
   850                           
   851                           ;main.c: 95:        if(signo != 13 && signo != 43 && signo != 45){
   852  016A  300D               	movlw	13
   853  016B  0677               	xorwf	_signo,w
   854  016C  1903               	btfsc	3,2
   855  016D  296F               	goto	u801
   856  016E  2970               	goto	u800
   857  016F                     u801:
   858  016F  297E               	goto	l1720
   859  0170                     u800:
   860  0170                     l1714:
   861  0170  302B               	movlw	43
   862  0171  0677               	xorwf	_signo,w
   863  0172  1903               	btfsc	3,2
   864  0173  2975               	goto	u811
   865  0174  2976               	goto	u810
   866  0175                     u811:
   867  0175  297E               	goto	l1720
   868  0176                     u810:
   869  0176                     l1716:
   870  0176  302D               	movlw	45
   871  0177  0677               	xorwf	_signo,w
   872  0178  1903               	btfsc	3,2
   873  0179  297B               	goto	u821
   874  017A  297C               	goto	u820
   875  017B                     u821:
   876  017B  297E               	goto	l1720
   877  017C                     u820:
   878  017C                     l1718:
   879                           
   880                           ;main.c: 96:             sum = 0;
   881  017C  01CA               	clrf	_sum
   882                           
   883                           ;main.c: 97:             res = 0;
   884  017D  01C9               	clrf	_res
   885  017E                     l1720:
   886                           
   887                           ;main.c: 99:         CONTADOR();
   888  017E  120A  118A  2253  120A  118A  	fcall	_CONTADOR
   889  0183                     l1722:
   890                           
   891                           ;main.c: 100:         LECT1();
   892  0183  120A  118A  2020  120A  118A  	fcall	_LECT1
   893  0188                     l1724:
   894                           
   895                           ;main.c: 101:         PORTB = v1;
   896  0188  0879               	movf	_v1,w
   897  0189  1283               	bcf	3,5	;RP0=0, select bank0
   898  018A  1303               	bcf	3,6	;RP1=0, select bank0
   899  018B  0086               	movwf	6	;volatile
   900  018C  2940               	goto	l1700
   901  018D  120A  118A  280C   	ljmp	start
   902  0190                     __end_of_main:
   903                           
   904                           	psect	text1
   905  033B                     __ptext1:	
   906 ;; *************** function _spiWrite *****************
   907 ;; Defined at:
   908 ;;		line 25 in file "SPI_1.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  dat             1    wreg     unsigned char 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  dat             1    4[COMMON] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         1       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0
   925 ;;      Totals:         1       0       0       0       0
   926 ;;Total ram usage:        1 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 2
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _spiWrite
   938  033B                     _spiWrite:
   939                           
   940                           ;incstack = 0
   941                           ; Regs used in _spiWrite: [wreg]
   942                           ;spiWrite@dat stored from wreg
   943  033B  00F4               	movwf	spiWrite@dat
   944  033C                     l1426:
   945                           
   946                           ;SPI_1.c: 25: void spiWrite(char dat);SPI_1.c: 26: {;SPI_1.c: 27:     SSPBUF = dat;
   947  033C  0874               	movf	spiWrite@dat,w
   948  033D  1283               	bcf	3,5	;RP0=0, select bank0
   949  033E  1303               	bcf	3,6	;RP1=0, select bank0
   950  033F  0093               	movwf	19	;volatile
   951  0340                     l183:
   952  0340  0008               	return
   953  0341                     __end_of_spiWrite:
   954                           
   955                           	psect	text2
   956  0323                     __ptext2:	
   957 ;; *************** function _spiRead *****************
   958 ;; Defined at:
   959 ;;		line 38 in file "SPI_1.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      unsigned char 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 3
   980 ;; This function calls:
   981 ;;		_spiReceiveWait
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _spiRead
   989  0323                     _spiRead:
   990  0323                     l1428:	
   991                           ;incstack = 0
   992                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   993                           
   994                           
   995                           ;SPI_1.c: 40:     spiReceiveWait();
   996  0323  120A  118A  2334  120A  118A  	fcall	_spiReceiveWait
   997  0328                     l1430:
   998                           
   999                           ;SPI_1.c: 41:     return(SSPBUF);
  1000  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1002  032A  0813               	movf	19,w	;volatile
  1003  032B                     l191:
  1004  032B  0008               	return
  1005  032C                     __end_of_spiRead:
  1006                           
  1007                           	psect	text3
  1008  0334                     __ptext3:	
  1009 ;; *************** function _spiReceiveWait *****************
  1010 ;; Defined at:
  1011 ;;		line 20 in file "SPI_1.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		None
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1025 ;;      Params:         0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0
  1028 ;;      Totals:         0       0       0       0       0
  1029 ;;Total ram usage:        0 bytes
  1030 ;; Hardware stack levels used: 1
  1031 ;; Hardware stack levels required when called: 2
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_spiRead
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           
  1040                           ;psect for function _spiReceiveWait
  1041  0334                     _spiReceiveWait:
  1042  0334                     l1274:	
  1043                           ;incstack = 0
  1044                           ; Regs used in _spiReceiveWait: []
  1045                           
  1046  0334                     l177:	
  1047                           ;SPI_1.c: 22:     while ( !SSPSTATbits.BF );
  1048                           
  1049  0334  1683               	bsf	3,5	;RP0=1, select bank1
  1050  0335  1303               	bcf	3,6	;RP1=0, select bank1
  1051  0336  1C14               	btfss	20,0	;volatile
  1052  0337  2B39               	goto	u381
  1053  0338  2B3A               	goto	u380
  1054  0339                     u381:
  1055  0339  2B34               	goto	l177
  1056  033A                     u380:
  1057  033A                     l180:
  1058  033A  0008               	return
  1059  033B                     __end_of_spiReceiveWait:
  1060                           
  1061                           	psect	text4
  1062  0216                     __ptext4:	
  1063 ;; *************** function _setup *****************
  1064 ;; Defined at:
  1065 ;;		line 106 in file "main.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0
  1082 ;;      Totals:         0       0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 3
  1086 ;; This function calls:
  1087 ;;		_USARTcon
  1088 ;;		_spiInit
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           
  1095                           ;psect for function _setup
  1096  0216                     _setup:
  1097  0216                     l1646:	
  1098                           ;incstack = 0
  1099                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1100                           
  1101                           
  1102                           ;main.c: 108:     ANSEL = 0;
  1103  0216  1683               	bsf	3,5	;RP0=1, select bank3
  1104  0217  1703               	bsf	3,6	;RP1=1, select bank3
  1105  0218  0188               	clrf	8	;volatile
  1106                           
  1107                           ;main.c: 109:     ANSELH = 0;
  1108  0219  0189               	clrf	9	;volatile
  1109                           
  1110                           ;main.c: 110:     TRISA = 0;
  1111  021A  1683               	bsf	3,5	;RP0=1, select bank1
  1112  021B  1303               	bcf	3,6	;RP1=0, select bank1
  1113  021C  0185               	clrf	5	;volatile
  1114                           
  1115                           ;main.c: 111:     TRISB = 0;
  1116  021D  0186               	clrf	6	;volatile
  1117  021E                     l1648:
  1118                           
  1119                           ;main.c: 112:     TRISC2 = 0;
  1120  021E  1107               	bcf	7,2	;volatile
  1121  021F                     l1650:
  1122                           
  1123                           ;main.c: 113:     TRISCbits.TRISC6 = 0;
  1124  021F  1307               	bcf	7,6	;volatile
  1125  0220                     l1652:
  1126                           
  1127                           ;main.c: 114:     TRISCbits.TRISC7 = 1;
  1128  0220  1787               	bsf	7,7	;volatile
  1129                           
  1130                           ;main.c: 115:     TRISD = 0;
  1131  0221  0188               	clrf	8	;volatile
  1132                           
  1133                           ;main.c: 116:     TRISE = 0;
  1134  0222  0189               	clrf	9	;volatile
  1135                           
  1136                           ;main.c: 117:     PORTA = 0;
  1137  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0225  0185               	clrf	5	;volatile
  1140                           
  1141                           ;main.c: 118:     PORTB = 0;
  1142  0226  0186               	clrf	6	;volatile
  1143  0227                     l1654:
  1144                           
  1145                           ;main.c: 119:     PORTC = 0b00000100;
  1146  0227  3004               	movlw	4
  1147  0228  0087               	movwf	7	;volatile
  1148  0229                     l1656:
  1149                           
  1150                           ;main.c: 120:     PORTD = 0;
  1151  0229  0188               	clrf	8	;volatile
  1152  022A                     l1658:
  1153                           
  1154                           ;main.c: 121:     PORTE = 0;
  1155  022A  0189               	clrf	9	;volatile
  1156  022B                     l1660:
  1157                           
  1158                           ;main.c: 122:     INTCONbits.TMR0IF = 0;
  1159  022B  110B               	bcf	11,2	;volatile
  1160  022C                     l1662:
  1161                           
  1162                           ;main.c: 123:     INTCONbits.RBIF = 0;
  1163  022C  100B               	bcf	11,0	;volatile
  1164  022D                     l1664:
  1165                           
  1166                           ;main.c: 124:     INTCONbits.GIE = 1;
  1167  022D  178B               	bsf	11,7	;volatile
  1168  022E                     l1666:
  1169                           
  1170                           ;main.c: 125:     INTCONbits.PEIE = 1;
  1171  022E  170B               	bsf	11,6	;volatile
  1172  022F                     l1668:
  1173                           
  1174                           ;main.c: 126:     INTCONbits.T0IE = 1;
  1175  022F  168B               	bsf	11,5	;volatile
  1176  0230                     l1670:
  1177                           
  1178                           ;main.c: 127:     INTCONbits.RBIE = 0;
  1179  0230  118B               	bcf	11,3	;volatile
  1180  0231                     l1672:
  1181                           
  1182                           ;main.c: 128:     PIR1bits.ADIF = 0;
  1183  0231  130C               	bcf	12,6	;volatile
  1184  0232                     l1674:
  1185                           
  1186                           ;main.c: 129:     OSCCONbits.IRCF0 = 1;
  1187  0232  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0233  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0234  160F               	bsf	15,4	;volatile
  1190  0235                     l1676:
  1191                           
  1192                           ;main.c: 130:     OSCCONbits.IRCF1 = 1;
  1193  0235  168F               	bsf	15,5	;volatile
  1194  0236                     l1678:
  1195                           
  1196                           ;main.c: 131:     OSCCONbits.IRCF2 = 1;
  1197  0236  170F               	bsf	15,6	;volatile
  1198  0237                     l1680:
  1199                           
  1200                           ;main.c: 132:     ADCON1 = 0;
  1201  0237  019F               	clrf	31	;volatile
  1202                           
  1203                           ;main.c: 133:     TMR0 = 216;
  1204  0238  30D8               	movlw	216
  1205  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1206  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1207  023B  0081               	movwf	1	;volatile
  1208                           
  1209                           ;main.c: 134:     OPTION_REG = 0b01010111;
  1210  023C  3057               	movlw	87
  1211  023D  1683               	bsf	3,5	;RP0=1, select bank1
  1212  023E  1303               	bcf	3,6	;RP1=0, select bank1
  1213  023F  0081               	movwf	1	;volatile
  1214  0240                     l1682:
  1215                           
  1216                           ;main.c: 135:     PIE1bits.RCIE = 1;
  1217  0240  168C               	bsf	12,5	;volatile
  1218  0241                     l1684:
  1219                           
  1220                           ;main.c: 136:     PIE1bits.TXIE = 1;
  1221  0241  160C               	bsf	12,4	;volatile
  1222  0242                     l1686:
  1223                           
  1224                           ;main.c: 137:     USARTcon();
  1225  0242  120A  118A  230D  120A  118A  	fcall	_USARTcon
  1226  0247                     l1688:
  1227                           
  1228                           ;main.c: 138:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1229  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0249  01A0               	clrf	spiInit@sDataSample
  1232  024A  01A1               	clrf	spiInit@sClockIdle
  1233  024B  01A2               	clrf	spiInit@sTransmitEdge
  1234  024C  3020               	movlw	32
  1235  024D  120A  118A  22D8  120A  118A  	fcall	_spiInit
  1236  0252                     l138:
  1237  0252  0008               	return
  1238  0253                     __end_of_setup:
  1239                           
  1240                           	psect	text5
  1241  02D8                     __ptext5:	
  1242 ;; *************** function _spiInit *****************
  1243 ;; Defined at:
  1244 ;;		line 3 in file "SPI_1.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  sType           1    wreg     enum E1264
  1247 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1248 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1249 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  sType           1    4[COMMON] enum E1264
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       3       0       0       0
  1262 ;;      Locals:         1       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0
  1264 ;;      Totals:         1       3       0       0       0
  1265 ;;Total ram usage:        4 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 2
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_setup
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _spiInit
  1277  02D8                     _spiInit:
  1278                           
  1279                           ;incstack = 0
  1280                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1281                           ;spiInit@sType stored from wreg
  1282  02D8  00F4               	movwf	spiInit@sType
  1283  02D9                     l1530:
  1284                           
  1285                           ;SPI_1.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_1.c: 4: {;SPI_1.c: 5:     TRISC5 = 0;
  1286  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  1287  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  1288  02DB  1287               	bcf	7,5	;volatile
  1289                           
  1290                           ;SPI_1.c: 6:     if(sType & 0b00000100)
  1291  02DC  1D74               	btfss	spiInit@sType,2
  1292  02DD  2ADF               	goto	u731
  1293  02DE  2AE0               	goto	u730
  1294  02DF                     u731:
  1295  02DF  2AE8               	goto	l1536
  1296  02E0                     u730:
  1297  02E0                     l1532:
  1298                           
  1299                           ;SPI_1.c: 7:     {;SPI_1.c: 8:         SSPSTAT = sTransmitEdge;
  1300  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1301  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1302  02E2  0822               	movf	spiInit@sTransmitEdge,w
  1303  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  1304  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  1305  02E5  0094               	movwf	20	;volatile
  1306  02E6                     l1534:
  1307                           
  1308                           ;SPI_1.c: 9:         TRISC3 = 1;
  1309  02E6  1587               	bsf	7,3	;volatile
  1310                           
  1311                           ;SPI_1.c: 10:     }
  1312  02E7  2AF0               	goto	l173
  1313  02E8                     l1536:
  1314                           
  1315                           ;SPI_1.c: 12:     {;SPI_1.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
  1316  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1317  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1318  02EA  0820               	movf	spiInit@sDataSample,w
  1319  02EB  0422               	iorwf	spiInit@sTransmitEdge,w
  1320  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  1321  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  1322  02EE  0094               	movwf	20	;volatile
  1323  02EF                     l1538:
  1324                           
  1325                           ;SPI_1.c: 14:         TRISC3 = 0;
  1326  02EF  1187               	bcf	7,3	;volatile
  1327  02F0                     l173:	
  1328                           ;SPI_1.c: 15:     }
  1329                           
  1330                           
  1331                           ;SPI_1.c: 17:     SSPCON = sType | sClockIdle;
  1332  02F0  0874               	movf	spiInit@sType,w
  1333  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1334  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1335  02F3  0421               	iorwf	spiInit@sClockIdle,w
  1336  02F4  0094               	movwf	20	;volatile
  1337  02F5                     l174:
  1338  02F5  0008               	return
  1339  02F6                     __end_of_spiInit:
  1340                           
  1341                           	psect	text6
  1342  030D                     __ptext6:	
  1343 ;; *************** function _USARTcon *****************
  1344 ;; Defined at:
  1345 ;;		line 3 in file "USART_2.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0
  1362 ;;      Totals:         0       0       0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; Hardware stack levels required when called: 2
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_setup
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _USARTcon
  1375  030D                     _USARTcon:
  1376  030D                     l1174:	
  1377                           ;incstack = 0
  1378                           ; Regs used in _USARTcon: [wreg+status,2]
  1379                           
  1380                           
  1381                           ;USART_2.c: 5:  TXSTAbits.SYNC = 0;
  1382  030D  1683               	bsf	3,5	;RP0=1, select bank1
  1383  030E  1303               	bcf	3,6	;RP1=0, select bank1
  1384  030F  1218               	bcf	24,4	;volatile
  1385                           
  1386                           ;USART_2.c: 6:  TXSTAbits.BRGH = 1;
  1387  0310  1518               	bsf	24,2	;volatile
  1388                           
  1389                           ;USART_2.c: 7:  TXSTAbits.TX9 = 0;
  1390  0311  1318               	bcf	24,6	;volatile
  1391                           
  1392                           ;USART_2.c: 8:  BAUDCTLbits.BRG16 = 0;
  1393  0312  1683               	bsf	3,5	;RP0=1, select bank3
  1394  0313  1703               	bsf	3,6	;RP1=1, select bank3
  1395  0314  1187               	bcf	7,3	;volatile
  1396  0315                     l1176:
  1397                           
  1398                           ;USART_2.c: 9:  SPBRGH = 0;
  1399  0315  1683               	bsf	3,5	;RP0=1, select bank1
  1400  0316  1303               	bcf	3,6	;RP1=0, select bank1
  1401  0317  019A               	clrf	26	;volatile
  1402  0318                     l1178:
  1403                           
  1404                           ;USART_2.c: 10:  SPBRG = 51;
  1405  0318  3033               	movlw	51
  1406  0319  0099               	movwf	25	;volatile
  1407  031A                     l1180:
  1408                           
  1409                           ;USART_2.c: 12:  RCSTAbits.SPEN = 1;
  1410  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1411  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1412  031C  1798               	bsf	24,7	;volatile
  1413  031D                     l1182:
  1414                           
  1415                           ;USART_2.c: 13:  RCSTAbits.RX9 = 0;
  1416  031D  1318               	bcf	24,6	;volatile
  1417  031E                     l1184:
  1418                           
  1419                           ;USART_2.c: 14:  RCSTAbits.CREN = 1;
  1420  031E  1618               	bsf	24,4	;volatile
  1421  031F                     l1186:
  1422                           
  1423                           ;USART_2.c: 15:  TXSTAbits.TXEN = 1;
  1424  031F  1683               	bsf	3,5	;RP0=1, select bank1
  1425  0320  1303               	bcf	3,6	;RP1=0, select bank1
  1426  0321  1698               	bsf	24,5	;volatile
  1427  0322                     l204:
  1428  0322  0008               	return
  1429  0323                     __end_of_USARTcon:
  1430                           
  1431                           	psect	text7
  1432  0020                     __ptext7:	
  1433 ;; *************** function _LECT1 *****************
  1434 ;; Defined at:
  1435 ;;		line 141 in file "main.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         0       0       0       0       0
  1450 ;;      Locals:         0       0       0       0       0
  1451 ;;      Temps:          0       8       0       0       0
  1452 ;;      Totals:         0       8       0       0       0
  1453 ;;Total ram usage:        8 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; Hardware stack levels required when called: 3
  1456 ;; This function calls:
  1457 ;;		___awdiv
  1458 ;;		___bmul
  1459 ;;		___wmul
  1460 ;;		_num_ascii
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _LECT1
  1468  0020                     _LECT1:
  1469  0020                     l1690:	
  1470                           ;incstack = 0
  1471                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1472                           
  1473                           
  1474                           ;main.c: 142:     Cen1 = v1/51;
  1475  0020  3033               	movlw	51
  1476  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0023  00A4               	movwf	___awdiv@divisor
  1479  0024  3000               	movlw	0
  1480  0025  00A5               	movwf	___awdiv@divisor+1
  1481  0026  0879               	movf	_v1,w
  1482  0027  00AD               	movwf	??_LECT1
  1483  0028  01AE               	clrf	??_LECT1+1
  1484  0029  082D               	movf	??_LECT1,w
  1485  002A  00A6               	movwf	___awdiv@dividend
  1486  002B  082E               	movf	??_LECT1+1,w
  1487  002C  00A7               	movwf	___awdiv@dividend+1
  1488  002D  120A  118A  20D2  120A  118A  	fcall	___awdiv
  1489  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0034  0824               	movf	?___awdiv,w
  1492  0035  00AF               	movwf	??_LECT1+2
  1493  0036  082F               	movf	??_LECT1+2,w
  1494  0037  00F6               	movwf	_Cen1
  1495                           
  1496                           ;main.c: 143:     Dec1 = ((10*v1)/51-Cen1*10);
  1497  0038  3033               	movlw	51
  1498  0039  00A4               	movwf	___awdiv@divisor
  1499  003A  3000               	movlw	0
  1500  003B  00A5               	movwf	___awdiv@divisor+1
  1501  003C  0879               	movf	_v1,w
  1502  003D  00AD               	movwf	??_LECT1
  1503  003E  01AE               	clrf	??_LECT1+1
  1504  003F  082D               	movf	??_LECT1,w
  1505  0040  00A0               	movwf	___wmul@multiplier
  1506  0041  082E               	movf	??_LECT1+1,w
  1507  0042  00A1               	movwf	___wmul@multiplier+1
  1508  0043  300A               	movlw	10
  1509  0044  00A2               	movwf	___wmul@multiplicand
  1510  0045  3000               	movlw	0
  1511  0046  00A3               	movwf	___wmul@multiplicand+1
  1512  0047  120A  118A  228A  120A  118A  	fcall	___wmul
  1513  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1514  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1515  004E  0821               	movf	?___wmul+1,w
  1516  004F  00A7               	movwf	___awdiv@dividend+1
  1517  0050  0820               	movf	?___wmul,w
  1518  0051  00A6               	movwf	___awdiv@dividend
  1519  0052  120A  118A  20D2  120A  118A  	fcall	___awdiv
  1520  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0059  0824               	movf	?___awdiv,w
  1523  005A  00AF               	movwf	??_LECT1+2
  1524  005B  0825               	movf	?___awdiv+1,w
  1525  005C  00B0               	movwf	??_LECT1+3
  1526  005D  30F6               	movlw	246
  1527  005E  00B1               	movwf	??_LECT1+4
  1528  005F  0831               	movf	??_LECT1+4,w
  1529  0060  00F4               	movwf	___bmul@multiplicand
  1530  0061  0876               	movf	_Cen1,w
  1531  0062  120A  118A  22F6  120A  118A  	fcall	___bmul
  1532  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0069  072F               	addwf	??_LECT1+2,w
  1535  006A  00B2               	movwf	??_LECT1+5
  1536  006B  0832               	movf	??_LECT1+5,w
  1537  006C  00C5               	movwf	_Dec1
  1538                           
  1539                           ;main.c: 144:     Un1 = (100*v1)/51-(Cen1*100+Dec1*10);
  1540  006D  3033               	movlw	51
  1541  006E  00A4               	movwf	___awdiv@divisor
  1542  006F  3000               	movlw	0
  1543  0070  00A5               	movwf	___awdiv@divisor+1
  1544  0071  0879               	movf	_v1,w
  1545  0072  00AD               	movwf	??_LECT1
  1546  0073  01AE               	clrf	??_LECT1+1
  1547  0074  082D               	movf	??_LECT1,w
  1548  0075  00A0               	movwf	___wmul@multiplier
  1549  0076  082E               	movf	??_LECT1+1,w
  1550  0077  00A1               	movwf	___wmul@multiplier+1
  1551  0078  3064               	movlw	100
  1552  0079  00A2               	movwf	___wmul@multiplicand
  1553  007A  3000               	movlw	0
  1554  007B  00A3               	movwf	___wmul@multiplicand+1
  1555  007C  120A  118A  228A  120A  118A  	fcall	___wmul
  1556  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0083  0821               	movf	?___wmul+1,w
  1559  0084  00A7               	movwf	___awdiv@dividend+1
  1560  0085  0820               	movf	?___wmul,w
  1561  0086  00A6               	movwf	___awdiv@dividend
  1562  0087  120A  118A  20D2  120A  118A  	fcall	___awdiv
  1563  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1564  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1565  008E  0824               	movf	?___awdiv,w
  1566  008F  00AF               	movwf	??_LECT1+2
  1567  0090  0825               	movf	?___awdiv+1,w
  1568  0091  00B0               	movwf	??_LECT1+3
  1569  0092  309C               	movlw	156
  1570  0093  00B1               	movwf	??_LECT1+4
  1571  0094  0831               	movf	??_LECT1+4,w
  1572  0095  00F4               	movwf	___bmul@multiplicand
  1573  0096  0876               	movf	_Cen1,w
  1574  0097  120A  118A  22F6  120A  118A  	fcall	___bmul
  1575  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1576  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1577  009E  00B2               	movwf	??_LECT1+5
  1578  009F  30F6               	movlw	246
  1579  00A0  00B3               	movwf	??_LECT1+6
  1580  00A1  0833               	movf	??_LECT1+6,w
  1581  00A2  00F4               	movwf	___bmul@multiplicand
  1582  00A3  0845               	movf	_Dec1,w
  1583  00A4  120A  118A  22F6  120A  118A  	fcall	___bmul
  1584  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1585  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1586  00AB  0732               	addwf	??_LECT1+5,w
  1587  00AC  072F               	addwf	??_LECT1+2,w
  1588  00AD  00B4               	movwf	??_LECT1+7
  1589  00AE  0834               	movf	??_LECT1+7,w
  1590  00AF  00C2               	movwf	_Un1
  1591  00B0                     l1692:
  1592                           
  1593                           ;main.c: 145:     AC1 = num_ascii(Cen1);
  1594  00B0  0876               	movf	_Cen1,w
  1595  00B1  120A  118A  21D5  120A  118A  	fcall	_num_ascii
  1596  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1597  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1598  00B8  00AD               	movwf	??_LECT1
  1599  00B9  082D               	movf	??_LECT1,w
  1600  00BA  00BF               	movwf	_AC1
  1601  00BB                     l1694:
  1602                           
  1603                           ;main.c: 146:     AD1 = num_ascii(Dec1);
  1604  00BB  0845               	movf	_Dec1,w
  1605  00BC  120A  118A  21D5  120A  118A  	fcall	_num_ascii
  1606  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1607  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1608  00C3  00AD               	movwf	??_LECT1
  1609  00C4  082D               	movf	??_LECT1,w
  1610  00C5  00BC               	movwf	_AD1
  1611  00C6                     l1696:
  1612                           
  1613                           ;main.c: 147:     AU1 = num_ascii(Un1);
  1614  00C6  0842               	movf	_Un1,w
  1615  00C7  120A  118A  21D5  120A  118A  	fcall	_num_ascii
  1616  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1617  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1618  00CE  00AD               	movwf	??_LECT1
  1619  00CF  082D               	movf	??_LECT1,w
  1620  00D0  00B9               	movwf	_AU1
  1621  00D1                     l141:
  1622  00D1  0008               	return
  1623  00D2                     __end_of_LECT1:
  1624                           
  1625                           	psect	text8
  1626  01D5                     __ptext8:	
  1627 ;; *************** function _num_ascii *****************
  1628 ;; Defined at:
  1629 ;;		line 3 in file "ASCII_1.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  num             1    wreg     unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  num             1    0[BANK0 ] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      unsigned char 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1643 ;;      Params:         0       0       0       0       0
  1644 ;;      Locals:         0       1       0       0       0
  1645 ;;      Temps:          2       0       0       0       0
  1646 ;;      Totals:         2       1       0       0       0
  1647 ;;Total ram usage:        3 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 2
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_LECT1
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function _num_ascii
  1659  01D5                     _num_ascii:
  1660                           
  1661                           ;incstack = 0
  1662                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  1663                           ;num_ascii@num stored from wreg
  1664  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1665  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1666  01D7  00A0               	movwf	num_ascii@num
  1667  01D8                     l1540:
  1668                           
  1669                           ;ASCII_1.c: 4:  switch(num){
  1670  01D8  29ED               	goto	l1610
  1671  01D9                     l1542:
  1672                           
  1673                           ;ASCII_1.c: 6:   return 0x30;
  1674  01D9  3030               	movlw	48
  1675  01DA  2A15               	goto	l209
  1676  01DB                     l1554:
  1677                           
  1678                           ;ASCII_1.c: 14:   return 0x31;
  1679  01DB  3031               	movlw	49
  1680  01DC  2A15               	goto	l209
  1681  01DD                     l1560:
  1682                           
  1683                           ;ASCII_1.c: 18:   return 0x32;
  1684  01DD  3032               	movlw	50
  1685  01DE  2A15               	goto	l209
  1686  01DF                     l1566:
  1687                           
  1688                           ;ASCII_1.c: 22:   return 0x33;
  1689  01DF  3033               	movlw	51
  1690  01E0  2A15               	goto	l209
  1691  01E1                     l1572:
  1692                           
  1693                           ;ASCII_1.c: 26:   return 0x34;
  1694  01E1  3034               	movlw	52
  1695  01E2  2A15               	goto	l209
  1696  01E3                     l1578:
  1697                           
  1698                           ;ASCII_1.c: 30:   return 0x35;
  1699  01E3  3035               	movlw	53
  1700  01E4  2A15               	goto	l209
  1701  01E5                     l1584:
  1702                           
  1703                           ;ASCII_1.c: 34:   return 0x36;
  1704  01E5  3036               	movlw	54
  1705  01E6  2A15               	goto	l209
  1706  01E7                     l1590:
  1707                           
  1708                           ;ASCII_1.c: 38:   return 0x37;
  1709  01E7  3037               	movlw	55
  1710  01E8  2A15               	goto	l209
  1711  01E9                     l1596:
  1712                           
  1713                           ;ASCII_1.c: 42:   return 0x38;
  1714  01E9  3038               	movlw	56
  1715  01EA  2A15               	goto	l209
  1716  01EB                     l1602:
  1717                           
  1718                           ;ASCII_1.c: 46:   return 0x39;
  1719  01EB  3039               	movlw	57
  1720  01EC  2A15               	goto	l209
  1721  01ED                     l1610:
  1722  01ED  0820               	movf	num_ascii@num,w
  1723  01EE  00F4               	movwf	??_num_ascii
  1724  01EF  01F5               	clrf	??_num_ascii+1
  1725                           
  1726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1727                           ; Switch size 1, requested type "simple"
  1728                           ; Number of cases is 1, Range of values is 0 to 0
  1729                           ; switch strategies available:
  1730                           ; Name         Instructions Cycles
  1731                           ; simple_byte            4     3 (average)
  1732                           ; direct_byte           11     8 (fixed)
  1733                           ; jumptable            260     6 (fixed)
  1734                           ;	Chosen strategy is simple_byte
  1735  01F0  0875               	movf	??_num_ascii+1,w
  1736  01F1  3A00               	xorlw	0	; case 0
  1737  01F2  1903               	skipnz
  1738  01F3  29F5               	goto	l1756
  1739  01F4  29D9               	goto	l1542
  1740  01F5                     l1756:
  1741                           
  1742                           ; Switch size 1, requested type "simple"
  1743                           ; Number of cases is 10, Range of values is 0 to 9
  1744                           ; switch strategies available:
  1745                           ; Name         Instructions Cycles
  1746                           ; simple_byte           31    16 (average)
  1747                           ; direct_byte           38     8 (fixed)
  1748                           ; jumptable            260     6 (fixed)
  1749                           ;	Chosen strategy is simple_byte
  1750  01F5  0874               	movf	??_num_ascii,w
  1751  01F6  3A00               	xorlw	0	; case 0
  1752  01F7  1903               	skipnz
  1753  01F8  29D9               	goto	l1542
  1754  01F9  3A01               	xorlw	1	; case 1
  1755  01FA  1903               	skipnz
  1756  01FB  29DB               	goto	l1554
  1757  01FC  3A03               	xorlw	3	; case 2
  1758  01FD  1903               	skipnz
  1759  01FE  29DD               	goto	l1560
  1760  01FF  3A01               	xorlw	1	; case 3
  1761  0200  1903               	skipnz
  1762  0201  29DF               	goto	l1566
  1763  0202  3A07               	xorlw	7	; case 4
  1764  0203  1903               	skipnz
  1765  0204  29E1               	goto	l1572
  1766  0205  3A01               	xorlw	1	; case 5
  1767  0206  1903               	skipnz
  1768  0207  29E3               	goto	l1578
  1769  0208  3A03               	xorlw	3	; case 6
  1770  0209  1903               	skipnz
  1771  020A  29E5               	goto	l1584
  1772  020B  3A01               	xorlw	1	; case 7
  1773  020C  1903               	skipnz
  1774  020D  29E7               	goto	l1590
  1775  020E  3A0F               	xorlw	15	; case 8
  1776  020F  1903               	skipnz
  1777  0210  29E9               	goto	l1596
  1778  0211  3A01               	xorlw	1	; case 9
  1779  0212  1903               	skipnz
  1780  0213  29EB               	goto	l1602
  1781  0214  29D9               	goto	l1542
  1782  0215                     l209:
  1783  0215  0008               	return
  1784  0216                     __end_of_num_ascii:
  1785                           
  1786                           	psect	text9
  1787  028A                     __ptext9:	
  1788 ;; *************** function ___wmul *****************
  1789 ;; Defined at:
  1790 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1793 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  product         2    4[COMMON] unsigned int 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  2    0[BANK0 ] unsigned int 
  1798 ;; Registers used:
  1799 ;;		wreg, status,2, status,0
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1805 ;;      Params:         0       4       0       0       0
  1806 ;;      Locals:         2       0       0       0       0
  1807 ;;      Temps:          0       0       0       0       0
  1808 ;;      Totals:         2       4       0       0       0
  1809 ;;Total ram usage:        6 bytes
  1810 ;; Hardware stack levels used: 1
  1811 ;; Hardware stack levels required when called: 2
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_LECT1
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           
  1820                           ;psect for function ___wmul
  1821  028A                     ___wmul:
  1822  028A                     l1618:	
  1823                           ;incstack = 0
  1824                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1825                           
  1826  028A  01F4               	clrf	___wmul@product
  1827  028B  01F5               	clrf	___wmul@product+1
  1828  028C                     l1620:
  1829  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1830  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1831  028E  1C20               	btfss	___wmul@multiplier,0
  1832  028F  2A91               	goto	u741
  1833  0290  2A92               	goto	u740
  1834  0291                     u741:
  1835  0291  2A98               	goto	l306
  1836  0292                     u740:
  1837  0292                     l1622:
  1838  0292  0822               	movf	___wmul@multiplicand,w
  1839  0293  07F4               	addwf	___wmul@product,f
  1840  0294  1803               	skipnc
  1841  0295  0AF5               	incf	___wmul@product+1,f
  1842  0296  0823               	movf	___wmul@multiplicand+1,w
  1843  0297  07F5               	addwf	___wmul@product+1,f
  1844  0298                     l306:
  1845  0298  3001               	movlw	1
  1846  0299                     u755:
  1847  0299  1003               	clrc
  1848  029A  0DA2               	rlf	___wmul@multiplicand,f
  1849  029B  0DA3               	rlf	___wmul@multiplicand+1,f
  1850  029C  3EFF               	addlw	-1
  1851  029D  1D03               	skipz
  1852  029E  2A99               	goto	u755
  1853  029F                     l1624:
  1854  029F  3001               	movlw	1
  1855  02A0                     u765:
  1856  02A0  1003               	clrc
  1857  02A1  0CA1               	rrf	___wmul@multiplier+1,f
  1858  02A2  0CA0               	rrf	___wmul@multiplier,f
  1859  02A3  3EFF               	addlw	-1
  1860  02A4  1D03               	skipz
  1861  02A5  2AA0               	goto	u765
  1862  02A6                     l1626:
  1863  02A6  0820               	movf	___wmul@multiplier,w
  1864  02A7  0421               	iorwf	___wmul@multiplier+1,w
  1865  02A8  1D03               	btfss	3,2
  1866  02A9  2AAB               	goto	u771
  1867  02AA  2AAC               	goto	u770
  1868  02AB                     u771:
  1869  02AB  2A8C               	goto	l1620
  1870  02AC                     u770:
  1871  02AC                     l1628:
  1872  02AC  0875               	movf	___wmul@product+1,w
  1873  02AD  00A1               	movwf	?___wmul+1
  1874  02AE  0874               	movf	___wmul@product,w
  1875  02AF  00A0               	movwf	?___wmul
  1876  02B0                     l308:
  1877  02B0  0008               	return
  1878  02B1                     __end_of___wmul:
  1879                           
  1880                           	psect	text10
  1881  02F6                     __ptext10:	
  1882 ;; *************** function ___bmul *****************
  1883 ;; Defined at:
  1884 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  multiplier      1    wreg     unsigned char 
  1887 ;;  multiplicand    1    4[COMMON] unsigned char 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  multiplier      1    1[BANK0 ] unsigned char 
  1890 ;;  product         1    0[BANK0 ] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      unsigned char 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1900 ;;      Params:         1       0       0       0       0
  1901 ;;      Locals:         0       2       0       0       0
  1902 ;;      Temps:          1       0       0       0       0
  1903 ;;      Totals:         2       2       0       0       0
  1904 ;;Total ram usage:        4 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 2
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_LECT1
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           
  1915                           ;psect for function ___bmul
  1916  02F6                     ___bmul:
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1920                           ;___bmul@multiplier stored from wreg
  1921  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1922  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1923  02F8  00A1               	movwf	___bmul@multiplier
  1924  02F9                     l1632:
  1925  02F9  01A0               	clrf	___bmul@product
  1926  02FA                     l1634:
  1927  02FA  1C21               	btfss	___bmul@multiplier,0
  1928  02FB  2AFD               	goto	u781
  1929  02FC  2AFE               	goto	u780
  1930  02FD                     u781:
  1931  02FD  2B02               	goto	l1638
  1932  02FE                     u780:
  1933  02FE                     l1636:
  1934  02FE  0874               	movf	___bmul@multiplicand,w
  1935  02FF  00F5               	movwf	??___bmul
  1936  0300  0875               	movf	??___bmul,w
  1937  0301  07A0               	addwf	___bmul@product,f
  1938  0302                     l1638:
  1939  0302  1003               	clrc
  1940  0303  0DF4               	rlf	___bmul@multiplicand,f
  1941  0304                     l1640:
  1942  0304  1003               	clrc
  1943  0305  0CA1               	rrf	___bmul@multiplier,f
  1944  0306  0821               	movf	___bmul@multiplier,w
  1945  0307  1D03               	btfss	3,2
  1946  0308  2B0A               	goto	u791
  1947  0309  2B0B               	goto	u790
  1948  030A                     u791:
  1949  030A  2AFA               	goto	l1634
  1950  030B                     u790:
  1951  030B                     l1642:
  1952  030B  0820               	movf	___bmul@product,w
  1953  030C                     l332:
  1954  030C  0008               	return
  1955  030D                     __end_of___bmul:
  1956                           
  1957                           	psect	text11
  1958  00D2                     __ptext11:	
  1959 ;; *************** function ___awdiv *****************
  1960 ;; Defined at:
  1961 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  divisor         2    4[BANK0 ] int 
  1964 ;;  dividend        2    6[BANK0 ] int 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  quotient        2   11[BANK0 ] int 
  1967 ;;  sign            1   10[BANK0 ] unsigned char 
  1968 ;;  counter         1    9[BANK0 ] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2    4[BANK0 ] int 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         0       4       0       0       0
  1979 ;;      Locals:         0       4       0       0       0
  1980 ;;      Temps:          0       1       0       0       0
  1981 ;;      Totals:         0       9       0       0       0
  1982 ;;Total ram usage:        9 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 2
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_LECT1
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           
  1993                           ;psect for function ___awdiv
  1994  00D2                     ___awdiv:
  1995  00D2                     l1304:	
  1996                           ;incstack = 0
  1997                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1998                           
  1999  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2000  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2001  00D4  01AA               	clrf	___awdiv@sign
  2002  00D5                     l1306:
  2003  00D5  1FA5               	btfss	___awdiv@divisor+1,7
  2004  00D6  28D8               	goto	u451
  2005  00D7  28D9               	goto	u450
  2006  00D8                     u451:
  2007  00D8  28E0               	goto	l1312
  2008  00D9                     u450:
  2009  00D9                     l1308:
  2010  00D9  09A4               	comf	___awdiv@divisor,f
  2011  00DA  09A5               	comf	___awdiv@divisor+1,f
  2012  00DB  0AA4               	incf	___awdiv@divisor,f
  2013  00DC  1903               	skipnz
  2014  00DD  0AA5               	incf	___awdiv@divisor+1,f
  2015  00DE                     l1310:
  2016  00DE  01AA               	clrf	___awdiv@sign
  2017  00DF  0AAA               	incf	___awdiv@sign,f
  2018  00E0                     l1312:
  2019  00E0  1FA7               	btfss	___awdiv@dividend+1,7
  2020  00E1  28E3               	goto	u461
  2021  00E2  28E4               	goto	u460
  2022  00E3                     u461:
  2023  00E3  28ED               	goto	l1318
  2024  00E4                     u460:
  2025  00E4                     l1314:
  2026  00E4  09A6               	comf	___awdiv@dividend,f
  2027  00E5  09A7               	comf	___awdiv@dividend+1,f
  2028  00E6  0AA6               	incf	___awdiv@dividend,f
  2029  00E7  1903               	skipnz
  2030  00E8  0AA7               	incf	___awdiv@dividend+1,f
  2031  00E9                     l1316:
  2032  00E9  3001               	movlw	1
  2033  00EA  00A8               	movwf	??___awdiv
  2034  00EB  0828               	movf	??___awdiv,w
  2035  00EC  06AA               	xorwf	___awdiv@sign,f
  2036  00ED                     l1318:
  2037  00ED  01AB               	clrf	___awdiv@quotient
  2038  00EE  01AC               	clrf	___awdiv@quotient+1
  2039  00EF                     l1320:
  2040  00EF  0824               	movf	___awdiv@divisor,w
  2041  00F0  0425               	iorwf	___awdiv@divisor+1,w
  2042  00F1  1903               	btfsc	3,2
  2043  00F2  28F4               	goto	u471
  2044  00F3  28F5               	goto	u470
  2045  00F4                     u471:
  2046  00F4  292C               	goto	l1340
  2047  00F5                     u470:
  2048  00F5                     l1322:
  2049  00F5  01A9               	clrf	___awdiv@counter
  2050  00F6  0AA9               	incf	___awdiv@counter,f
  2051  00F7  2903               	goto	l1328
  2052  00F8                     l1324:
  2053  00F8  3001               	movlw	1
  2054  00F9                     u485:
  2055  00F9  1003               	clrc
  2056  00FA  0DA4               	rlf	___awdiv@divisor,f
  2057  00FB  0DA5               	rlf	___awdiv@divisor+1,f
  2058  00FC  3EFF               	addlw	-1
  2059  00FD  1D03               	skipz
  2060  00FE  28F9               	goto	u485
  2061  00FF                     l1326:
  2062  00FF  3001               	movlw	1
  2063  0100  00A8               	movwf	??___awdiv
  2064  0101  0828               	movf	??___awdiv,w
  2065  0102  07A9               	addwf	___awdiv@counter,f
  2066  0103                     l1328:
  2067  0103  1FA5               	btfss	___awdiv@divisor+1,7
  2068  0104  2906               	goto	u491
  2069  0105  2907               	goto	u490
  2070  0106                     u491:
  2071  0106  28F8               	goto	l1324
  2072  0107                     u490:
  2073  0107                     l1330:
  2074  0107  3001               	movlw	1
  2075  0108                     u505:
  2076  0108  1003               	clrc
  2077  0109  0DAB               	rlf	___awdiv@quotient,f
  2078  010A  0DAC               	rlf	___awdiv@quotient+1,f
  2079  010B  3EFF               	addlw	-1
  2080  010C  1D03               	skipz
  2081  010D  2908               	goto	u505
  2082  010E  0825               	movf	___awdiv@divisor+1,w
  2083  010F  0227               	subwf	___awdiv@dividend+1,w
  2084  0110  1D03               	skipz
  2085  0111  2914               	goto	u515
  2086  0112  0824               	movf	___awdiv@divisor,w
  2087  0113  0226               	subwf	___awdiv@dividend,w
  2088  0114                     u515:
  2089  0114  1C03               	skipc
  2090  0115  2917               	goto	u511
  2091  0116  2918               	goto	u510
  2092  0117                     u511:
  2093  0117  291F               	goto	l1336
  2094  0118                     u510:
  2095  0118                     l1332:
  2096  0118  0824               	movf	___awdiv@divisor,w
  2097  0119  02A6               	subwf	___awdiv@dividend,f
  2098  011A  0825               	movf	___awdiv@divisor+1,w
  2099  011B  1C03               	skipc
  2100  011C  03A7               	decf	___awdiv@dividend+1,f
  2101  011D  02A7               	subwf	___awdiv@dividend+1,f
  2102  011E                     l1334:
  2103  011E  142B               	bsf	___awdiv@quotient,0
  2104  011F                     l1336:
  2105  011F  3001               	movlw	1
  2106  0120                     u525:
  2107  0120  1003               	clrc
  2108  0121  0CA5               	rrf	___awdiv@divisor+1,f
  2109  0122  0CA4               	rrf	___awdiv@divisor,f
  2110  0123  3EFF               	addlw	-1
  2111  0124  1D03               	skipz
  2112  0125  2920               	goto	u525
  2113  0126                     l1338:
  2114  0126  3001               	movlw	1
  2115  0127  02A9               	subwf	___awdiv@counter,f
  2116  0128  1D03               	btfss	3,2
  2117  0129  292B               	goto	u531
  2118  012A  292C               	goto	u530
  2119  012B                     u531:
  2120  012B  2907               	goto	l1330
  2121  012C                     u530:
  2122  012C                     l1340:
  2123  012C  082A               	movf	___awdiv@sign,w
  2124  012D  1903               	btfsc	3,2
  2125  012E  2930               	goto	u541
  2126  012F  2931               	goto	u540
  2127  0130                     u541:
  2128  0130  2936               	goto	l1344
  2129  0131                     u540:
  2130  0131                     l1342:
  2131  0131  09AB               	comf	___awdiv@quotient,f
  2132  0132  09AC               	comf	___awdiv@quotient+1,f
  2133  0133  0AAB               	incf	___awdiv@quotient,f
  2134  0134  1903               	skipnz
  2135  0135  0AAC               	incf	___awdiv@quotient+1,f
  2136  0136                     l1344:
  2137  0136  082C               	movf	___awdiv@quotient+1,w
  2138  0137  00A5               	movwf	?___awdiv+1
  2139  0138  082B               	movf	___awdiv@quotient,w
  2140  0139  00A4               	movwf	?___awdiv
  2141  013A                     l459:
  2142  013A  0008               	return
  2143  013B                     __end_of___awdiv:
  2144                           
  2145                           	psect	text12
  2146  0253                     __ptext12:	
  2147 ;; *************** function _CONTADOR *****************
  2148 ;; Defined at:
  2149 ;;		line 176 in file "main.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0
  2165 ;;      Temps:          1       0       0       0       0
  2166 ;;      Totals:         1       0       0       0       0
  2167 ;;Total ram usage:        1 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; Hardware stack levels required when called: 2
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           
  2178                           ;psect for function _CONTADOR
  2179  0253                     _CONTADOR:
  2180  0253                     l1434:	
  2181                           ;incstack = 0
  2182                           ; Regs used in _CONTADOR: [wreg+status,2+status,0]
  2183                           
  2184                           
  2185                           ;main.c: 177:     if (signo == 43){
  2186  0253  302B               	movlw	43
  2187  0254  0677               	xorwf	_signo,w
  2188  0255  1D03               	btfss	3,2
  2189  0256  2A58               	goto	u611
  2190  0257  2A59               	goto	u610
  2191  0258                     u611:
  2192  0258  2A5D               	goto	l1438
  2193  0259                     u610:
  2194  0259                     l1436:
  2195                           
  2196                           ;main.c: 178:         sum = 1;
  2197  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2198  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2199  025B  01CA               	clrf	_sum
  2200  025C  0ACA               	incf	_sum,f
  2201  025D                     l1438:
  2202                           
  2203                           ;main.c: 181:     if (signo == 13 && sum == 1){
  2204  025D  300D               	movlw	13
  2205  025E  0677               	xorwf	_signo,w
  2206  025F  1D03               	btfss	3,2
  2207  0260  2A62               	goto	u621
  2208  0261  2A63               	goto	u620
  2209  0262                     u621:
  2210  0262  2A6F               	goto	l1446
  2211  0263                     u620:
  2212  0263                     l1440:
  2213  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0265  034A               	decf	_sum,w
  2216  0266  1D03               	btfss	3,2
  2217  0267  2A69               	goto	u631
  2218  0268  2A6A               	goto	u630
  2219  0269                     u631:
  2220  0269  2A6F               	goto	l1446
  2221  026A                     u630:
  2222  026A                     l1442:
  2223                           
  2224                           ;main.c: 182:             sum = 0;
  2225  026A  01CA               	clrf	_sum
  2226  026B                     l1444:
  2227                           
  2228                           ;main.c: 183:             PORTD++;
  2229  026B  3001               	movlw	1
  2230  026C  00F4               	movwf	??_CONTADOR
  2231  026D  0874               	movf	??_CONTADOR,w
  2232  026E  0788               	addwf	8,f	;volatile
  2233  026F                     l1446:
  2234                           
  2235                           ;main.c: 186:     if (signo == 45){
  2236  026F  302D               	movlw	45
  2237  0270  0677               	xorwf	_signo,w
  2238  0271  1D03               	btfss	3,2
  2239  0272  2A74               	goto	u641
  2240  0273  2A75               	goto	u640
  2241  0274                     u641:
  2242  0274  2A79               	goto	l1450
  2243  0275                     u640:
  2244  0275                     l1448:
  2245                           
  2246                           ;main.c: 187:         res = 1;
  2247  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0277  01C9               	clrf	_res
  2250  0278  0AC9               	incf	_res,f
  2251  0279                     l1450:
  2252                           
  2253                           ;main.c: 190:     if(signo ==13 && res == 1){
  2254  0279  300D               	movlw	13
  2255  027A  0677               	xorwf	_signo,w
  2256  027B  1D03               	btfss	3,2
  2257  027C  2A7E               	goto	u651
  2258  027D  2A7F               	goto	u650
  2259  027E                     u651:
  2260  027E  2A89               	goto	l157
  2261  027F                     u650:
  2262  027F                     l1452:
  2263  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0281  0349               	decf	_res,w
  2266  0282  1D03               	btfss	3,2
  2267  0283  2A85               	goto	u661
  2268  0284  2A86               	goto	u660
  2269  0285                     u661:
  2270  0285  2A89               	goto	l157
  2271  0286                     u660:
  2272  0286                     l1454:
  2273                           
  2274                           ;main.c: 191:         res = 0;
  2275  0286  01C9               	clrf	_res
  2276  0287                     l1456:
  2277                           
  2278                           ;main.c: 192:         PORTD--;
  2279  0287  3001               	movlw	1
  2280  0288  0288               	subwf	8,f	;volatile
  2281  0289                     l157:
  2282  0289  0008               	return
  2283  028A                     __end_of_CONTADOR:
  2284                           
  2285                           	psect	text13
  2286  02B1                     __ptext13:	
  2287 ;; *************** function _ISR *****************
  2288 ;; Defined at:
  2289 ;;		line 71 in file "main.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0, pclath, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2303 ;;      Params:         0       0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0
  2305 ;;      Temps:          3       0       0       0       0
  2306 ;;      Totals:         3       0       0       0       0
  2307 ;;Total ram usage:        3 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; Hardware stack levels required when called: 1
  2310 ;; This function calls:
  2311 ;;		_envio
  2312 ;; This function is called by:
  2313 ;;		Interrupt level 1
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _ISR
  2319  02B1                     _ISR:
  2320  02B1                     i1l1466:
  2321                           
  2322                           ;main.c: 72:     if(INTCONbits.TMR0IF == 1){
  2323  02B1  1D0B               	btfss	11,2	;volatile
  2324  02B2  2AB4               	goto	u67_21
  2325  02B3  2AB5               	goto	u67_20
  2326  02B4                     u67_21:
  2327  02B4  2ABA               	goto	i1l1472
  2328  02B5                     u67_20:
  2329  02B5                     i1l1468:
  2330                           
  2331                           ;main.c: 73:         INTCONbits.TMR0IF = 0;
  2332  02B5  110B               	bcf	11,2	;volatile
  2333  02B6                     i1l1470:
  2334                           
  2335                           ;main.c: 74:         TMR0 = 216;
  2336  02B6  30D8               	movlw	216
  2337  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2338  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2339  02B9  0081               	movwf	1	;volatile
  2340  02BA                     i1l1472:
  2341                           
  2342                           ;main.c: 76:     if (PIR1bits.TXIF == 1){
  2343  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2344  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2345  02BC  1E0C               	btfss	12,4	;volatile
  2346  02BD  2ABF               	goto	u68_21
  2347  02BE  2AC0               	goto	u68_20
  2348  02BF                     u68_21:
  2349  02BF  2AC8               	goto	i1l1478
  2350  02C0                     u68_20:
  2351  02C0                     i1l1474:
  2352                           
  2353                           ;main.c: 77:         envio();
  2354  02C0  120A  118A  2190  120A  118A  	fcall	_envio
  2355  02C5                     i1l1476:
  2356                           
  2357                           ;main.c: 78:         PIE1bits.TXIE = 0;
  2358  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2359  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2360  02C7  120C               	bcf	12,4	;volatile
  2361  02C8                     i1l1478:
  2362                           
  2363                           ;main.c: 80:     if (PIR1bits.RCIF == 1){
  2364  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2365  02C9  1E8C               	btfss	12,5	;volatile
  2366  02CA  2ACC               	goto	u69_21
  2367  02CB  2ACD               	goto	u69_20
  2368  02CC                     u69_21:
  2369  02CC  2AD1               	goto	i1l126
  2370  02CD                     u69_20:
  2371  02CD                     i1l1480:
  2372                           
  2373                           ;main.c: 81:         signo = RCREG;
  2374  02CD  081A               	movf	26,w	;volatile
  2375  02CE  00F1               	movwf	??_ISR
  2376  02CF  0871               	movf	??_ISR,w
  2377  02D0  00F7               	movwf	_signo
  2378  02D1                     i1l126:
  2379  02D1  0873               	movf	??_ISR+2,w
  2380  02D2  008A               	movwf	10
  2381  02D3  0E72               	swapf	??_ISR+1,w
  2382  02D4  0083               	movwf	3
  2383  02D5  0EFE               	swapf	btemp,f
  2384  02D6  0E7E               	swapf	btemp,w
  2385  02D7  0009               	retfie
  2386  02D8                     __end_of_ISR:
  2387                           
  2388                           	psect	intentry
  2389  0004                     __pintentry:	
  2390                           ;incstack = 0
  2391                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2392                           
  2393  0004                     interrupt_function:
  2394  007E                     saved_w	set	btemp
  2395  0004  00FE               	movwf	btemp
  2396  0005  0E03               	swapf	3,w
  2397  0006  00F2               	movwf	??_ISR+1
  2398  0007  080A               	movf	10,w
  2399  0008  00F3               	movwf	??_ISR+2
  2400  0009  120A  118A  2AB1   	ljmp	_ISR
  2401                           
  2402                           	psect	text14
  2403  0190                     __ptext14:	
  2404 ;; *************** function _envio *****************
  2405 ;; Defined at:
  2406 ;;		line 150 in file "main.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0
  2422 ;;      Temps:          1       0       0       0       0
  2423 ;;      Totals:         1       0       0       0       0
  2424 ;;Total ram usage:        1 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_ISR
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function _envio
  2435  0190                     _envio:
  2436  0190                     i1l1348:	
  2437                           ;incstack = 0
  2438                           ; Regs used in _envio: [wreg+status,2+status,0]
  2439                           
  2440                           
  2441                           ;main.c: 151:     toggleTX++;
  2442  0190  3001               	movlw	1
  2443  0191  00F0               	movwf	??_envio
  2444  0192  0870               	movf	??_envio,w
  2445  0193  07F8               	addwf	_toggleTX,f
  2446                           
  2447                           ;main.c: 152:     if (toggleTX == 1){
  2448  0194  0378               	decf	_toggleTX,w
  2449  0195  1D03               	btfss	3,2
  2450  0196  2998               	goto	u55_21
  2451  0197  2999               	goto	u55_20
  2452  0198                     u55_21:
  2453  0198  299E               	goto	i1l1354
  2454  0199                     u55_20:
  2455  0199                     i1l1350:
  2456                           
  2457                           ;main.c: 153:         TXREG = AC1;
  2458  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2459  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2460  019B  083F               	movf	_AC1,w
  2461  019C  0099               	movwf	25	;volatile
  2462  019D                     i1l1352:
  2463                           
  2464                           ;main.c: 154:         PORTAbits.RA0 = 1;
  2465  019D  1405               	bsf	5,0	;volatile
  2466  019E                     i1l1354:
  2467                           
  2468                           ;main.c: 156:     if (toggleTX == 2){
  2469  019E  3002               	movlw	2
  2470  019F  0678               	xorwf	_toggleTX,w
  2471  01A0  1D03               	btfss	3,2
  2472  01A1  29A3               	goto	u56_21
  2473  01A2  29A4               	goto	u56_20
  2474  01A3                     u56_21:
  2475  01A3  29A9               	goto	i1l1360
  2476  01A4                     u56_20:
  2477  01A4                     i1l1356:
  2478                           
  2479                           ;main.c: 157:         TXREG = 0x2E;
  2480  01A4  302E               	movlw	46
  2481  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2482  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2483  01A7  0099               	movwf	25	;volatile
  2484  01A8                     i1l1358:
  2485                           
  2486                           ;main.c: 158:         PORTAbits.RA1 = 1;
  2487  01A8  1485               	bsf	5,1	;volatile
  2488  01A9                     i1l1360:
  2489                           
  2490                           ;main.c: 160:     if (toggleTX == 3){
  2491  01A9  3003               	movlw	3
  2492  01AA  0678               	xorwf	_toggleTX,w
  2493  01AB  1D03               	btfss	3,2
  2494  01AC  29AE               	goto	u57_21
  2495  01AD  29AF               	goto	u57_20
  2496  01AE                     u57_21:
  2497  01AE  29B4               	goto	i1l1366
  2498  01AF                     u57_20:
  2499  01AF                     i1l1362:
  2500                           
  2501                           ;main.c: 161:         TXREG = AD1;
  2502  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2503  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  2504  01B1  083C               	movf	_AD1,w
  2505  01B2  0099               	movwf	25	;volatile
  2506  01B3                     i1l1364:
  2507                           
  2508                           ;main.c: 162:         PORTAbits.RA2 = 1;
  2509  01B3  1505               	bsf	5,2	;volatile
  2510  01B4                     i1l1366:
  2511                           
  2512                           ;main.c: 164:     if (toggleTX == 4){
  2513  01B4  3004               	movlw	4
  2514  01B5  0678               	xorwf	_toggleTX,w
  2515  01B6  1D03               	btfss	3,2
  2516  01B7  29B9               	goto	u58_21
  2517  01B8  29BA               	goto	u58_20
  2518  01B9                     u58_21:
  2519  01B9  29BF               	goto	i1l1372
  2520  01BA                     u58_20:
  2521  01BA                     i1l1368:
  2522                           
  2523                           ;main.c: 165:         TXREG = AU1;
  2524  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2525  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2526  01BC  0839               	movf	_AU1,w
  2527  01BD  0099               	movwf	25	;volatile
  2528  01BE                     i1l1370:
  2529                           
  2530                           ;main.c: 166:         PORTAbits.RA3 = 1;
  2531  01BE  1585               	bsf	5,3	;volatile
  2532  01BF                     i1l1372:
  2533                           
  2534                           ;main.c: 168:     if (toggleTX == 5){
  2535  01BF  3005               	movlw	5
  2536  01C0  0678               	xorwf	_toggleTX,w
  2537  01C1  1D03               	btfss	3,2
  2538  01C2  29C4               	goto	u59_21
  2539  01C3  29C5               	goto	u59_20
  2540  01C4                     u59_21:
  2541  01C4  29C9               	goto	i1l1376
  2542  01C5                     u59_20:
  2543  01C5                     i1l1374:
  2544                           
  2545                           ;main.c: 169:         TXREG = 0x76;
  2546  01C5  3076               	movlw	118
  2547  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2548  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2549  01C8  0099               	movwf	25	;volatile
  2550  01C9                     i1l1376:
  2551                           
  2552                           ;main.c: 171:     if (toggleTX == 6){
  2553  01C9  3006               	movlw	6
  2554  01CA  0678               	xorwf	_toggleTX,w
  2555  01CB  1D03               	btfss	3,2
  2556  01CC  29CE               	goto	u60_21
  2557  01CD  29CF               	goto	u60_20
  2558  01CE                     u60_21:
  2559  01CE  29D4               	goto	i1l150
  2560  01CF                     u60_20:
  2561  01CF                     i1l1378:
  2562                           
  2563                           ;main.c: 172:         TXREG = 13;
  2564  01CF  300D               	movlw	13
  2565  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2566  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2567  01D2  0099               	movwf	25	;volatile
  2568  01D3                     i1l1380:
  2569                           
  2570                           ;main.c: 173:         toggleTX = 0;
  2571  01D3  01F8               	clrf	_toggleTX
  2572  01D4                     i1l150:
  2573  01D4  0008               	return
  2574  01D5                     __end_of_envio:
  2575  007E                     btemp	set	126	;btemp
  2576  007E                     wtemp0	set	126
  2577                           
  2578                           	psect	config
  2579                           
  2580                           ;Config register CONFIG1 @ 0x2007
  2581                           ;	Oscillator Selection bits
  2582                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2583                           ;	Watchdog Timer Enable bit
  2584                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2585                           ;	Power-up Timer Enable bit
  2586                           ;	PWRTE = OFF, PWRT disabled
  2587                           ;	RE3/MCLR pin function select bit
  2588                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2589                           ;	Code Protection bit
  2590                           ;	CP = OFF, Program memory code protection is disabled
  2591                           ;	Data Code Protection bit
  2592                           ;	CPD = OFF, Data memory code protection is disabled
  2593                           ;	Brown Out Reset Selection bits
  2594                           ;	BOREN = OFF, BOR disabled
  2595                           ;	Internal External Switchover bit
  2596                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2597                           ;	Fail-Safe Clock Monitor Enabled bit
  2598                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2599                           ;	Low Voltage Programming Enable bit
  2600                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2601                           ;	In-Circuit Debugger Mode bit
  2602                           ;	DEBUG = 0x1, unprogrammed default
  2603  2007                     	org	8199
  2604  2007  20D4               	dw	8404
  2605                           
  2606                           ;Config register CONFIG2 @ 0x2008
  2607                           ;	Brown-out Reset Selection bit
  2608                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2609                           ;	Flash Program Memory Self Write Enable bits
  2610                           ;	WRT = OFF, Write protection off
  2611  2008                     	org	8200
  2612  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     23      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _LECT1->___bmul
    _LECT1->___wmul
    _LECT1->_num_ascii
    ___awdiv->___wmul

Critical Paths under _ISR in COMMON

    _ISR->_envio

Critical Paths under _main in BANK0

    _main->_LECT1
    _setup->_spiInit
    _LECT1->___awdiv
    ___awdiv->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2167
                                             21 BANK0      2     2      0
                           _CONTADOR
                              _LECT1
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                           _USARTcon
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _USARTcon                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                8     8      0    1689
                                             13 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     406
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CONTADOR                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              1 COMMON     3     3      0
                              _envio
 ---------------------------------------------------------------------------------
 (4) _envio                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONTADOR
   _LECT1
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _setup
     _USARTcon
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _ISR (ROOT)
   _envio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 31 20:59:12 2021

         ___bmul@product 0020              _SSPSTATbits 0094             ___awdiv@sign 002A  
                     _v1 0079                       _v2 004B                       fsr 0004  
    ___wmul@multiplicand 0022                      _AC1 003F                      _AC2 003E  
                    _AC3 003D                      _AD1 003C                      _AD2 003B  
                    _AD3 003A                      l204 0322                      l141 00D1  
                    l209 0215                      l306 0298                      l138 0252  
                    l332 030C                      l308 02B0                      l180 033A  
                    l157 0289                      l173 02F0                      l174 02F5  
                    l191 032B                      l183 0340                      l177 0334  
                    l459 013A                      _AU1 0039                      _AU2 0038  
                    _AU3 0037                      u510 0118                      u511 0117  
                    u505 0108                      u610 0259                      u530 012C  
                    u450 00D9                      u611 0258                      u531 012B  
                    u515 0114                      u451 00D8                      u620 0263  
                    u540 0131                      u460 00E4                      u380 033A  
                    _ISR 02B1                      u621 0262                      u541 0130  
                    u525 0120                      u461 00E3                      u381 0339  
                    u630 026A                      u470 00F5                      u631 0269  
                    u471 00F4                      u640 0275                      u800 0170  
                    u641 0274                      u801 016F                      u650 027F  
                    u490 0107                      u730 02E0                      u810 0176  
                    u651 027E                      u491 0106                      u731 02DF  
                    u811 0175                      u660 0286                      u740 0292  
                    u820 017C                      u661 0285                      u485 00F9  
                    u741 0291                      u821 017B                      u770 02AC  
                    u771 02AB                      u755 0299                      u780 02FE  
                    u781 02FD                      u765 02A0                      u837 0149  
                    u790 030B                      u791 030A                      u847 0163  
                    _Un1 0042                      _Un2 0041                      _Un3 0040  
                    _res 0049                      _sum 004A                      indf 0000  
                   ?_ISR 0070                     l1310 00DE                     l1320 00EF  
                   l1312 00E0                     l1304 00D2                     l1330 0107  
                   l1322 00F5                     l1314 00E4                     l1306 00D5  
                   l1332 0118                     l1324 00F8                     l1340 012C  
                   l1316 00E9                     l1308 00D9                     l1180 031A  
                   l1342 0131                     l1334 011E                     l1326 00FF  
                   l1318 00ED                     l1182 031D                     l1174 030D  
                   l1430 0328                     l1440 0263                     l1344 0136  
                   l1336 011F                     l1328 0103                     l1184 031E  
                   l1176 0315                     l1450 0279                     l1442 026A  
                   l1434 0253                     l1338 0126                     l1602 01EB  
                   l1610 01ED                     l1186 031F                     l1178 0318  
                   l1530 02D9                     l1274 0334                     l1426 033C  
                   l1452 027F                     l1444 026B                     l1436 0259  
                   l1620 028C                     l1540 01D8                     l1532 02E0  
                   l1428 0323                     l1700 0140                     l1454 0286  
                   l1446 026F                     l1438 025D                     l1622 0292  
                   l1542 01D9                     l1534 02E6                     l1710 0167  
                   l1702 0143                     l1456 0287                     l1448 0275  
                   l1640 0304                     l1632 02F9                     l1624 029F  
                   l1560 01DD                     l1536 02E8                     l1720 017E  
                   l1712 016A                     l1704 014D                     l1642 030B  
                   l1634 02FA                     l1626 02A6                     l1618 028A  
                   l1554 01DB                     l1538 02EF                     l1650 021F  
                   l1722 0183                     l1714 0170                     l1706 0153  
                   l1636 02FE                     l1628 02AC                     l1572 01E1  
                   l1660 022B                     l1652 0220                     l1724 0188  
                   l1716 0176                     l1708 015D                     l1638 0302  
                   l1590 01E7                     l1566 01DF                     l1670 0230  
                   l1662 022C                     l1654 0227                     l1646 0216  
                   l1718 017C                     l1584 01E5                     l1680 0237  
                   l1672 0231                     l1664 022D                     l1656 0229  
                   l1648 021E                     l1578 01E3                     l1690 0020  
                   l1682 0240                     l1674 0232                     l1666 022E  
                   l1658 022A                     l1756 01F5                     l1596 01E9  
                   l1692 00B0                     l1684 0241                     l1676 0235  
                   l1668 022F                     l1694 00BB                     l1686 0242  
                   l1678 0236                     l1696 00C6                     l1688 0247  
                   l1698 013B                     _CONT 0048                     _TMR0 0001  
                   _Dec1 0045                     _Dec2 0044                     _Dec3 0043  
                   _Cen1 0076                     _Cen2 0047                     _Cen3 0046  
                   _main 013B                     btemp 007E                     start 000C  
      ___bmul@multiplier 0021         __end_of_CONTADOR 028A                    ??_ISR 0071  
                  ?_main 0070          __end_of___awdiv 013B                    _ANSEL 0188  
        ___awdiv@divisor 0024                    _LECT1 0020                    i1l150 01D4  
                  i1l126 02D1          ___awdiv@counter 0029                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u60_20 01CF                    u60_21 01CE                    u55_20 0199  
                  u55_21 0198                    u56_20 01A4                    u56_21 01A3  
                  u57_20 01AF                    u57_21 01AE                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  u58_20 01BA                    u58_21 01B9                    u59_20 01C5  
                  u67_20 02B5                    u59_21 01C4                    u67_21 02B4  
                  u68_20 02C0                    u68_21 02BF                    u69_20 02CD  
                  u69_21 02CC                    _TXREG 0019                    _envio 0190  
                  _signo 0077                    _setup 0216         __end_of_USARTcon 0323  
                  pclath 000A          __end_of_spiInit 02F6          __end_of_spiRead 032C  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0190                   ??_main 0035                   ?_LECT1 0070  
                 _ADCON1 009F                   ?_envio 0070         ___awdiv@dividend 0026  
                 ?_setup 0070                   _ANSELH 0189                   i1l1350 0199  
                 i1l1360 01A9                   i1l1352 019D                   i1l1370 01BE  
                 i1l1362 01AF                   i1l1354 019E                   i1l1380 01D3  
                 i1l1372 01BF                   i1l1364 01B3                   i1l1356 01A4  
                 i1l1348 0190                   i1l1374 01C5                   i1l1366 01B4  
                 i1l1358 01A8                   i1l1470 02B6                   i1l1376 01C9  
                 i1l1368 01BA                   i1l1480 02CD                   i1l1472 02BA  
                 i1l1378 01CF                   i1l1474 02C0                   i1l1466 02B1  
                 i1l1476 02C5                   i1l1468 02B5                   i1l1478 02C8  
                 _SPBRGH 009A                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 ___bmul 02F6                   ___wmul 028A                ??___awdiv 0028  
       ___awdiv@quotient 002B                   saved_w 007E         __end_of_spiWrite 0341  
              ??_spiInit 0074                ??_spiRead 0074                ?_CONTADOR 0070  
__end_of__initialization 001C            __end_of_LECT1 00D2      ___bmul@multiplicand 0074  
         __pcstackCOMMON 0070            __end_of_envio 01D5            __end_of_setup 0253  
              ?_USARTcon 0070                  ??_LECT1 002D                  ??_envio 0070  
                ??_setup 0075               ??_CONTADOR 0074               __pbssBANK0 0037  
             __pmaintext 013B                  ?___bmul 0074                  ?___wmul 0020  
             __pintentry 0004  __size_of_spiReceiveWait 0007               ??_USARTcon 0074  
     __size_of_num_ascii 0041                  _SSPSTAT 0094                ?_spiWrite 0070  
        __size_of___bmul 0017                  ___awdiv 00D2          __size_of___wmul 0027  
                __ptext1 033B                  __ptext2 0323                  __ptext3 0334  
                __ptext4 0216                  __ptext5 02D8                  __ptext6 030D  
                __ptext7 0020                  __ptext8 01D5                  __ptext9 028A  
           __size_of_ISR 0027                  _spiInit 02D8                  _spiRead 0323  
                clrloop0 032D     end_of_initialization 001C        __end_of_num_ascii 0216  
              _RCSTAbits 0018               ??_spiWrite 0074                _PORTAbits 0005  
              _PORTCbits 0007                _TRISCbits 0087              spiWrite@dat 0074  
      __size_of_CONTADOR 0037                _TXSTAbits 0098           _spiReceiveWait 0334  
         __end_of___bmul 030D           __end_of___wmul 02B1              _BAUDCTLbits 0187  
      __size_of_USARTcon 0016      start_initialization 000F              __end_of_ISR 02D8  
 __end_of_spiReceiveWait 033B                 ??___bmul 0075                 ??___wmul 0074  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070                 ?___awdiv 0024        __size_of_spiWrite 0006  
         __size_of_LECT1 00B2                 ?_spiInit 0020                 ?_spiRead 0070  
         __size_of_envio 0045                 _CONTADOR 0253           __size_of_setup 003D  
   spiInit@sTransmitEdge 0022        interrupt_function 0004           ___wmul@product 0074  
              clear_ram0 032C                 _PIE1bits 008C       spiInit@sDataSample 0020  
               _PIR1bits 000C                _num_ascii 01D5                 _USARTcon 030D  
      ___wmul@multiplier 0020               ?_num_ascii 0070         __size_of___awdiv 0069  
               __ptext10 02F6                 __ptext11 00D2                 __ptext12 0253  
               __ptext13 02B1                 __ptext14 0190         __size_of_spiInit 001E  
       __size_of_spiRead 0009            __size_of_main 0055                 _spiWrite 033B  
               _toggleTX 0078             spiInit@sType 0074        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0074  
           num_ascii@num 0020               _OSCCONbits 008F              ??_num_ascii 0074  
             _OPTION_REG 0081  
