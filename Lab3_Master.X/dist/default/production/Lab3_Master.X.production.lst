

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 03 03:45:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0018                     _RCSTAbits	set	24
   455  0013                     _SSPBUF	set	19
   456  0014                     _SSPCON	set	20
   457  0019                     _TXREG	set	25
   458  0009                     _PORTE	set	9
   459  0008                     _PORTD	set	8
   460  0007                     _PORTC	set	7
   461  0006                     _PORTB	set	6
   462  0005                     _PORTA	set	5
   463  0007                     _PORTCbits	set	7
   464  001A                     _RCREG	set	26
   465  000C                     _PIR1bits	set	12
   466  0001                     _TMR0	set	1
   467  000B                     _INTCONbits	set	11
   468  0099                     _SPBRG	set	153
   469  009A                     _SPBRGH	set	154
   470  0098                     _TXSTAbits	set	152
   471  0094                     _SSPSTATbits	set	148
   472  0094                     _SSPSTAT	set	148
   473  0081                     _OPTION_REG	set	129
   474  009F                     _ADCON1	set	159
   475  008F                     _OSCCONbits	set	143
   476  0089                     _TRISE	set	137
   477  0088                     _TRISD	set	136
   478  0087                     _TRISCbits	set	135
   479  0086                     _TRISB	set	134
   480  0085                     _TRISA	set	133
   481  008C                     _PIE1bits	set	140
   482  043B                     _TRISC3	set	1083
   483  043D                     _TRISC5	set	1085
   484  043A                     _TRISC2	set	1082
   485  0187                     _BAUDCTLbits	set	391
   486  0189                     _ANSELH	set	393
   487  0188                     _ANSEL	set	392
   488                           
   489                           	psect	cinit
   490  000F                     start_initialization:	
   491                           ; #config settings
   492                           
   493  000F                     __initialization:
   494                           
   495                           ; Clear objects allocated to COMMON
   496  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   497  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   498  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   499  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   500                           
   501                           ; Clear objects allocated to BANK0
   502  0013  1383               	bcf	3,7	;select IRP bank0
   503  0014  3039               	movlw	low __pbssBANK0
   504  0015  0084               	movwf	4
   505  0016  304E               	movlw	low (__pbssBANK0+21)
   506  0017  120A  118A  24D4  120A  118A  	fcall	clear_ram0
   507  001C                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510  001C                     __end_of__initialization:
   511  001C  0183               	clrf	3
   512  001D  120A  118A  2A96   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssCOMMON
   515  0076                     __pbssCOMMON:
   516  0076                     _Cen1:
   517  0076                     	ds	1
   518  0077                     _signo:
   519  0077                     	ds	1
   520  0078                     _toggleTX:
   521  0078                     	ds	1
   522  0079                     _v1:
   523  0079                     	ds	1
   524                           
   525                           	psect	bssBANK0
   526  0039                     __pbssBANK0:
   527  0039                     _AU3:
   528  0039                     	ds	1
   529  003A                     _AU2:
   530  003A                     	ds	1
   531  003B                     _AU1:
   532  003B                     	ds	1
   533  003C                     _AD3:
   534  003C                     	ds	1
   535  003D                     _AD2:
   536  003D                     	ds	1
   537  003E                     _AD1:
   538  003E                     	ds	1
   539  003F                     _AC3:
   540  003F                     	ds	1
   541  0040                     _AC2:
   542  0040                     	ds	1
   543  0041                     _AC1:
   544  0041                     	ds	1
   545  0042                     _Un3:
   546  0042                     	ds	1
   547  0043                     _Un2:
   548  0043                     	ds	1
   549  0044                     _Un1:
   550  0044                     	ds	1
   551  0045                     _Dec3:
   552  0045                     	ds	1
   553  0046                     _Dec2:
   554  0046                     	ds	1
   555  0047                     _Dec1:
   556  0047                     	ds	1
   557  0048                     _Cen3:
   558  0048                     	ds	1
   559  0049                     _Cen2:
   560  0049                     	ds	1
   561  004A                     _CONT:
   562  004A                     	ds	1
   563  004B                     _res:
   564  004B                     	ds	1
   565  004C                     _sum:
   566  004C                     	ds	1
   567  004D                     _v2:
   568  004D                     	ds	1
   569                           
   570                           	psect	clrtext
   571  04D4                     clear_ram0:	
   572                           ;	Called with FSR containing the base address, and
   573                           ;	W with the last address+1
   574                           
   575  04D4  0064               	clrwdt	;clear the watchdog before getting into this loop
   576  04D5                     clrloop0:
   577  04D5  0180               	clrf	0	;clear RAM location pointed to by FSR
   578  04D6  0A84               	incf	4,f	;increment pointer
   579  04D7  0604               	xorwf	4,w	;XOR with final address
   580  04D8  1903               	btfsc	3,2	;have we reached the end yet?
   581  04D9  3400               	retlw	0	;all done for this memory range, return
   582  04DA  0604               	xorwf	4,w	;XOR again to restore value
   583  04DB  2CD5               	goto	clrloop0	;do the next byte
   584                           
   585                           	psect	cstackCOMMON
   586  0070                     __pcstackCOMMON:
   587  0070                     ?_envio:
   588  0070                     ??_envio:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_setup:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_spiWrite:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_spiRead:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_CONTADOR:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_LECT1:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_LECT2:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_USARTcon:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_num_ascii:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_ISR:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_main:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_spiReceiveWait:	
   622                           ; 1 bytes @ 0x0
   623                           
   624                           
   625                           ; 1 bytes @ 0x0
   626  0070                     	ds	1
   627  0071                     ??_ISR:
   628                           
   629                           ; 1 bytes @ 0x1
   630  0071                     	ds	3
   631  0074                     ??_spiWrite:
   632  0074                     ??_spiRead:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0074                     ??_CONTADOR:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  0074                     ??_USARTcon:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  0074                     ??_spiInit:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0074                     ??_num_ascii:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ??_spiReceiveWait:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     ??___wmul:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     ?___bmul:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     spiInit@sType:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     spiWrite@dat:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ___bmul@multiplicand:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     ___wmul@product:	
   666                           ; 1 bytes @ 0x4
   667                           
   668                           
   669                           ; 2 bytes @ 0x4
   670  0074                     	ds	1
   671  0075                     ??_setup:
   672  0075                     ??___bmul:	
   673                           ; 1 bytes @ 0x5
   674                           
   675                           
   676                           ; 1 bytes @ 0x5
   677  0075                     	ds	1
   678                           
   679                           	psect	cstackBANK0
   680  0020                     __pcstackBANK0:
   681  0020                     ?_spiInit:
   682  0020                     ?___wmul:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0020                     spiInit@sDataSample:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0020                     num_ascii@num:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0020                     ___bmul@product:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0020                     ___wmul@multiplier:	
   695                           ; 1 bytes @ 0x0
   696                           
   697                           
   698                           ; 2 bytes @ 0x0
   699  0020                     	ds	1
   700  0021                     spiInit@sClockIdle:
   701  0021                     ___bmul@multiplier:	
   702                           ; 1 bytes @ 0x1
   703                           
   704                           
   705                           ; 1 bytes @ 0x1
   706  0021                     	ds	1
   707  0022                     spiInit@sTransmitEdge:
   708  0022                     ___wmul@multiplicand:	
   709                           ; 1 bytes @ 0x2
   710                           
   711                           
   712                           ; 2 bytes @ 0x2
   713  0022                     	ds	2
   714  0024                     ?___awdiv:
   715  0024                     ___awdiv@divisor:	
   716                           ; 2 bytes @ 0x4
   717                           
   718                           
   719                           ; 2 bytes @ 0x4
   720  0024                     	ds	2
   721  0026                     ___awdiv@dividend:
   722                           
   723                           ; 2 bytes @ 0x6
   724  0026                     	ds	2
   725  0028                     ??___awdiv:
   726                           
   727                           ; 1 bytes @ 0x8
   728  0028                     	ds	1
   729  0029                     ___awdiv@counter:
   730                           
   731                           ; 1 bytes @ 0x9
   732  0029                     	ds	1
   733  002A                     ___awdiv@sign:
   734                           
   735                           ; 1 bytes @ 0xA
   736  002A                     	ds	1
   737  002B                     ___awdiv@quotient:
   738                           
   739                           ; 2 bytes @ 0xB
   740  002B                     	ds	2
   741  002D                     ??_LECT1:
   742  002D                     ??_LECT2:	
   743                           ; 1 bytes @ 0xD
   744                           
   745                           
   746                           ; 1 bytes @ 0xD
   747  002D                     	ds	8
   748  0035                     _LECT2$1177:
   749                           
   750                           ; 2 bytes @ 0x15
   751  0035                     	ds	2
   752  0037                     ??_main:
   753                           
   754                           ; 1 bytes @ 0x17
   755  0037                     	ds	2
   756                           
   757                           	psect	maintext
   758  0296                     __pmaintext:	
   759 ;;
   760 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   761 ;;
   762 ;; *************** function _main *****************
   763 ;; Defined at:
   764 ;;		line 86 in file "main.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : B00/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       2       0       0       0
   781 ;;      Totals:         0       2       0       0       0
   782 ;;Total ram usage:        2 bytes
   783 ;; Hardware stack levels required when called: 4
   784 ;; This function calls:
   785 ;;		_CONTADOR
   786 ;;		_LECT1
   787 ;;		_LECT2
   788 ;;		_setup
   789 ;;		_spiRead
   790 ;;		_spiWrite
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _main
   798  0296                     _main:
   799  0296                     l1895:	
   800                           ;incstack = 0
   801                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   802                           
   803                           
   804                           ;main.c: 87:     setup();
   805  0296  120A  118A  23BE  120A  118A  	fcall	_setup
   806  029B                     l1897:
   807                           
   808                           ;main.c: 90:        PORTCbits.RC2 = 0;
   809  029B  1283               	bcf	3,5	;RP0=0, select bank0
   810  029C  1303               	bcf	3,6	;RP1=0, select bank0
   811  029D  1107               	bcf	7,2	;volatile
   812  029E                     l1899:
   813                           
   814                           ;main.c: 91:        _delay((unsigned long)((1)*(8000000/4000.0)));
   815  029E  3003               	movlw	3
   816  029F  1283               	bcf	3,5	;RP0=0, select bank0
   817  02A0  1303               	bcf	3,6	;RP1=0, select bank0
   818  02A1  00B8               	movwf	??_main+1
   819  02A2  3097               	movlw	151
   820  02A3  00B7               	movwf	??_main
   821  02A4                     u1197:
   822  02A4  0BB7               	decfsz	??_main,f
   823  02A5  2AA4               	goto	u1197
   824  02A6  0BB8               	decfsz	??_main+1,f
   825  02A7  2AA4               	goto	u1197
   826  02A8                     l1901:
   827                           
   828                           ;main.c: 92:        spiWrite(0);
   829  02A8  3000               	movlw	0
   830  02A9  120A  118A  24E3  120A  118A  	fcall	_spiWrite
   831  02AE                     l1903:
   832                           
   833                           ;main.c: 93:        v1 = spiRead();
   834  02AE  120A  118A  24CB  120A  118A  	fcall	_spiRead
   835  02B3  1283               	bcf	3,5	;RP0=0, select bank0
   836  02B4  1303               	bcf	3,6	;RP1=0, select bank0
   837  02B5  00B7               	movwf	??_main
   838  02B6  0837               	movf	??_main,w
   839  02B7  00F9               	movwf	_v1
   840  02B8                     l1905:
   841                           
   842                           ;main.c: 94:        _delay((unsigned long)((1)*(8000000/4000.0)));
   843  02B8  3003               	movlw	3
   844  02B9  1283               	bcf	3,5	;RP0=0, select bank0
   845  02BA  1303               	bcf	3,6	;RP1=0, select bank0
   846  02BB  00B8               	movwf	??_main+1
   847  02BC  3097               	movlw	151
   848  02BD  00B7               	movwf	??_main
   849  02BE                     u1207:
   850  02BE  0BB7               	decfsz	??_main,f
   851  02BF  2ABE               	goto	u1207
   852  02C0  0BB8               	decfsz	??_main+1,f
   853  02C1  2ABE               	goto	u1207
   854  02C2                     l1907:
   855                           
   856                           ;main.c: 95:        PORTCbits.RC2 = 1;
   857  02C2  1283               	bcf	3,5	;RP0=0, select bank0
   858  02C3  1303               	bcf	3,6	;RP1=0, select bank0
   859  02C4  1507               	bsf	7,2	;volatile
   860  02C5                     l1909:
   861                           
   862                           ;main.c: 96:        PORTCbits.RC2 = 0;
   863  02C5  1107               	bcf	7,2	;volatile
   864  02C6                     l1911:
   865                           
   866                           ;main.c: 97:        _delay((unsigned long)((1)*(8000000/4000.0)));
   867  02C6  3003               	movlw	3
   868  02C7  1283               	bcf	3,5	;RP0=0, select bank0
   869  02C8  1303               	bcf	3,6	;RP1=0, select bank0
   870  02C9  00B8               	movwf	??_main+1
   871  02CA  3097               	movlw	151
   872  02CB  00B7               	movwf	??_main
   873  02CC                     u1217:
   874  02CC  0BB7               	decfsz	??_main,f
   875  02CD  2ACC               	goto	u1217
   876  02CE  0BB8               	decfsz	??_main+1,f
   877  02CF  2ACC               	goto	u1217
   878  02D0                     l1913:
   879                           
   880                           ;main.c: 98:        spiWrite(0);
   881  02D0  3000               	movlw	0
   882  02D1  120A  118A  24E3  120A  118A  	fcall	_spiWrite
   883  02D6                     l1915:
   884                           
   885                           ;main.c: 99:        v2 = spiRead();
   886  02D6  120A  118A  24CB  120A  118A  	fcall	_spiRead
   887  02DB  1283               	bcf	3,5	;RP0=0, select bank0
   888  02DC  1303               	bcf	3,6	;RP1=0, select bank0
   889  02DD  00B7               	movwf	??_main
   890  02DE  0837               	movf	??_main,w
   891  02DF  00CD               	movwf	_v2
   892  02E0                     l1917:
   893                           
   894                           ;main.c: 100:        _delay((unsigned long)((1)*(8000000/4000.0)));
   895  02E0  3003               	movlw	3
   896  02E1  1283               	bcf	3,5	;RP0=0, select bank0
   897  02E2  1303               	bcf	3,6	;RP1=0, select bank0
   898  02E3  00B8               	movwf	??_main+1
   899  02E4  3097               	movlw	151
   900  02E5  00B7               	movwf	??_main
   901  02E6                     u1227:
   902  02E6  0BB7               	decfsz	??_main,f
   903  02E7  2AE6               	goto	u1227
   904  02E8  0BB8               	decfsz	??_main+1,f
   905  02E9  2AE6               	goto	u1227
   906  02EA                     l1919:
   907                           
   908                           ;main.c: 101:        PORTCbits.RC2 = 1;
   909  02EA  1283               	bcf	3,5	;RP0=0, select bank0
   910  02EB  1303               	bcf	3,6	;RP1=0, select bank0
   911  02EC  1507               	bsf	7,2	;volatile
   912  02ED                     l1921:
   913                           
   914                           ;main.c: 102:        if(signo != 13 && signo != 43 && signo != 45){
   915  02ED  300D               	movlw	13
   916  02EE  0677               	xorwf	_signo,w
   917  02EF  1903               	btfsc	3,2
   918  02F0  2AF2               	goto	u1161
   919  02F1  2AF3               	goto	u1160
   920  02F2                     u1161:
   921  02F2  2B01               	goto	l1929
   922  02F3                     u1160:
   923  02F3                     l1923:
   924  02F3  302B               	movlw	43
   925  02F4  0677               	xorwf	_signo,w
   926  02F5  1903               	btfsc	3,2
   927  02F6  2AF8               	goto	u1171
   928  02F7  2AF9               	goto	u1170
   929  02F8                     u1171:
   930  02F8  2B01               	goto	l1929
   931  02F9                     u1170:
   932  02F9                     l1925:
   933  02F9  302D               	movlw	45
   934  02FA  0677               	xorwf	_signo,w
   935  02FB  1903               	btfsc	3,2
   936  02FC  2AFE               	goto	u1181
   937  02FD  2AFF               	goto	u1180
   938  02FE                     u1181:
   939  02FE  2B01               	goto	l1929
   940  02FF                     u1180:
   941  02FF                     l1927:
   942                           
   943                           ;main.c: 103:             sum = 0;
   944  02FF  01CC               	clrf	_sum
   945                           
   946                           ;main.c: 104:             res = 0;
   947  0300  01CB               	clrf	_res
   948  0301                     l1929:
   949                           
   950                           ;main.c: 106:         CONTADOR();
   951  0301  120A  118A  23FB  120A  118A  	fcall	_CONTADOR
   952  0306                     l1931:
   953                           
   954                           ;main.c: 107:         LECT1();
   955  0306  120A  118A  21E4  120A  118A  	fcall	_LECT1
   956  030B                     l1933:
   957                           
   958                           ;main.c: 108:         LECT2();
   959  030B  120A  118A  2115  120A  118A  	fcall	_LECT2
   960  0310  2A9B               	goto	l1897
   961  0311  120A  118A  280C   	ljmp	start
   962  0314                     __end_of_main:
   963                           
   964                           	psect	text1
   965  04E3                     __ptext1:	
   966 ;; *************** function _spiWrite *****************
   967 ;; Defined at:
   968 ;;		line 25 in file "SPI_1.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  dat             1    wreg     unsigned char 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  dat             1    4[COMMON] unsigned char 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         1       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0
   985 ;;      Totals:         1       0       0       0       0
   986 ;;Total ram usage:        1 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 2
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _spiWrite
   998  04E3                     _spiWrite:
   999                           
  1000                           ;incstack = 0
  1001                           ; Regs used in _spiWrite: [wreg]
  1002                           ;spiWrite@dat stored from wreg
  1003  04E3  00F4               	movwf	spiWrite@dat
  1004  04E4                     l1595:
  1005                           
  1006                           ;SPI_1.c: 25: void spiWrite(char dat);SPI_1.c: 26: {;SPI_1.c: 27:     SSPBUF = dat;
  1007  04E4  0874               	movf	spiWrite@dat,w
  1008  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1009  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1010  04E7  0093               	movwf	19	;volatile
  1011  04E8                     l204:
  1012  04E8  0008               	return
  1013  04E9                     __end_of_spiWrite:
  1014                           
  1015                           	psect	text2
  1016  04CB                     __ptext2:	
  1017 ;; *************** function _spiRead *****************
  1018 ;; Defined at:
  1019 ;;		line 38 in file "SPI_1.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      unsigned char 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0, pclath, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 3
  1040 ;; This function calls:
  1041 ;;		_spiReceiveWait
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function _spiRead
  1049  04CB                     _spiRead:
  1050  04CB                     l1597:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1053                           
  1054                           
  1055                           ;SPI_1.c: 40:     spiReceiveWait();
  1056  04CB  120A  118A  24DC  120A  118A  	fcall	_spiReceiveWait
  1057  04D0                     l1599:
  1058                           
  1059                           ;SPI_1.c: 41:     return(SSPBUF);
  1060  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  1061  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  1062  04D2  0813               	movf	19,w	;volatile
  1063  04D3                     l212:
  1064  04D3  0008               	return
  1065  04D4                     __end_of_spiRead:
  1066                           
  1067                           	psect	text3
  1068  04DC                     __ptext3:	
  1069 ;; *************** function _spiReceiveWait *****************
  1070 ;; Defined at:
  1071 ;;		line 20 in file "SPI_1.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		None
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         0       0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0
  1088 ;;      Totals:         0       0       0       0       0
  1089 ;;Total ram usage:        0 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 2
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_spiRead
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _spiReceiveWait
  1101  04DC                     _spiReceiveWait:
  1102  04DC                     l1379:	
  1103                           ;incstack = 0
  1104                           ; Regs used in _spiReceiveWait: []
  1105                           
  1106  04DC                     l198:	
  1107                           ;SPI_1.c: 22:     while ( !SSPSTATbits.BF );
  1108                           
  1109  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  1110  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  1111  04DE  1C14               	btfss	20,0	;volatile
  1112  04DF  2CE1               	goto	u561
  1113  04E0  2CE2               	goto	u560
  1114  04E1                     u561:
  1115  04E1  2CDC               	goto	l198
  1116  04E2                     u560:
  1117  04E2                     l201:
  1118  04E2  0008               	return
  1119  04E3                     __end_of_spiReceiveWait:
  1120                           
  1121                           	psect	text4
  1122  03BE                     __ptext4:	
  1123 ;; *************** function _setup *****************
  1124 ;; Defined at:
  1125 ;;		line 113 in file "main.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, pclath, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 3
  1146 ;; This function calls:
  1147 ;;		_USARTcon
  1148 ;;		_spiInit
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _setup
  1156  03BE                     _setup:
  1157  03BE                     l1835:	
  1158                           ;incstack = 0
  1159                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1160                           
  1161                           
  1162                           ;main.c: 115:     ANSEL = 0;
  1163  03BE  1683               	bsf	3,5	;RP0=1, select bank3
  1164  03BF  1703               	bsf	3,6	;RP1=1, select bank3
  1165  03C0  0188               	clrf	8	;volatile
  1166                           
  1167                           ;main.c: 116:     ANSELH = 0;
  1168  03C1  0189               	clrf	9	;volatile
  1169                           
  1170                           ;main.c: 117:     TRISA = 0;
  1171  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  1172  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  1173  03C4  0185               	clrf	5	;volatile
  1174                           
  1175                           ;main.c: 118:     TRISB = 0;
  1176  03C5  0186               	clrf	6	;volatile
  1177  03C6                     l1837:
  1178                           
  1179                           ;main.c: 119:     TRISC2 = 0;
  1180  03C6  1107               	bcf	7,2	;volatile
  1181  03C7                     l1839:
  1182                           
  1183                           ;main.c: 120:     TRISCbits.TRISC6 = 0;
  1184  03C7  1307               	bcf	7,6	;volatile
  1185  03C8                     l1841:
  1186                           
  1187                           ;main.c: 121:     TRISCbits.TRISC7 = 1;
  1188  03C8  1787               	bsf	7,7	;volatile
  1189                           
  1190                           ;main.c: 122:     TRISD = 0;
  1191  03C9  0188               	clrf	8	;volatile
  1192                           
  1193                           ;main.c: 123:     TRISE = 0;
  1194  03CA  0189               	clrf	9	;volatile
  1195                           
  1196                           ;main.c: 124:     PORTA = 0;
  1197  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1198  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1199  03CD  0185               	clrf	5	;volatile
  1200                           
  1201                           ;main.c: 125:     PORTB = 0;
  1202  03CE  0186               	clrf	6	;volatile
  1203  03CF                     l1843:
  1204                           
  1205                           ;main.c: 126:     PORTC = 0b00000100;
  1206  03CF  3004               	movlw	4
  1207  03D0  0087               	movwf	7	;volatile
  1208  03D1                     l1845:
  1209                           
  1210                           ;main.c: 127:     PORTD = 0;
  1211  03D1  0188               	clrf	8	;volatile
  1212  03D2                     l1847:
  1213                           
  1214                           ;main.c: 128:     PORTE = 0;
  1215  03D2  0189               	clrf	9	;volatile
  1216  03D3                     l1849:
  1217                           
  1218                           ;main.c: 129:     INTCONbits.TMR0IF = 0;
  1219  03D3  110B               	bcf	11,2	;volatile
  1220  03D4                     l1851:
  1221                           
  1222                           ;main.c: 130:     INTCONbits.RBIF = 0;
  1223  03D4  100B               	bcf	11,0	;volatile
  1224  03D5                     l1853:
  1225                           
  1226                           ;main.c: 131:     INTCONbits.GIE = 1;
  1227  03D5  178B               	bsf	11,7	;volatile
  1228  03D6                     l1855:
  1229                           
  1230                           ;main.c: 132:     INTCONbits.PEIE = 1;
  1231  03D6  170B               	bsf	11,6	;volatile
  1232  03D7                     l1857:
  1233                           
  1234                           ;main.c: 133:     INTCONbits.T0IE = 1;
  1235  03D7  168B               	bsf	11,5	;volatile
  1236  03D8                     l1859:
  1237                           
  1238                           ;main.c: 134:     INTCONbits.RBIE = 0;
  1239  03D8  118B               	bcf	11,3	;volatile
  1240  03D9                     l1861:
  1241                           
  1242                           ;main.c: 135:     PIR1bits.ADIF = 0;
  1243  03D9  130C               	bcf	12,6	;volatile
  1244  03DA                     l1863:
  1245                           
  1246                           ;main.c: 136:     OSCCONbits.IRCF0 = 1;
  1247  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  1248  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  1249  03DC  160F               	bsf	15,4	;volatile
  1250  03DD                     l1865:
  1251                           
  1252                           ;main.c: 137:     OSCCONbits.IRCF1 = 1;
  1253  03DD  168F               	bsf	15,5	;volatile
  1254  03DE                     l1867:
  1255                           
  1256                           ;main.c: 138:     OSCCONbits.IRCF2 = 1;
  1257  03DE  170F               	bsf	15,6	;volatile
  1258  03DF                     l1869:
  1259                           
  1260                           ;main.c: 139:     ADCON1 = 0;
  1261  03DF  019F               	clrf	31	;volatile
  1262                           
  1263                           ;main.c: 140:     TMR0 = 216;
  1264  03E0  30D8               	movlw	216
  1265  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1266  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1267  03E3  0081               	movwf	1	;volatile
  1268                           
  1269                           ;main.c: 141:     OPTION_REG = 0b01010111;
  1270  03E4  3057               	movlw	87
  1271  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  1272  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  1273  03E7  0081               	movwf	1	;volatile
  1274  03E8                     l1871:
  1275                           
  1276                           ;main.c: 142:     PIE1bits.RCIE = 1;
  1277  03E8  168C               	bsf	12,5	;volatile
  1278  03E9                     l1873:
  1279                           
  1280                           ;main.c: 143:     PIE1bits.TXIE = 1;
  1281  03E9  160C               	bsf	12,4	;volatile
  1282  03EA                     l1875:
  1283                           
  1284                           ;main.c: 144:     USARTcon();
  1285  03EA  120A  118A  24B5  120A  118A  	fcall	_USARTcon
  1286  03EF                     l1877:
  1287                           
  1288                           ;main.c: 145:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1289  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1290  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1291  03F1  01A0               	clrf	spiInit@sDataSample
  1292  03F2  01A1               	clrf	spiInit@sClockIdle
  1293  03F3  01A2               	clrf	spiInit@sTransmitEdge
  1294  03F4  3020               	movlw	32
  1295  03F5  120A  118A  2480  120A  118A  	fcall	_spiInit
  1296  03FA                     l138:
  1297  03FA  0008               	return
  1298  03FB                     __end_of_setup:
  1299                           
  1300                           	psect	text5
  1301  0480                     __ptext5:	
  1302 ;; *************** function _spiInit *****************
  1303 ;; Defined at:
  1304 ;;		line 3 in file "SPI_1.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  sType           1    wreg     enum E1264
  1307 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1308 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1309 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  sType           1    4[COMMON] enum E1264
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       3       0       0       0
  1322 ;;      Locals:         1       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0
  1324 ;;      Totals:         1       3       0       0       0
  1325 ;;Total ram usage:        4 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 2
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_setup
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _spiInit
  1337  0480                     _spiInit:
  1338                           
  1339                           ;incstack = 0
  1340                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1341                           ;spiInit@sType stored from wreg
  1342  0480  00F4               	movwf	spiInit@sType
  1343  0481                     l1719:
  1344                           
  1345                           ;SPI_1.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_1.c: 4: {;SPI_1.c: 5:     TRISC5 = 0;
  1346  0481  1683               	bsf	3,5	;RP0=1, select bank1
  1347  0482  1303               	bcf	3,6	;RP1=0, select bank1
  1348  0483  1287               	bcf	7,5	;volatile
  1349                           
  1350                           ;SPI_1.c: 6:     if(sType & 0b00000100)
  1351  0484  1D74               	btfss	spiInit@sType,2
  1352  0485  2C87               	goto	u1091
  1353  0486  2C88               	goto	u1090
  1354  0487                     u1091:
  1355  0487  2C90               	goto	l1725
  1356  0488                     u1090:
  1357  0488                     l1721:
  1358                           
  1359                           ;SPI_1.c: 7:     {;SPI_1.c: 8:         SSPSTAT = sTransmitEdge;
  1360  0488  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0489  1303               	bcf	3,6	;RP1=0, select bank0
  1362  048A  0822               	movf	spiInit@sTransmitEdge,w
  1363  048B  1683               	bsf	3,5	;RP0=1, select bank1
  1364  048C  1303               	bcf	3,6	;RP1=0, select bank1
  1365  048D  0094               	movwf	20	;volatile
  1366  048E                     l1723:
  1367                           
  1368                           ;SPI_1.c: 9:         TRISC3 = 1;
  1369  048E  1587               	bsf	7,3	;volatile
  1370                           
  1371                           ;SPI_1.c: 10:     }
  1372  048F  2C98               	goto	l194
  1373  0490                     l1725:
  1374                           
  1375                           ;SPI_1.c: 12:     {;SPI_1.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
  1376  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0492  0820               	movf	spiInit@sDataSample,w
  1379  0493  0422               	iorwf	spiInit@sTransmitEdge,w
  1380  0494  1683               	bsf	3,5	;RP0=1, select bank1
  1381  0495  1303               	bcf	3,6	;RP1=0, select bank1
  1382  0496  0094               	movwf	20	;volatile
  1383  0497                     l1727:
  1384                           
  1385                           ;SPI_1.c: 14:         TRISC3 = 0;
  1386  0497  1187               	bcf	7,3	;volatile
  1387  0498                     l194:	
  1388                           ;SPI_1.c: 15:     }
  1389                           
  1390                           
  1391                           ;SPI_1.c: 17:     SSPCON = sType | sClockIdle;
  1392  0498  0874               	movf	spiInit@sType,w
  1393  0499  1283               	bcf	3,5	;RP0=0, select bank0
  1394  049A  1303               	bcf	3,6	;RP1=0, select bank0
  1395  049B  0421               	iorwf	spiInit@sClockIdle,w
  1396  049C  0094               	movwf	20	;volatile
  1397  049D                     l195:
  1398  049D  0008               	return
  1399  049E                     __end_of_spiInit:
  1400                           
  1401                           	psect	text6
  1402  04B5                     __ptext6:	
  1403 ;; *************** function _USARTcon *****************
  1404 ;; Defined at:
  1405 ;;		line 3 in file "USART_2.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0
  1422 ;;      Totals:         0       0       0       0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; Hardware stack levels required when called: 2
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_setup
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           
  1434                           ;psect for function _USARTcon
  1435  04B5                     _USARTcon:
  1436  04B5                     l1279:	
  1437                           ;incstack = 0
  1438                           ; Regs used in _USARTcon: [wreg+status,2]
  1439                           
  1440                           
  1441                           ;USART_2.c: 5:  TXSTAbits.SYNC = 0;
  1442  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  1443  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  1444  04B7  1218               	bcf	24,4	;volatile
  1445                           
  1446                           ;USART_2.c: 6:  TXSTAbits.BRGH = 1;
  1447  04B8  1518               	bsf	24,2	;volatile
  1448                           
  1449                           ;USART_2.c: 7:  TXSTAbits.TX9 = 0;
  1450  04B9  1318               	bcf	24,6	;volatile
  1451                           
  1452                           ;USART_2.c: 8:  BAUDCTLbits.BRG16 = 0;
  1453  04BA  1683               	bsf	3,5	;RP0=1, select bank3
  1454  04BB  1703               	bsf	3,6	;RP1=1, select bank3
  1455  04BC  1187               	bcf	7,3	;volatile
  1456  04BD                     l1281:
  1457                           
  1458                           ;USART_2.c: 9:  SPBRGH = 0;
  1459  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  1460  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  1461  04BF  019A               	clrf	26	;volatile
  1462  04C0                     l1283:
  1463                           
  1464                           ;USART_2.c: 10:  SPBRG = 51;
  1465  04C0  3033               	movlw	51
  1466  04C1  0099               	movwf	25	;volatile
  1467  04C2                     l1285:
  1468                           
  1469                           ;USART_2.c: 12:  RCSTAbits.SPEN = 1;
  1470  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1471  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  1472  04C4  1798               	bsf	24,7	;volatile
  1473  04C5                     l1287:
  1474                           
  1475                           ;USART_2.c: 13:  RCSTAbits.RX9 = 0;
  1476  04C5  1318               	bcf	24,6	;volatile
  1477  04C6                     l1289:
  1478                           
  1479                           ;USART_2.c: 14:  RCSTAbits.CREN = 1;
  1480  04C6  1618               	bsf	24,4	;volatile
  1481  04C7                     l1291:
  1482                           
  1483                           ;USART_2.c: 15:  TXSTAbits.TXEN = 1;
  1484  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  1485  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  1486  04C9  1698               	bsf	24,5	;volatile
  1487  04CA                     l225:
  1488  04CA  0008               	return
  1489  04CB                     __end_of_USARTcon:
  1490                           
  1491                           	psect	text7
  1492  0115                     __ptext7:	
  1493 ;; *************** function _LECT2 *****************
  1494 ;; Defined at:
  1495 ;;		line 156 in file "main.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         0       2       0       0       0
  1511 ;;      Temps:          0       8       0       0       0
  1512 ;;      Totals:         0      10       0       0       0
  1513 ;;Total ram usage:       10 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 3
  1516 ;; This function calls:
  1517 ;;		___awdiv
  1518 ;;		___bmul
  1519 ;;		___wmul
  1520 ;;		_num_ascii
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _LECT2
  1528  0115                     _LECT2:
  1529  0115                     l1887:	
  1530                           ;incstack = 0
  1531                           ; Regs used in _LECT2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1532                           
  1533                           
  1534                           ;main.c: 157:     Cen2 = v2/51;
  1535  0115  3033               	movlw	51
  1536  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0118  00A4               	movwf	___awdiv@divisor
  1539  0119  3000               	movlw	0
  1540  011A  00A5               	movwf	___awdiv@divisor+1
  1541  011B  084D               	movf	_v2,w
  1542  011C  00AD               	movwf	??_LECT2
  1543  011D  01AE               	clrf	??_LECT2+1
  1544  011E  082D               	movf	??_LECT2,w
  1545  011F  00A6               	movwf	___awdiv@dividend
  1546  0120  082E               	movf	??_LECT2+1,w
  1547  0121  00A7               	movwf	___awdiv@dividend+1
  1548  0122  120A  118A  2314  120A  118A  	fcall	___awdiv
  1549  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0129  0824               	movf	?___awdiv,w
  1552  012A  00AF               	movwf	??_LECT2+2
  1553  012B  082F               	movf	??_LECT2+2,w
  1554  012C  00C9               	movwf	_Cen2
  1555                           
  1556                           ;main.c: 158:     Dec2 = (((100*v2)/51-(Cen2*100))/10);
  1557  012D  3033               	movlw	51
  1558  012E  00A4               	movwf	___awdiv@divisor
  1559  012F  3000               	movlw	0
  1560  0130  00A5               	movwf	___awdiv@divisor+1
  1561  0131  084D               	movf	_v2,w
  1562  0132  00AD               	movwf	??_LECT2
  1563  0133  01AE               	clrf	??_LECT2+1
  1564  0134  082D               	movf	??_LECT2,w
  1565  0135  00A0               	movwf	___wmul@multiplier
  1566  0136  082E               	movf	??_LECT2+1,w
  1567  0137  00A1               	movwf	___wmul@multiplier+1
  1568  0138  3064               	movlw	100
  1569  0139  00A2               	movwf	___wmul@multiplicand
  1570  013A  3000               	movlw	0
  1571  013B  00A3               	movwf	___wmul@multiplicand+1
  1572  013C  120A  118A  2432  120A  118A  	fcall	___wmul
  1573  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0143  0821               	movf	?___wmul+1,w
  1576  0144  00A7               	movwf	___awdiv@dividend+1
  1577  0145  0820               	movf	?___wmul,w
  1578  0146  00A6               	movwf	___awdiv@dividend
  1579  0147  120A  118A  2314  120A  118A  	fcall	___awdiv
  1580  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1581  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1582  014E  0824               	movf	?___awdiv,w
  1583  014F  00AF               	movwf	??_LECT2+2
  1584  0150  0825               	movf	?___awdiv+1,w
  1585  0151  00B0               	movwf	??_LECT2+3
  1586  0152  0849               	movf	_Cen2,w
  1587  0153  00B1               	movwf	??_LECT2+4
  1588  0154  01B2               	clrf	??_LECT2+5
  1589  0155  0831               	movf	??_LECT2+4,w
  1590  0156  00A0               	movwf	___wmul@multiplier
  1591  0157  0832               	movf	??_LECT2+5,w
  1592  0158  00A1               	movwf	___wmul@multiplier+1
  1593  0159  309C               	movlw	156
  1594  015A  00A2               	movwf	___wmul@multiplicand
  1595  015B  30FF               	movlw	255
  1596  015C  00A3               	movwf	___wmul@multiplicand+1
  1597  015D  120A  118A  2432  120A  118A  	fcall	___wmul
  1598  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0164  0820               	movf	?___wmul,w
  1601  0165  072F               	addwf	??_LECT2+2,w
  1602  0166  00B5               	movwf	_LECT2$1177
  1603  0167  0821               	movf	?___wmul+1,w
  1604  0168  1803               	skipnc
  1605  0169  0A21               	incf	?___wmul+1,w
  1606  016A  0730               	addwf	??_LECT2+3,w
  1607  016B  00B6               	movwf	_LECT2$1177+1
  1608                           
  1609                           ;main.c: 158:     Dec2 = (((100*v2)/51-(Cen2*100))/10);
  1610  016C  300A               	movlw	10
  1611  016D  00A4               	movwf	___awdiv@divisor
  1612  016E  3000               	movlw	0
  1613  016F  00A5               	movwf	___awdiv@divisor+1
  1614  0170  0836               	movf	_LECT2$1177+1,w
  1615  0171  00A7               	movwf	___awdiv@dividend+1
  1616  0172  0835               	movf	_LECT2$1177,w
  1617  0173  00A6               	movwf	___awdiv@dividend
  1618  0174  120A  118A  2314  120A  118A  	fcall	___awdiv
  1619  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1620  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1621  017B  0824               	movf	?___awdiv,w
  1622  017C  00AD               	movwf	??_LECT2
  1623  017D  082D               	movf	??_LECT2,w
  1624  017E  00C6               	movwf	_Dec2
  1625                           
  1626                           ;main.c: 159:     Un2 = (100*v2)/51-(100*Cen2+Dec2*10);
  1627  017F  3033               	movlw	51
  1628  0180  00A4               	movwf	___awdiv@divisor
  1629  0181  3000               	movlw	0
  1630  0182  00A5               	movwf	___awdiv@divisor+1
  1631  0183  084D               	movf	_v2,w
  1632  0184  00AD               	movwf	??_LECT2
  1633  0185  01AE               	clrf	??_LECT2+1
  1634  0186  082D               	movf	??_LECT2,w
  1635  0187  00A0               	movwf	___wmul@multiplier
  1636  0188  082E               	movf	??_LECT2+1,w
  1637  0189  00A1               	movwf	___wmul@multiplier+1
  1638  018A  3064               	movlw	100
  1639  018B  00A2               	movwf	___wmul@multiplicand
  1640  018C  3000               	movlw	0
  1641  018D  00A3               	movwf	___wmul@multiplicand+1
  1642  018E  120A  118A  2432  120A  118A  	fcall	___wmul
  1643  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0195  0821               	movf	?___wmul+1,w
  1646  0196  00A7               	movwf	___awdiv@dividend+1
  1647  0197  0820               	movf	?___wmul,w
  1648  0198  00A6               	movwf	___awdiv@dividend
  1649  0199  120A  118A  2314  120A  118A  	fcall	___awdiv
  1650  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1651  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1652  01A0  0824               	movf	?___awdiv,w
  1653  01A1  00AF               	movwf	??_LECT2+2
  1654  01A2  0825               	movf	?___awdiv+1,w
  1655  01A3  00B0               	movwf	??_LECT2+3
  1656  01A4  309C               	movlw	156
  1657  01A5  00B1               	movwf	??_LECT2+4
  1658  01A6  0831               	movf	??_LECT2+4,w
  1659  01A7  00F4               	movwf	___bmul@multiplicand
  1660  01A8  0849               	movf	_Cen2,w
  1661  01A9  120A  118A  249E  120A  118A  	fcall	___bmul
  1662  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1663  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1664  01B0  00B2               	movwf	??_LECT2+5
  1665  01B1  30F6               	movlw	246
  1666  01B2  00B3               	movwf	??_LECT2+6
  1667  01B3  0833               	movf	??_LECT2+6,w
  1668  01B4  00F4               	movwf	___bmul@multiplicand
  1669  01B5  0846               	movf	_Dec2,w
  1670  01B6  120A  118A  249E  120A  118A  	fcall	___bmul
  1671  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1672  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1673  01BD  0732               	addwf	??_LECT2+5,w
  1674  01BE  072F               	addwf	??_LECT2+2,w
  1675  01BF  00B4               	movwf	??_LECT2+7
  1676  01C0  0834               	movf	??_LECT2+7,w
  1677  01C1  00C3               	movwf	_Un2
  1678  01C2                     l1889:
  1679                           
  1680                           ;main.c: 160:     AC2 = num_ascii(Cen2);
  1681  01C2  0849               	movf	_Cen2,w
  1682  01C3  120A  118A  237D  120A  118A  	fcall	_num_ascii
  1683  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1684  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1685  01CA  00AD               	movwf	??_LECT2
  1686  01CB  082D               	movf	??_LECT2,w
  1687  01CC  00C0               	movwf	_AC2
  1688  01CD                     l1891:
  1689                           
  1690                           ;main.c: 161:     AD2 = num_ascii(Dec2);
  1691  01CD  0846               	movf	_Dec2,w
  1692  01CE  120A  118A  237D  120A  118A  	fcall	_num_ascii
  1693  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1694  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1695  01D5  00AD               	movwf	??_LECT2
  1696  01D6  082D               	movf	??_LECT2,w
  1697  01D7  00BD               	movwf	_AD2
  1698  01D8                     l1893:
  1699                           
  1700                           ;main.c: 162:     AU2 = num_ascii(Un2);
  1701  01D8  0843               	movf	_Un2,w
  1702  01D9  120A  118A  237D  120A  118A  	fcall	_num_ascii
  1703  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1704  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1705  01E0  00AD               	movwf	??_LECT2
  1706  01E1  082D               	movf	??_LECT2,w
  1707  01E2  00BA               	movwf	_AU2
  1708  01E3                     l144:
  1709  01E3  0008               	return
  1710  01E4                     __end_of_LECT2:
  1711                           
  1712                           	psect	text8
  1713  01E4                     __ptext8:	
  1714 ;; *************** function _LECT1 *****************
  1715 ;; Defined at:
  1716 ;;		line 148 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0
  1732 ;;      Temps:          0       8       0       0       0
  1733 ;;      Totals:         0       8       0       0       0
  1734 ;;Total ram usage:        8 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 3
  1737 ;; This function calls:
  1738 ;;		___awdiv
  1739 ;;		___bmul
  1740 ;;		___wmul
  1741 ;;		_num_ascii
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _LECT1
  1749  01E4                     _LECT1:
  1750  01E4                     l1879:	
  1751                           ;incstack = 0
  1752                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1753                           
  1754                           
  1755                           ;main.c: 149:     Cen1 = v1/51;
  1756  01E4  3033               	movlw	51
  1757  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1758  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1759  01E7  00A4               	movwf	___awdiv@divisor
  1760  01E8  3000               	movlw	0
  1761  01E9  00A5               	movwf	___awdiv@divisor+1
  1762  01EA  0879               	movf	_v1,w
  1763  01EB  00AD               	movwf	??_LECT1
  1764  01EC  01AE               	clrf	??_LECT1+1
  1765  01ED  082D               	movf	??_LECT1,w
  1766  01EE  00A6               	movwf	___awdiv@dividend
  1767  01EF  082E               	movf	??_LECT1+1,w
  1768  01F0  00A7               	movwf	___awdiv@dividend+1
  1769  01F1  120A  118A  2314  120A  118A  	fcall	___awdiv
  1770  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1771  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1772  01F8  0824               	movf	?___awdiv,w
  1773  01F9  00AF               	movwf	??_LECT1+2
  1774  01FA  082F               	movf	??_LECT1+2,w
  1775  01FB  00F6               	movwf	_Cen1
  1776                           
  1777                           ;main.c: 150:     Dec1 = ((10*v1)/51-Cen1*10);
  1778  01FC  3033               	movlw	51
  1779  01FD  00A4               	movwf	___awdiv@divisor
  1780  01FE  3000               	movlw	0
  1781  01FF  00A5               	movwf	___awdiv@divisor+1
  1782  0200  0879               	movf	_v1,w
  1783  0201  00AD               	movwf	??_LECT1
  1784  0202  01AE               	clrf	??_LECT1+1
  1785  0203  082D               	movf	??_LECT1,w
  1786  0204  00A0               	movwf	___wmul@multiplier
  1787  0205  082E               	movf	??_LECT1+1,w
  1788  0206  00A1               	movwf	___wmul@multiplier+1
  1789  0207  300A               	movlw	10
  1790  0208  00A2               	movwf	___wmul@multiplicand
  1791  0209  3000               	movlw	0
  1792  020A  00A3               	movwf	___wmul@multiplicand+1
  1793  020B  120A  118A  2432  120A  118A  	fcall	___wmul
  1794  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0212  0821               	movf	?___wmul+1,w
  1797  0213  00A7               	movwf	___awdiv@dividend+1
  1798  0214  0820               	movf	?___wmul,w
  1799  0215  00A6               	movwf	___awdiv@dividend
  1800  0216  120A  118A  2314  120A  118A  	fcall	___awdiv
  1801  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1802  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1803  021D  0824               	movf	?___awdiv,w
  1804  021E  00AF               	movwf	??_LECT1+2
  1805  021F  0825               	movf	?___awdiv+1,w
  1806  0220  00B0               	movwf	??_LECT1+3
  1807  0221  30F6               	movlw	246
  1808  0222  00B1               	movwf	??_LECT1+4
  1809  0223  0831               	movf	??_LECT1+4,w
  1810  0224  00F4               	movwf	___bmul@multiplicand
  1811  0225  0876               	movf	_Cen1,w
  1812  0226  120A  118A  249E  120A  118A  	fcall	___bmul
  1813  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1814  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1815  022D  072F               	addwf	??_LECT1+2,w
  1816  022E  00B2               	movwf	??_LECT1+5
  1817  022F  0832               	movf	??_LECT1+5,w
  1818  0230  00C7               	movwf	_Dec1
  1819                           
  1820                           ;main.c: 151:     Un1 = (100*v1)/51-(Cen1*100+Dec1*10);
  1821  0231  3033               	movlw	51
  1822  0232  00A4               	movwf	___awdiv@divisor
  1823  0233  3000               	movlw	0
  1824  0234  00A5               	movwf	___awdiv@divisor+1
  1825  0235  0879               	movf	_v1,w
  1826  0236  00AD               	movwf	??_LECT1
  1827  0237  01AE               	clrf	??_LECT1+1
  1828  0238  082D               	movf	??_LECT1,w
  1829  0239  00A0               	movwf	___wmul@multiplier
  1830  023A  082E               	movf	??_LECT1+1,w
  1831  023B  00A1               	movwf	___wmul@multiplier+1
  1832  023C  3064               	movlw	100
  1833  023D  00A2               	movwf	___wmul@multiplicand
  1834  023E  3000               	movlw	0
  1835  023F  00A3               	movwf	___wmul@multiplicand+1
  1836  0240  120A  118A  2432  120A  118A  	fcall	___wmul
  1837  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0247  0821               	movf	?___wmul+1,w
  1840  0248  00A7               	movwf	___awdiv@dividend+1
  1841  0249  0820               	movf	?___wmul,w
  1842  024A  00A6               	movwf	___awdiv@dividend
  1843  024B  120A  118A  2314  120A  118A  	fcall	___awdiv
  1844  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1845  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1846  0252  0824               	movf	?___awdiv,w
  1847  0253  00AF               	movwf	??_LECT1+2
  1848  0254  0825               	movf	?___awdiv+1,w
  1849  0255  00B0               	movwf	??_LECT1+3
  1850  0256  309C               	movlw	156
  1851  0257  00B1               	movwf	??_LECT1+4
  1852  0258  0831               	movf	??_LECT1+4,w
  1853  0259  00F4               	movwf	___bmul@multiplicand
  1854  025A  0876               	movf	_Cen1,w
  1855  025B  120A  118A  249E  120A  118A  	fcall	___bmul
  1856  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0262  00B2               	movwf	??_LECT1+5
  1859  0263  30F6               	movlw	246
  1860  0264  00B3               	movwf	??_LECT1+6
  1861  0265  0833               	movf	??_LECT1+6,w
  1862  0266  00F4               	movwf	___bmul@multiplicand
  1863  0267  0847               	movf	_Dec1,w
  1864  0268  120A  118A  249E  120A  118A  	fcall	___bmul
  1865  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1866  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1867  026F  0732               	addwf	??_LECT1+5,w
  1868  0270  072F               	addwf	??_LECT1+2,w
  1869  0271  00B4               	movwf	??_LECT1+7
  1870  0272  0834               	movf	??_LECT1+7,w
  1871  0273  00C4               	movwf	_Un1
  1872  0274                     l1881:
  1873                           
  1874                           ;main.c: 152:     AC1 = num_ascii(Cen1);
  1875  0274  0876               	movf	_Cen1,w
  1876  0275  120A  118A  237D  120A  118A  	fcall	_num_ascii
  1877  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1878  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1879  027C  00AD               	movwf	??_LECT1
  1880  027D  082D               	movf	??_LECT1,w
  1881  027E  00C1               	movwf	_AC1
  1882  027F                     l1883:
  1883                           
  1884                           ;main.c: 153:     AD1 = num_ascii(Dec1);
  1885  027F  0847               	movf	_Dec1,w
  1886  0280  120A  118A  237D  120A  118A  	fcall	_num_ascii
  1887  0285  1283               	bcf	3,5	;RP0=0, select bank0
  1888  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1889  0287  00AD               	movwf	??_LECT1
  1890  0288  082D               	movf	??_LECT1,w
  1891  0289  00BE               	movwf	_AD1
  1892  028A                     l1885:
  1893                           
  1894                           ;main.c: 154:     AU1 = num_ascii(Un1);
  1895  028A  0844               	movf	_Un1,w
  1896  028B  120A  118A  237D  120A  118A  	fcall	_num_ascii
  1897  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0292  00AD               	movwf	??_LECT1
  1900  0293  082D               	movf	??_LECT1,w
  1901  0294  00BB               	movwf	_AU1
  1902  0295                     l141:
  1903  0295  0008               	return
  1904  0296                     __end_of_LECT1:
  1905                           
  1906                           	psect	text9
  1907  037D                     __ptext9:	
  1908 ;; *************** function _num_ascii *****************
  1909 ;; Defined at:
  1910 ;;		line 3 in file "ASCII_1.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  num             1    wreg     unsigned char 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  num             1    0[BANK0 ] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      unsigned char 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1924 ;;      Params:         0       0       0       0       0
  1925 ;;      Locals:         0       1       0       0       0
  1926 ;;      Temps:          2       0       0       0       0
  1927 ;;      Totals:         2       1       0       0       0
  1928 ;;Total ram usage:        3 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 2
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_LECT1
  1935 ;;		_LECT2
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           
  1940                           ;psect for function _num_ascii
  1941  037D                     _num_ascii:
  1942                           
  1943                           ;incstack = 0
  1944                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  1945                           ;num_ascii@num stored from wreg
  1946  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1947  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1948  037F  00A0               	movwf	num_ascii@num
  1949  0380                     l1729:
  1950                           
  1951                           ;ASCII_1.c: 4:  switch(num){
  1952  0380  2B95               	goto	l1799
  1953  0381                     l1731:
  1954                           
  1955                           ;ASCII_1.c: 6:   return 0x30;
  1956  0381  3030               	movlw	48
  1957  0382  2BBD               	goto	l230
  1958  0383                     l1743:
  1959                           
  1960                           ;ASCII_1.c: 14:   return 0x31;
  1961  0383  3031               	movlw	49
  1962  0384  2BBD               	goto	l230
  1963  0385                     l1749:
  1964                           
  1965                           ;ASCII_1.c: 18:   return 0x32;
  1966  0385  3032               	movlw	50
  1967  0386  2BBD               	goto	l230
  1968  0387                     l1755:
  1969                           
  1970                           ;ASCII_1.c: 22:   return 0x33;
  1971  0387  3033               	movlw	51
  1972  0388  2BBD               	goto	l230
  1973  0389                     l1761:
  1974                           
  1975                           ;ASCII_1.c: 26:   return 0x34;
  1976  0389  3034               	movlw	52
  1977  038A  2BBD               	goto	l230
  1978  038B                     l1767:
  1979                           
  1980                           ;ASCII_1.c: 30:   return 0x35;
  1981  038B  3035               	movlw	53
  1982  038C  2BBD               	goto	l230
  1983  038D                     l1773:
  1984                           
  1985                           ;ASCII_1.c: 34:   return 0x36;
  1986  038D  3036               	movlw	54
  1987  038E  2BBD               	goto	l230
  1988  038F                     l1779:
  1989                           
  1990                           ;ASCII_1.c: 38:   return 0x37;
  1991  038F  3037               	movlw	55
  1992  0390  2BBD               	goto	l230
  1993  0391                     l1785:
  1994                           
  1995                           ;ASCII_1.c: 42:   return 0x38;
  1996  0391  3038               	movlw	56
  1997  0392  2BBD               	goto	l230
  1998  0393                     l1791:
  1999                           
  2000                           ;ASCII_1.c: 46:   return 0x39;
  2001  0393  3039               	movlw	57
  2002  0394  2BBD               	goto	l230
  2003  0395                     l1799:
  2004  0395  0820               	movf	num_ascii@num,w
  2005  0396  00F4               	movwf	??_num_ascii
  2006  0397  01F5               	clrf	??_num_ascii+1
  2007                           
  2008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2009                           ; Switch size 1, requested type "simple"
  2010                           ; Number of cases is 1, Range of values is 0 to 0
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte            4     3 (average)
  2014                           ; direct_byte           11     8 (fixed)
  2015                           ; jumptable            260     6 (fixed)
  2016                           ;	Chosen strategy is simple_byte
  2017  0398  0875               	movf	??_num_ascii+1,w
  2018  0399  3A00               	xorlw	0	; case 0
  2019  039A  1903               	skipnz
  2020  039B  2B9D               	goto	l1965
  2021  039C  2B81               	goto	l1731
  2022  039D                     l1965:
  2023                           
  2024                           ; Switch size 1, requested type "simple"
  2025                           ; Number of cases is 10, Range of values is 0 to 9
  2026                           ; switch strategies available:
  2027                           ; Name         Instructions Cycles
  2028                           ; simple_byte           31    16 (average)
  2029                           ; direct_byte           38     8 (fixed)
  2030                           ; jumptable            260     6 (fixed)
  2031                           ;	Chosen strategy is simple_byte
  2032  039D  0874               	movf	??_num_ascii,w
  2033  039E  3A00               	xorlw	0	; case 0
  2034  039F  1903               	skipnz
  2035  03A0  2B81               	goto	l1731
  2036  03A1  3A01               	xorlw	1	; case 1
  2037  03A2  1903               	skipnz
  2038  03A3  2B83               	goto	l1743
  2039  03A4  3A03               	xorlw	3	; case 2
  2040  03A5  1903               	skipnz
  2041  03A6  2B85               	goto	l1749
  2042  03A7  3A01               	xorlw	1	; case 3
  2043  03A8  1903               	skipnz
  2044  03A9  2B87               	goto	l1755
  2045  03AA  3A07               	xorlw	7	; case 4
  2046  03AB  1903               	skipnz
  2047  03AC  2B89               	goto	l1761
  2048  03AD  3A01               	xorlw	1	; case 5
  2049  03AE  1903               	skipnz
  2050  03AF  2B8B               	goto	l1767
  2051  03B0  3A03               	xorlw	3	; case 6
  2052  03B1  1903               	skipnz
  2053  03B2  2B8D               	goto	l1773
  2054  03B3  3A01               	xorlw	1	; case 7
  2055  03B4  1903               	skipnz
  2056  03B5  2B8F               	goto	l1779
  2057  03B6  3A0F               	xorlw	15	; case 8
  2058  03B7  1903               	skipnz
  2059  03B8  2B91               	goto	l1785
  2060  03B9  3A01               	xorlw	1	; case 9
  2061  03BA  1903               	skipnz
  2062  03BB  2B93               	goto	l1791
  2063  03BC  2B81               	goto	l1731
  2064  03BD                     l230:
  2065  03BD  0008               	return
  2066  03BE                     __end_of_num_ascii:
  2067                           
  2068                           	psect	text10
  2069  0432                     __ptext10:	
  2070 ;; *************** function ___wmul *****************
  2071 ;; Defined at:
  2072 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2075 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  product         2    4[COMMON] unsigned int 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  2    0[BANK0 ] unsigned int 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       4       0       0       0
  2088 ;;      Locals:         2       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0
  2090 ;;      Totals:         2       4       0       0       0
  2091 ;;Total ram usage:        6 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 2
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_LECT1
  2098 ;;		_LECT2
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function ___wmul
  2104  0432                     ___wmul:
  2105  0432                     l1807:	
  2106                           ;incstack = 0
  2107                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2108                           
  2109  0432  01F4               	clrf	___wmul@product
  2110  0433  01F5               	clrf	___wmul@product+1
  2111  0434                     l1809:
  2112  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0436  1C20               	btfss	___wmul@multiplier,0
  2115  0437  2C39               	goto	u1101
  2116  0438  2C3A               	goto	u1100
  2117  0439                     u1101:
  2118  0439  2C40               	goto	l327
  2119  043A                     u1100:
  2120  043A                     l1811:
  2121  043A  0822               	movf	___wmul@multiplicand,w
  2122  043B  07F4               	addwf	___wmul@product,f
  2123  043C  1803               	skipnc
  2124  043D  0AF5               	incf	___wmul@product+1,f
  2125  043E  0823               	movf	___wmul@multiplicand+1,w
  2126  043F  07F5               	addwf	___wmul@product+1,f
  2127  0440                     l327:
  2128  0440  3001               	movlw	1
  2129  0441                     u1115:
  2130  0441  1003               	clrc
  2131  0442  0DA2               	rlf	___wmul@multiplicand,f
  2132  0443  0DA3               	rlf	___wmul@multiplicand+1,f
  2133  0444  3EFF               	addlw	-1
  2134  0445  1D03               	skipz
  2135  0446  2C41               	goto	u1115
  2136  0447                     l1813:
  2137  0447  3001               	movlw	1
  2138  0448                     u1125:
  2139  0448  1003               	clrc
  2140  0449  0CA1               	rrf	___wmul@multiplier+1,f
  2141  044A  0CA0               	rrf	___wmul@multiplier,f
  2142  044B  3EFF               	addlw	-1
  2143  044C  1D03               	skipz
  2144  044D  2C48               	goto	u1125
  2145  044E                     l1815:
  2146  044E  0820               	movf	___wmul@multiplier,w
  2147  044F  0421               	iorwf	___wmul@multiplier+1,w
  2148  0450  1D03               	btfss	3,2
  2149  0451  2C53               	goto	u1131
  2150  0452  2C54               	goto	u1130
  2151  0453                     u1131:
  2152  0453  2C34               	goto	l1809
  2153  0454                     u1130:
  2154  0454                     l1817:
  2155  0454  0875               	movf	___wmul@product+1,w
  2156  0455  00A1               	movwf	?___wmul+1
  2157  0456  0874               	movf	___wmul@product,w
  2158  0457  00A0               	movwf	?___wmul
  2159  0458                     l329:
  2160  0458  0008               	return
  2161  0459                     __end_of___wmul:
  2162                           
  2163                           	psect	text11
  2164  049E                     __ptext11:	
  2165 ;; *************** function ___bmul *****************
  2166 ;; Defined at:
  2167 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  multiplier      1    wreg     unsigned char 
  2170 ;;  multiplicand    1    4[COMMON] unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2173 ;;  product         1    0[BANK0 ] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      unsigned char 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2183 ;;      Params:         1       0       0       0       0
  2184 ;;      Locals:         0       2       0       0       0
  2185 ;;      Temps:          1       0       0       0       0
  2186 ;;      Totals:         2       2       0       0       0
  2187 ;;Total ram usage:        4 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 2
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_LECT1
  2194 ;;		_LECT2
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function ___bmul
  2200  049E                     ___bmul:
  2201                           
  2202                           ;incstack = 0
  2203                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2204                           ;___bmul@multiplier stored from wreg
  2205  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2206  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2207  04A0  00A1               	movwf	___bmul@multiplier
  2208  04A1                     l1821:
  2209  04A1  01A0               	clrf	___bmul@product
  2210  04A2                     l1823:
  2211  04A2  1C21               	btfss	___bmul@multiplier,0
  2212  04A3  2CA5               	goto	u1141
  2213  04A4  2CA6               	goto	u1140
  2214  04A5                     u1141:
  2215  04A5  2CAA               	goto	l1827
  2216  04A6                     u1140:
  2217  04A6                     l1825:
  2218  04A6  0874               	movf	___bmul@multiplicand,w
  2219  04A7  00F5               	movwf	??___bmul
  2220  04A8  0875               	movf	??___bmul,w
  2221  04A9  07A0               	addwf	___bmul@product,f
  2222  04AA                     l1827:
  2223  04AA  1003               	clrc
  2224  04AB  0DF4               	rlf	___bmul@multiplicand,f
  2225  04AC                     l1829:
  2226  04AC  1003               	clrc
  2227  04AD  0CA1               	rrf	___bmul@multiplier,f
  2228  04AE  0821               	movf	___bmul@multiplier,w
  2229  04AF  1D03               	btfss	3,2
  2230  04B0  2CB2               	goto	u1151
  2231  04B1  2CB3               	goto	u1150
  2232  04B2                     u1151:
  2233  04B2  2CA2               	goto	l1823
  2234  04B3                     u1150:
  2235  04B3                     l1831:
  2236  04B3  0820               	movf	___bmul@product,w
  2237  04B4                     l353:
  2238  04B4  0008               	return
  2239  04B5                     __end_of___bmul:
  2240                           
  2241                           	psect	text12
  2242  0314                     __ptext12:	
  2243 ;; *************** function ___awdiv *****************
  2244 ;; Defined at:
  2245 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  divisor         2    4[BANK0 ] int 
  2248 ;;  dividend        2    6[BANK0 ] int 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  quotient        2   11[BANK0 ] int 
  2251 ;;  sign            1   10[BANK0 ] unsigned char 
  2252 ;;  counter         1    9[BANK0 ] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  2    4[BANK0 ] int 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       4       0       0       0
  2263 ;;      Locals:         0       4       0       0       0
  2264 ;;      Temps:          0       1       0       0       0
  2265 ;;      Totals:         0       9       0       0       0
  2266 ;;Total ram usage:        9 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; Hardware stack levels required when called: 2
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_LECT1
  2273 ;;		_LECT2
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function ___awdiv
  2279  0314                     ___awdiv:
  2280  0314                     l1409:	
  2281                           ;incstack = 0
  2282                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2283                           
  2284  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0316  01AA               	clrf	___awdiv@sign
  2287  0317                     l1411:
  2288  0317  1FA5               	btfss	___awdiv@divisor+1,7
  2289  0318  2B1A               	goto	u631
  2290  0319  2B1B               	goto	u630
  2291  031A                     u631:
  2292  031A  2B22               	goto	l1417
  2293  031B                     u630:
  2294  031B                     l1413:
  2295  031B  09A4               	comf	___awdiv@divisor,f
  2296  031C  09A5               	comf	___awdiv@divisor+1,f
  2297  031D  0AA4               	incf	___awdiv@divisor,f
  2298  031E  1903               	skipnz
  2299  031F  0AA5               	incf	___awdiv@divisor+1,f
  2300  0320                     l1415:
  2301  0320  01AA               	clrf	___awdiv@sign
  2302  0321  0AAA               	incf	___awdiv@sign,f
  2303  0322                     l1417:
  2304  0322  1FA7               	btfss	___awdiv@dividend+1,7
  2305  0323  2B25               	goto	u641
  2306  0324  2B26               	goto	u640
  2307  0325                     u641:
  2308  0325  2B2F               	goto	l1423
  2309  0326                     u640:
  2310  0326                     l1419:
  2311  0326  09A6               	comf	___awdiv@dividend,f
  2312  0327  09A7               	comf	___awdiv@dividend+1,f
  2313  0328  0AA6               	incf	___awdiv@dividend,f
  2314  0329  1903               	skipnz
  2315  032A  0AA7               	incf	___awdiv@dividend+1,f
  2316  032B                     l1421:
  2317  032B  3001               	movlw	1
  2318  032C  00A8               	movwf	??___awdiv
  2319  032D  0828               	movf	??___awdiv,w
  2320  032E  06AA               	xorwf	___awdiv@sign,f
  2321  032F                     l1423:
  2322  032F  01AB               	clrf	___awdiv@quotient
  2323  0330  01AC               	clrf	___awdiv@quotient+1
  2324  0331                     l1425:
  2325  0331  0824               	movf	___awdiv@divisor,w
  2326  0332  0425               	iorwf	___awdiv@divisor+1,w
  2327  0333  1903               	btfsc	3,2
  2328  0334  2B36               	goto	u651
  2329  0335  2B37               	goto	u650
  2330  0336                     u651:
  2331  0336  2B6E               	goto	l1445
  2332  0337                     u650:
  2333  0337                     l1427:
  2334  0337  01A9               	clrf	___awdiv@counter
  2335  0338  0AA9               	incf	___awdiv@counter,f
  2336  0339  2B45               	goto	l1433
  2337  033A                     l1429:
  2338  033A  3001               	movlw	1
  2339  033B                     u665:
  2340  033B  1003               	clrc
  2341  033C  0DA4               	rlf	___awdiv@divisor,f
  2342  033D  0DA5               	rlf	___awdiv@divisor+1,f
  2343  033E  3EFF               	addlw	-1
  2344  033F  1D03               	skipz
  2345  0340  2B3B               	goto	u665
  2346  0341                     l1431:
  2347  0341  3001               	movlw	1
  2348  0342  00A8               	movwf	??___awdiv
  2349  0343  0828               	movf	??___awdiv,w
  2350  0344  07A9               	addwf	___awdiv@counter,f
  2351  0345                     l1433:
  2352  0345  1FA5               	btfss	___awdiv@divisor+1,7
  2353  0346  2B48               	goto	u671
  2354  0347  2B49               	goto	u670
  2355  0348                     u671:
  2356  0348  2B3A               	goto	l1429
  2357  0349                     u670:
  2358  0349                     l1435:
  2359  0349  3001               	movlw	1
  2360  034A                     u685:
  2361  034A  1003               	clrc
  2362  034B  0DAB               	rlf	___awdiv@quotient,f
  2363  034C  0DAC               	rlf	___awdiv@quotient+1,f
  2364  034D  3EFF               	addlw	-1
  2365  034E  1D03               	skipz
  2366  034F  2B4A               	goto	u685
  2367  0350  0825               	movf	___awdiv@divisor+1,w
  2368  0351  0227               	subwf	___awdiv@dividend+1,w
  2369  0352  1D03               	skipz
  2370  0353  2B56               	goto	u695
  2371  0354  0824               	movf	___awdiv@divisor,w
  2372  0355  0226               	subwf	___awdiv@dividend,w
  2373  0356                     u695:
  2374  0356  1C03               	skipc
  2375  0357  2B59               	goto	u691
  2376  0358  2B5A               	goto	u690
  2377  0359                     u691:
  2378  0359  2B61               	goto	l1441
  2379  035A                     u690:
  2380  035A                     l1437:
  2381  035A  0824               	movf	___awdiv@divisor,w
  2382  035B  02A6               	subwf	___awdiv@dividend,f
  2383  035C  0825               	movf	___awdiv@divisor+1,w
  2384  035D  1C03               	skipc
  2385  035E  03A7               	decf	___awdiv@dividend+1,f
  2386  035F  02A7               	subwf	___awdiv@dividend+1,f
  2387  0360                     l1439:
  2388  0360  142B               	bsf	___awdiv@quotient,0
  2389  0361                     l1441:
  2390  0361  3001               	movlw	1
  2391  0362                     u705:
  2392  0362  1003               	clrc
  2393  0363  0CA5               	rrf	___awdiv@divisor+1,f
  2394  0364  0CA4               	rrf	___awdiv@divisor,f
  2395  0365  3EFF               	addlw	-1
  2396  0366  1D03               	skipz
  2397  0367  2B62               	goto	u705
  2398  0368                     l1443:
  2399  0368  3001               	movlw	1
  2400  0369  02A9               	subwf	___awdiv@counter,f
  2401  036A  1D03               	btfss	3,2
  2402  036B  2B6D               	goto	u711
  2403  036C  2B6E               	goto	u710
  2404  036D                     u711:
  2405  036D  2B49               	goto	l1435
  2406  036E                     u710:
  2407  036E                     l1445:
  2408  036E  082A               	movf	___awdiv@sign,w
  2409  036F  1903               	btfsc	3,2
  2410  0370  2B72               	goto	u721
  2411  0371  2B73               	goto	u720
  2412  0372                     u721:
  2413  0372  2B78               	goto	l1449
  2414  0373                     u720:
  2415  0373                     l1447:
  2416  0373  09AB               	comf	___awdiv@quotient,f
  2417  0374  09AC               	comf	___awdiv@quotient+1,f
  2418  0375  0AAB               	incf	___awdiv@quotient,f
  2419  0376  1903               	skipnz
  2420  0377  0AAC               	incf	___awdiv@quotient+1,f
  2421  0378                     l1449:
  2422  0378  082C               	movf	___awdiv@quotient+1,w
  2423  0379  00A5               	movwf	?___awdiv+1
  2424  037A  082B               	movf	___awdiv@quotient,w
  2425  037B  00A4               	movwf	?___awdiv
  2426  037C                     l480:
  2427  037C  0008               	return
  2428  037D                     __end_of___awdiv:
  2429                           
  2430                           	psect	text13
  2431  03FB                     __ptext13:	
  2432 ;; *************** function _CONTADOR *****************
  2433 ;; Defined at:
  2434 ;;		line 240 in file "main.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0
  2450 ;;      Temps:          1       0       0       0       0
  2451 ;;      Totals:         1       0       0       0       0
  2452 ;;Total ram usage:        1 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; Hardware stack levels required when called: 2
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _CONTADOR
  2464  03FB                     _CONTADOR:
  2465  03FB                     l1603:	
  2466                           ;incstack = 0
  2467                           ; Regs used in _CONTADOR: [wreg+status,2+status,0]
  2468                           
  2469                           
  2470                           ;main.c: 241:     if (signo == 43){
  2471  03FB  302B               	movlw	43
  2472  03FC  0677               	xorwf	_signo,w
  2473  03FD  1D03               	btfss	3,2
  2474  03FE  2C00               	goto	u971
  2475  03FF  2C01               	goto	u970
  2476  0400                     u971:
  2477  0400  2C05               	goto	l1607
  2478  0401                     u970:
  2479  0401                     l1605:
  2480                           
  2481                           ;main.c: 242:         sum = 1;
  2482  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0403  01CC               	clrf	_sum
  2485  0404  0ACC               	incf	_sum,f
  2486  0405                     l1607:
  2487                           
  2488                           ;main.c: 245:     if (signo == 13 && sum == 1){
  2489  0405  300D               	movlw	13
  2490  0406  0677               	xorwf	_signo,w
  2491  0407  1D03               	btfss	3,2
  2492  0408  2C0A               	goto	u981
  2493  0409  2C0B               	goto	u980
  2494  040A                     u981:
  2495  040A  2C17               	goto	l1615
  2496  040B                     u980:
  2497  040B                     l1609:
  2498  040B  1283               	bcf	3,5	;RP0=0, select bank0
  2499  040C  1303               	bcf	3,6	;RP1=0, select bank0
  2500  040D  034C               	decf	_sum,w
  2501  040E  1D03               	btfss	3,2
  2502  040F  2C11               	goto	u991
  2503  0410  2C12               	goto	u990
  2504  0411                     u991:
  2505  0411  2C17               	goto	l1615
  2506  0412                     u990:
  2507  0412                     l1611:
  2508                           
  2509                           ;main.c: 246:             sum = 0;
  2510  0412  01CC               	clrf	_sum
  2511  0413                     l1613:
  2512                           
  2513                           ;main.c: 247:             PORTD++;
  2514  0413  3001               	movlw	1
  2515  0414  00F4               	movwf	??_CONTADOR
  2516  0415  0874               	movf	??_CONTADOR,w
  2517  0416  0788               	addwf	8,f	;volatile
  2518  0417                     l1615:
  2519                           
  2520                           ;main.c: 250:     if (signo == 45){
  2521  0417  302D               	movlw	45
  2522  0418  0677               	xorwf	_signo,w
  2523  0419  1D03               	btfss	3,2
  2524  041A  2C1C               	goto	u1001
  2525  041B  2C1D               	goto	u1000
  2526  041C                     u1001:
  2527  041C  2C21               	goto	l1619
  2528  041D                     u1000:
  2529  041D                     l1617:
  2530                           
  2531                           ;main.c: 251:         res = 1;
  2532  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2533  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2534  041F  01CB               	clrf	_res
  2535  0420  0ACB               	incf	_res,f
  2536  0421                     l1619:
  2537                           
  2538                           ;main.c: 254:     if(signo ==13 && res == 1){
  2539  0421  300D               	movlw	13
  2540  0422  0677               	xorwf	_signo,w
  2541  0423  1D03               	btfss	3,2
  2542  0424  2C26               	goto	u1011
  2543  0425  2C27               	goto	u1010
  2544  0426                     u1011:
  2545  0426  2C31               	goto	l178
  2546  0427                     u1010:
  2547  0427                     l1621:
  2548  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0429  034B               	decf	_res,w
  2551  042A  1D03               	btfss	3,2
  2552  042B  2C2D               	goto	u1021
  2553  042C  2C2E               	goto	u1020
  2554  042D                     u1021:
  2555  042D  2C31               	goto	l178
  2556  042E                     u1020:
  2557  042E                     l1623:
  2558                           
  2559                           ;main.c: 255:         res = 0;
  2560  042E  01CB               	clrf	_res
  2561  042F                     l1625:
  2562                           
  2563                           ;main.c: 256:         PORTD--;
  2564  042F  3001               	movlw	1
  2565  0430  0288               	subwf	8,f	;volatile
  2566  0431                     l178:
  2567  0431  0008               	return
  2568  0432                     __end_of_CONTADOR:
  2569                           
  2570                           	psect	text14
  2571  0459                     __ptext14:	
  2572 ;; *************** function _ISR *****************
  2573 ;; Defined at:
  2574 ;;		line 72 in file "main.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0, pclath, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0
  2590 ;;      Temps:          3       0       0       0       0
  2591 ;;      Totals:         3       0       0       0       0
  2592 ;;Total ram usage:        3 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 1
  2595 ;; This function calls:
  2596 ;;		_envio
  2597 ;; This function is called by:
  2598 ;;		Interrupt level 1
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _ISR
  2604  0459                     _ISR:
  2605  0459                     i1l1643:
  2606                           
  2607                           ;main.c: 73:     if(INTCONbits.TMR0IF == 1){
  2608  0459  1D0B               	btfss	11,2	;volatile
  2609  045A  2C5C               	goto	u103_21
  2610  045B  2C5D               	goto	u103_20
  2611  045C                     u103_21:
  2612  045C  2C62               	goto	i1l1649
  2613  045D                     u103_20:
  2614  045D                     i1l1645:
  2615                           
  2616                           ;main.c: 74:         INTCONbits.TMR0IF = 0;
  2617  045D  110B               	bcf	11,2	;volatile
  2618  045E                     i1l1647:
  2619                           
  2620                           ;main.c: 75:         TMR0 = 216;
  2621  045E  30D8               	movlw	216
  2622  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0460  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0461  0081               	movwf	1	;volatile
  2625  0462                     i1l1649:
  2626                           
  2627                           ;main.c: 77:     if (PIR1bits.TXIF == 1){
  2628  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0464  1E0C               	btfss	12,4	;volatile
  2631  0465  2C67               	goto	u104_21
  2632  0466  2C68               	goto	u104_20
  2633  0467                     u104_21:
  2634  0467  2C70               	goto	i1l1655
  2635  0468                     u104_20:
  2636  0468                     i1l1651:
  2637                           
  2638                           ;main.c: 78:         envio();
  2639  0468  120A  118A  2020  120A  118A  	fcall	_envio
  2640  046D                     i1l1653:
  2641                           
  2642                           ;main.c: 79:         PIE1bits.TXIE = 0;
  2643  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2644  046E  1303               	bcf	3,6	;RP1=0, select bank1
  2645  046F  120C               	bcf	12,4	;volatile
  2646  0470                     i1l1655:
  2647                           
  2648                           ;main.c: 81:     if (PIR1bits.RCIF == 1){
  2649  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0471  1E8C               	btfss	12,5	;volatile
  2651  0472  2C74               	goto	u105_21
  2652  0473  2C75               	goto	u105_20
  2653  0474                     u105_21:
  2654  0474  2C79               	goto	i1l126
  2655  0475                     u105_20:
  2656  0475                     i1l1657:
  2657                           
  2658                           ;main.c: 82:         signo = RCREG;
  2659  0475  081A               	movf	26,w	;volatile
  2660  0476  00F1               	movwf	??_ISR
  2661  0477  0871               	movf	??_ISR,w
  2662  0478  00F7               	movwf	_signo
  2663  0479                     i1l126:
  2664  0479  0873               	movf	??_ISR+2,w
  2665  047A  008A               	movwf	10
  2666  047B  0E72               	swapf	??_ISR+1,w
  2667  047C  0083               	movwf	3
  2668  047D  0EFE               	swapf	btemp,f
  2669  047E  0E7E               	swapf	btemp,w
  2670  047F  0009               	retfie
  2671  0480                     __end_of_ISR:
  2672                           
  2673                           	psect	intentry
  2674  0004                     __pintentry:	
  2675                           ;incstack = 0
  2676                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2677                           
  2678  0004                     interrupt_function:
  2679  007E                     saved_w	set	btemp
  2680  0004  00FE               	movwf	btemp
  2681  0005  0E03               	swapf	3,w
  2682  0006  00F2               	movwf	??_ISR+1
  2683  0007  080A               	movf	10,w
  2684  0008  00F3               	movwf	??_ISR+2
  2685  0009  120A  118A  2C59   	ljmp	_ISR
  2686                           
  2687                           	psect	text15
  2688  0020                     __ptext15:	
  2689 ;; *************** function _envio *****************
  2690 ;; Defined at:
  2691 ;;		line 164 in file "main.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0
  2707 ;;      Temps:          1       0       0       0       0
  2708 ;;      Totals:         1       0       0       0       0
  2709 ;;Total ram usage:        1 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_ISR
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _envio
  2720  0020                     _envio:
  2721  0020                     i1l1453:	
  2722                           ;incstack = 0
  2723                           ; Regs used in _envio: [wreg+status,2+status,0]
  2724                           
  2725                           
  2726                           ;main.c: 165:     toggleTX++;
  2727  0020  3001               	movlw	1
  2728  0021  00F0               	movwf	??_envio
  2729  0022  0870               	movf	??_envio,w
  2730  0023  07F8               	addwf	_toggleTX,f
  2731                           
  2732                           ;main.c: 166:     if (toggleTX == 1){
  2733  0024  0378               	decf	_toggleTX,w
  2734  0025  1D03               	btfss	3,2
  2735  0026  2828               	goto	u73_21
  2736  0027  2829               	goto	u73_20
  2737  0028                     u73_21:
  2738  0028  282D               	goto	i1l1457
  2739  0029                     u73_20:
  2740  0029                     i1l1455:
  2741                           
  2742                           ;main.c: 167:         TXREG = 0x50;
  2743  0029  3050               	movlw	80
  2744  002A  1283               	bcf	3,5	;RP0=0, select bank0
  2745  002B  1303               	bcf	3,6	;RP1=0, select bank0
  2746  002C  0099               	movwf	25	;volatile
  2747  002D                     i1l1457:
  2748                           
  2749                           ;main.c: 169:     if (toggleTX == 2){
  2750  002D  3002               	movlw	2
  2751  002E  0678               	xorwf	_toggleTX,w
  2752  002F  1D03               	btfss	3,2
  2753  0030  2832               	goto	u74_21
  2754  0031  2833               	goto	u74_20
  2755  0032                     u74_21:
  2756  0032  2837               	goto	i1l1461
  2757  0033                     u74_20:
  2758  0033                     i1l1459:
  2759                           
  2760                           ;main.c: 170:         TXREG = 0x4F;
  2761  0033  304F               	movlw	79
  2762  0034  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0035  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0036  0099               	movwf	25	;volatile
  2765  0037                     i1l1461:
  2766                           
  2767                           ;main.c: 172:     if (toggleTX == 3){
  2768  0037  3003               	movlw	3
  2769  0038  0678               	xorwf	_toggleTX,w
  2770  0039  1D03               	btfss	3,2
  2771  003A  283C               	goto	u75_21
  2772  003B  283D               	goto	u75_20
  2773  003C                     u75_21:
  2774  003C  2841               	goto	i1l1465
  2775  003D                     u75_20:
  2776  003D                     i1l1463:
  2777                           
  2778                           ;main.c: 173:         TXREG = 0x54;
  2779  003D  3054               	movlw	84
  2780  003E  1283               	bcf	3,5	;RP0=0, select bank0
  2781  003F  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0040  0099               	movwf	25	;volatile
  2783  0041                     i1l1465:
  2784                           
  2785                           ;main.c: 175:     if (toggleTX == 4){
  2786  0041  3004               	movlw	4
  2787  0042  0678               	xorwf	_toggleTX,w
  2788  0043  1D03               	btfss	3,2
  2789  0044  2846               	goto	u76_21
  2790  0045  2847               	goto	u76_20
  2791  0046                     u76_21:
  2792  0046  284B               	goto	i1l1469
  2793  0047                     u76_20:
  2794  0047                     i1l1467:
  2795                           
  2796                           ;main.c: 176:         TXREG = 0x31;
  2797  0047  3031               	movlw	49
  2798  0048  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0049  1303               	bcf	3,6	;RP1=0, select bank0
  2800  004A  0099               	movwf	25	;volatile
  2801  004B                     i1l1469:
  2802                           
  2803                           ;main.c: 178:     if (toggleTX == 5){
  2804  004B  3005               	movlw	5
  2805  004C  0678               	xorwf	_toggleTX,w
  2806  004D  1D03               	btfss	3,2
  2807  004E  2850               	goto	u77_21
  2808  004F  2851               	goto	u77_20
  2809  0050                     u77_21:
  2810  0050  2855               	goto	i1l1473
  2811  0051                     u77_20:
  2812  0051                     i1l1471:
  2813                           
  2814                           ;main.c: 179:         TXREG = 0x3A;
  2815  0051  303A               	movlw	58
  2816  0052  1283               	bcf	3,5	;RP0=0, select bank0
  2817  0053  1303               	bcf	3,6	;RP1=0, select bank0
  2818  0054  0099               	movwf	25	;volatile
  2819  0055                     i1l1473:
  2820                           
  2821                           ;main.c: 181:     if (toggleTX == 6){
  2822  0055  3006               	movlw	6
  2823  0056  0678               	xorwf	_toggleTX,w
  2824  0057  1D03               	btfss	3,2
  2825  0058  285A               	goto	u78_21
  2826  0059  285B               	goto	u78_20
  2827  005A                     u78_21:
  2828  005A  285F               	goto	i1l1477
  2829  005B                     u78_20:
  2830  005B                     i1l1475:
  2831                           
  2832                           ;main.c: 182:         TXREG = 0x20;
  2833  005B  3020               	movlw	32
  2834  005C  1283               	bcf	3,5	;RP0=0, select bank0
  2835  005D  1303               	bcf	3,6	;RP1=0, select bank0
  2836  005E  0099               	movwf	25	;volatile
  2837  005F                     i1l1477:
  2838                           
  2839                           ;main.c: 184:     if (toggleTX == 7){
  2840  005F  3007               	movlw	7
  2841  0060  0678               	xorwf	_toggleTX,w
  2842  0061  1D03               	btfss	3,2
  2843  0062  2864               	goto	u79_21
  2844  0063  2865               	goto	u79_20
  2845  0064                     u79_21:
  2846  0064  2869               	goto	i1l1481
  2847  0065                     u79_20:
  2848  0065                     i1l1479:
  2849                           
  2850                           ;main.c: 185:         TXREG = AC1;
  2851  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2853  0067  0841               	movf	_AC1,w
  2854  0068  0099               	movwf	25	;volatile
  2855  0069                     i1l1481:
  2856                           
  2857                           ;main.c: 187:     if (toggleTX == 8){
  2858  0069  3008               	movlw	8
  2859  006A  0678               	xorwf	_toggleTX,w
  2860  006B  1D03               	btfss	3,2
  2861  006C  286E               	goto	u80_21
  2862  006D  286F               	goto	u80_20
  2863  006E                     u80_21:
  2864  006E  2873               	goto	i1l1485
  2865  006F                     u80_20:
  2866  006F                     i1l1483:
  2867                           
  2868                           ;main.c: 188:         TXREG = 0x2E;
  2869  006F  302E               	movlw	46
  2870  0070  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0071  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0072  0099               	movwf	25	;volatile
  2873  0073                     i1l1485:
  2874                           
  2875                           ;main.c: 190:     if (toggleTX == 9){
  2876  0073  3009               	movlw	9
  2877  0074  0678               	xorwf	_toggleTX,w
  2878  0075  1D03               	btfss	3,2
  2879  0076  2878               	goto	u81_21
  2880  0077  2879               	goto	u81_20
  2881  0078                     u81_21:
  2882  0078  287D               	goto	i1l1489
  2883  0079                     u81_20:
  2884  0079                     i1l1487:
  2885                           
  2886                           ;main.c: 191:         TXREG = AD1;
  2887  0079  1283               	bcf	3,5	;RP0=0, select bank0
  2888  007A  1303               	bcf	3,6	;RP1=0, select bank0
  2889  007B  083E               	movf	_AD1,w
  2890  007C  0099               	movwf	25	;volatile
  2891  007D                     i1l1489:
  2892                           
  2893                           ;main.c: 193:     if (toggleTX == 10){
  2894  007D  300A               	movlw	10
  2895  007E  0678               	xorwf	_toggleTX,w
  2896  007F  1D03               	btfss	3,2
  2897  0080  2882               	goto	u82_21
  2898  0081  2883               	goto	u82_20
  2899  0082                     u82_21:
  2900  0082  2887               	goto	i1l1493
  2901  0083                     u82_20:
  2902  0083                     i1l1491:
  2903                           
  2904                           ;main.c: 194:         TXREG = AU1;
  2905  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0084  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0085  083B               	movf	_AU1,w
  2908  0086  0099               	movwf	25	;volatile
  2909  0087                     i1l1493:
  2910                           
  2911                           ;main.c: 196:     if (toggleTX == 11){
  2912  0087  300B               	movlw	11
  2913  0088  0678               	xorwf	_toggleTX,w
  2914  0089  1D03               	btfss	3,2
  2915  008A  288C               	goto	u83_21
  2916  008B  288D               	goto	u83_20
  2917  008C                     u83_21:
  2918  008C  2891               	goto	i1l1497
  2919  008D                     u83_20:
  2920  008D                     i1l1495:
  2921                           
  2922                           ;main.c: 197:         TXREG = 0x76;
  2923  008D  3076               	movlw	118
  2924  008E  1283               	bcf	3,5	;RP0=0, select bank0
  2925  008F  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0090  0099               	movwf	25	;volatile
  2927  0091                     i1l1497:
  2928                           
  2929                           ;main.c: 199:     if (toggleTX == 12){
  2930  0091  300C               	movlw	12
  2931  0092  0678               	xorwf	_toggleTX,w
  2932  0093  1D03               	btfss	3,2
  2933  0094  2896               	goto	u84_21
  2934  0095  2897               	goto	u84_20
  2935  0096                     u84_21:
  2936  0096  289B               	goto	i1l1501
  2937  0097                     u84_20:
  2938  0097                     i1l1499:
  2939                           
  2940                           ;main.c: 200:         TXREG = 0x2C;
  2941  0097  302C               	movlw	44
  2942  0098  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0099  1303               	bcf	3,6	;RP1=0, select bank0
  2944  009A  0099               	movwf	25	;volatile
  2945  009B                     i1l1501:
  2946                           
  2947                           ;main.c: 202:     if (toggleTX == 13){
  2948  009B  300D               	movlw	13
  2949  009C  0678               	xorwf	_toggleTX,w
  2950  009D  1D03               	btfss	3,2
  2951  009E  28A0               	goto	u85_21
  2952  009F  28A1               	goto	u85_20
  2953  00A0                     u85_21:
  2954  00A0  28A5               	goto	i1l1505
  2955  00A1                     u85_20:
  2956  00A1                     i1l1503:
  2957                           
  2958                           ;main.c: 203:         TXREG = 0x20;
  2959  00A1  3020               	movlw	32
  2960  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  2961  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  2962  00A4  0099               	movwf	25	;volatile
  2963  00A5                     i1l1505:
  2964                           
  2965                           ;main.c: 205:     if (toggleTX == 14){
  2966  00A5  300E               	movlw	14
  2967  00A6  0678               	xorwf	_toggleTX,w
  2968  00A7  1D03               	btfss	3,2
  2969  00A8  28AA               	goto	u86_21
  2970  00A9  28AB               	goto	u86_20
  2971  00AA                     u86_21:
  2972  00AA  28AF               	goto	i1l1509
  2973  00AB                     u86_20:
  2974  00AB                     i1l1507:
  2975                           
  2976                           ;main.c: 206:         TXREG = 0x50;
  2977  00AB  3050               	movlw	80
  2978  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2979  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2980  00AE  0099               	movwf	25	;volatile
  2981  00AF                     i1l1509:
  2982                           
  2983                           ;main.c: 208:     if (toggleTX == 15){
  2984  00AF  300F               	movlw	15
  2985  00B0  0678               	xorwf	_toggleTX,w
  2986  00B1  1D03               	btfss	3,2
  2987  00B2  28B4               	goto	u87_21
  2988  00B3  28B5               	goto	u87_20
  2989  00B4                     u87_21:
  2990  00B4  28B9               	goto	i1l1513
  2991  00B5                     u87_20:
  2992  00B5                     i1l1511:
  2993                           
  2994                           ;main.c: 209:         TXREG = 0x4F;
  2995  00B5  304F               	movlw	79
  2996  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  2997  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  2998  00B8  0099               	movwf	25	;volatile
  2999  00B9                     i1l1513:
  3000                           
  3001                           ;main.c: 211:     if (toggleTX == 16){
  3002  00B9  3010               	movlw	16
  3003  00BA  0678               	xorwf	_toggleTX,w
  3004  00BB  1D03               	btfss	3,2
  3005  00BC  28BE               	goto	u88_21
  3006  00BD  28BF               	goto	u88_20
  3007  00BE                     u88_21:
  3008  00BE  28C3               	goto	i1l1517
  3009  00BF                     u88_20:
  3010  00BF                     i1l1515:
  3011                           
  3012                           ;main.c: 212:         TXREG = 0x54;
  3013  00BF  3054               	movlw	84
  3014  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  3015  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  3016  00C2  0099               	movwf	25	;volatile
  3017  00C3                     i1l1517:
  3018                           
  3019                           ;main.c: 214:     if (toggleTX == 17){
  3020  00C3  3011               	movlw	17
  3021  00C4  0678               	xorwf	_toggleTX,w
  3022  00C5  1D03               	btfss	3,2
  3023  00C6  28C8               	goto	u89_21
  3024  00C7  28C9               	goto	u89_20
  3025  00C8                     u89_21:
  3026  00C8  28CD               	goto	i1l1521
  3027  00C9                     u89_20:
  3028  00C9                     i1l1519:
  3029                           
  3030                           ;main.c: 215:         TXREG = 0x32;
  3031  00C9  3032               	movlw	50
  3032  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  3033  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  3034  00CC  0099               	movwf	25	;volatile
  3035  00CD                     i1l1521:
  3036                           
  3037                           ;main.c: 217:     if (toggleTX == 18){
  3038  00CD  3012               	movlw	18
  3039  00CE  0678               	xorwf	_toggleTX,w
  3040  00CF  1D03               	btfss	3,2
  3041  00D0  28D2               	goto	u90_21
  3042  00D1  28D3               	goto	u90_20
  3043  00D2                     u90_21:
  3044  00D2  28D7               	goto	i1l1525
  3045  00D3                     u90_20:
  3046  00D3                     i1l1523:
  3047                           
  3048                           ;main.c: 218:         TXREG = 0x3A;
  3049  00D3  303A               	movlw	58
  3050  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  3051  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  3052  00D6  0099               	movwf	25	;volatile
  3053  00D7                     i1l1525:
  3054                           
  3055                           ;main.c: 220:     if (toggleTX == 19){
  3056  00D7  3013               	movlw	19
  3057  00D8  0678               	xorwf	_toggleTX,w
  3058  00D9  1D03               	btfss	3,2
  3059  00DA  28DC               	goto	u91_21
  3060  00DB  28DD               	goto	u91_20
  3061  00DC                     u91_21:
  3062  00DC  28E1               	goto	i1l1529
  3063  00DD                     u91_20:
  3064  00DD                     i1l1527:
  3065                           
  3066                           ;main.c: 221:         TXREG = AC2;
  3067  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  3068  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  3069  00DF  0840               	movf	_AC2,w
  3070  00E0  0099               	movwf	25	;volatile
  3071  00E1                     i1l1529:
  3072                           
  3073                           ;main.c: 223:     if (toggleTX == 20){
  3074  00E1  3014               	movlw	20
  3075  00E2  0678               	xorwf	_toggleTX,w
  3076  00E3  1D03               	btfss	3,2
  3077  00E4  28E6               	goto	u92_21
  3078  00E5  28E7               	goto	u92_20
  3079  00E6                     u92_21:
  3080  00E6  28EB               	goto	i1l1533
  3081  00E7                     u92_20:
  3082  00E7                     i1l1531:
  3083                           
  3084                           ;main.c: 224:         TXREG = 0x2E;
  3085  00E7  302E               	movlw	46
  3086  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  3087  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  3088  00EA  0099               	movwf	25	;volatile
  3089  00EB                     i1l1533:
  3090                           
  3091                           ;main.c: 226:     if (toggleTX == 21){
  3092  00EB  3015               	movlw	21
  3093  00EC  0678               	xorwf	_toggleTX,w
  3094  00ED  1D03               	btfss	3,2
  3095  00EE  28F0               	goto	u93_21
  3096  00EF  28F1               	goto	u93_20
  3097  00F0                     u93_21:
  3098  00F0  28F5               	goto	i1l1537
  3099  00F1                     u93_20:
  3100  00F1                     i1l1535:
  3101                           
  3102                           ;main.c: 227:         TXREG = AD2;
  3103  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  3104  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  3105  00F3  083D               	movf	_AD2,w
  3106  00F4  0099               	movwf	25	;volatile
  3107  00F5                     i1l1537:
  3108                           
  3109                           ;main.c: 229:     if (toggleTX == 22){
  3110  00F5  3016               	movlw	22
  3111  00F6  0678               	xorwf	_toggleTX,w
  3112  00F7  1D03               	btfss	3,2
  3113  00F8  28FA               	goto	u94_21
  3114  00F9  28FB               	goto	u94_20
  3115  00FA                     u94_21:
  3116  00FA  28FF               	goto	i1l1541
  3117  00FB                     u94_20:
  3118  00FB                     i1l1539:
  3119                           
  3120                           ;main.c: 230:         TXREG = AU2;
  3121  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  3122  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  3123  00FD  083A               	movf	_AU2,w
  3124  00FE  0099               	movwf	25	;volatile
  3125  00FF                     i1l1541:
  3126                           
  3127                           ;main.c: 232:     if (toggleTX == 23){
  3128  00FF  3017               	movlw	23
  3129  0100  0678               	xorwf	_toggleTX,w
  3130  0101  1D03               	btfss	3,2
  3131  0102  2904               	goto	u95_21
  3132  0103  2905               	goto	u95_20
  3133  0104                     u95_21:
  3134  0104  2909               	goto	i1l1545
  3135  0105                     u95_20:
  3136  0105                     i1l1543:
  3137                           
  3138                           ;main.c: 233:         TXREG = 0x76;
  3139  0105  3076               	movlw	118
  3140  0106  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0107  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0108  0099               	movwf	25	;volatile
  3143  0109                     i1l1545:
  3144                           
  3145                           ;main.c: 235:     if (toggleTX == 24){
  3146  0109  3018               	movlw	24
  3147  010A  0678               	xorwf	_toggleTX,w
  3148  010B  1D03               	btfss	3,2
  3149  010C  290E               	goto	u96_21
  3150  010D  290F               	goto	u96_20
  3151  010E                     u96_21:
  3152  010E  2914               	goto	i1l171
  3153  010F                     u96_20:
  3154  010F                     i1l1547:
  3155                           
  3156                           ;main.c: 236:         TXREG = 13;
  3157  010F  300D               	movlw	13
  3158  0110  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0111  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0112  0099               	movwf	25	;volatile
  3161  0113                     i1l1549:
  3162                           
  3163                           ;main.c: 237:         toggleTX = 0;
  3164  0113  01F8               	clrf	_toggleTX
  3165  0114                     i1l171:
  3166  0114  0008               	return
  3167  0115                     __end_of_envio:
  3168  007E                     btemp	set	126	;btemp
  3169  007E                     wtemp0	set	126
  3170                           
  3171                           	psect	config
  3172                           
  3173                           ;Config register CONFIG1 @ 0x2007
  3174                           ;	Oscillator Selection bits
  3175                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3176                           ;	Watchdog Timer Enable bit
  3177                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3178                           ;	Power-up Timer Enable bit
  3179                           ;	PWRTE = OFF, PWRT disabled
  3180                           ;	RE3/MCLR pin function select bit
  3181                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3182                           ;	Code Protection bit
  3183                           ;	CP = OFF, Program memory code protection is disabled
  3184                           ;	Data Code Protection bit
  3185                           ;	CPD = OFF, Data memory code protection is disabled
  3186                           ;	Brown Out Reset Selection bits
  3187                           ;	BOREN = OFF, BOR disabled
  3188                           ;	Internal External Switchover bit
  3189                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3190                           ;	Fail-Safe Clock Monitor Enabled bit
  3191                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3192                           ;	Low Voltage Programming Enable bit
  3193                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3194                           ;	In-Circuit Debugger Mode bit
  3195                           ;	DEBUG = 0x1, unprogrammed default
  3196  2007                     	org	8199
  3197  2007  20D4               	dw	8404
  3198                           
  3199                           ;Config register CONFIG2 @ 0x2008
  3200                           ;	Brown-out Reset Selection bit
  3201                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3202                           ;	Flash Program Memory Self Write Enable bits
  3203                           ;	WRT = OFF, Write protection off
  3204  2008                     	org	8200
  3205  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     25      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _LECT2->___bmul
    _LECT2->___wmul
    _LECT2->_num_ascii
    _LECT1->___bmul
    _LECT1->___wmul
    _LECT1->_num_ascii
    ___awdiv->___wmul

Critical Paths under _ISR in COMMON

    _ISR->_envio

Critical Paths under _main in BANK0

    _main->_LECT2
    _setup->_spiInit
    _LECT2->___awdiv
    _LECT1->___awdiv
    ___awdiv->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6546
                                             23 BANK0      2     2      0
                           _CONTADOR
                              _LECT1
                              _LECT2
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                           _USARTcon
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _USARTcon                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LECT2                                               10    10      0    3051
                                             13 BANK0     10    10      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                8     8      0    3017
                                             13 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1036
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     586
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CONTADOR                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              1 COMMON     3     3      0
                              _envio
 ---------------------------------------------------------------------------------
 (4) _envio                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONTADOR
   _LECT1
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _LECT2
     ___awdiv
     ___bmul
     ___wmul
     _num_ascii
   _setup
     _USARTcon
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _ISR (ROOT)
   _envio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 03 03:45:45 2021

         ___bmul@product 0020              _SSPSTATbits 0094             ___awdiv@sign 002A  
                     _v1 0079                       _v2 004D                       fsr 0004  
    ___wmul@multiplicand 0022                      _AC1 0041                      _AC2 0040  
                    _AC3 003F                      _AD1 003E                      _AD2 003D  
                    _AD3 003C                      l201 04E2                      l212 04D3  
                    l204 04E8                      l141 0295                      l230 03BD  
                    l144 01E3                      l225 04CA                      l138 03FA  
                    l327 0440                      l353 04B4                      l329 0458  
                    l178 0431                      l194 0498                      l195 049D  
                    l198 04DC                      l480 037C                      _AU1 003B  
                    _AU2 003A                      _AU3 0039                      _ISR 0459  
                    u710 036E                      u630 031B                      u711 036D  
                    u631 031A                      u720 0373                      u640 0326  
                    u560 04E2                      u721 0372                      u705 0362  
                    u641 0325                      u561 04E1                      u650 0337  
                    u651 0336                      u670 0349                      u671 0348  
                    u665 033B                      u690 035A                      u691 0359  
                    u685 034A                      u695 0356                      u970 0401  
                    u971 0400                      u980 040B                      u981 040A  
                    u990 0412                      u991 0411                      _Un1 0044  
                    _Un2 0043                      _Un3 0042                      _res 004B  
                    _sum 004C                      indf 0000                     ?_ISR 0070  
                   l1411 0317                     l1421 032B                     l1413 031B  
                   l1431 0341                     l1423 032F                     l1415 0320  
                   l1441 0361                     l1433 0345                     l1425 0331  
                   l1417 0322                     l1409 0314                     l1281 04BD  
                   l1611 0412                     l1603 03FB                     l1443 0368  
                   l1435 0349                     l1427 0337                     l1419 0326  
                   l1291 04C7                     l1283 04C0                     l1621 0427  
                   l1613 0413                     l1605 0401                     l1437 035A  
                   l1429 033A                     l1445 036E                     l1285 04C2  
                   l1623 042E                     l1615 0417                     l1607 0405  
                   l1447 0373                     l1439 0360                     l1287 04C5  
                   l1279 04B5                     l1625 042F                     l1617 041D  
                   l1609 040B                     l1449 0378                     l1289 04C6  
                   l1721 0488                     l1619 0421                     l1811 043A  
                   l1731 0381                     l1723 048E                     l1379 04DC  
                   l1821 04A1                     l1813 0447                     l1725 0490  
                   l1901 02A8                     l1831 04B3                     l1823 04A2  
                   l1815 044E                     l1807 0432                     l1743 0383  
                   l1727 0497                     l1719 0481                     l1911 02C6  
                   l1903 02AE                     l1825 04A6                     l1817 0454  
                   l1809 0434                     l1761 0389                     l1729 0380  
                   l1841 03C8                     l1921 02ED                     l1913 02D0  
                   l1905 02B8                     l1827 04AA                     l1755 0387  
                   l1851 03D4                     l1843 03CF                     l1835 03BE  
                   l1595 04E4                     l1931 0306                     l1923 02F3  
                   l1915 02D6                     l1907 02C2                     l1829 04AC  
                   l1773 038D                     l1749 0385                     l1861 03D9  
                   l1853 03D5                     l1845 03D1                     l1837 03C6  
                   l1597 04CB                     l1933 030B                     l1925 02F9  
                   l1917 02E0                     l1909 02C5                     l1791 0393  
                   l1767 038B                     l1871 03E8                     l1863 03DA  
                   l1855 03D6                     l1847 03D2                     l1839 03C7  
                   l1599 04D0                     l1927 02FF                     l1919 02EA  
                   l1785 0391                     l1881 0274                     l1873 03E9  
                   l1865 03DD                     l1857 03D7                     l1849 03D3  
                   l1929 0301                     l1779 038F                     l1883 027F  
                   l1891 01CD                     l1875 03EA                     l1867 03DE  
                   l1859 03D8                     l1965 039D                     l1885 028A  
                   l1893 01D8                     l1877 03EF                     l1869 03DF  
                   l1799 0395                     l1879 01E4                     l1887 0115  
                   l1895 0296                     l1889 01C2                     l1897 029B  
                   l1899 029E                     u1000 041D                     u1001 041C  
                   u1010 0427                     u1011 0426                     u1020 042E  
                   u1100 043A                     u1021 042D                     u1101 0439  
                   u1130 0454                     u1131 0453                     u1115 0441  
                   u1140 04A6                     _CONT 004A                     u1141 04A5  
                   u1125 0448                     u1150 04B3                     u1151 04B2  
                   u1207 02BE                     u1160 02F3                     u1161 02F2  
                   u1217 02CC                     u1090 0488                     u1170 02F9  
                   u1091 0487                     u1171 02F8                     u1227 02E6  
                   u1180 02FF                     u1181 02FE                     u1197 02A4  
                   _TMR0 0001                     _Dec1 0047                     _Dec2 0046  
                   _Dec3 0045                     _Cen1 0076                     _Cen2 0049  
                   _Cen3 0048                     _main 0296                     btemp 007E  
                   start 000C        ___bmul@multiplier 0021         __end_of_CONTADOR 0432  
                  ??_ISR 0071                    ?_main 0070          __end_of___awdiv 037D  
                  _ANSEL 0188          ___awdiv@divisor 0024                    _LECT1 01E4  
                  _LECT2 0115                    i1l126 0479                    i1l171 0114  
        ___awdiv@counter 0029                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u80_20 006F  
                  u80_21 006E                    u81_20 0079                    u73_20 0029  
                  u81_21 0078                    u73_21 0028                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  u90_20 00D3                    u82_20 0083                    u74_20 0033  
                  u90_21 00D2                    u82_21 0082                    u74_21 0032  
                  u91_20 00DD                    u83_20 008D                    u75_20 003D  
                  u91_21 00DC                    u83_21 008C                    u75_21 003C  
                  u92_20 00E7                    u84_20 0097                    u76_20 0047  
                  u92_21 00E6                    u84_21 0096                    u76_21 0046  
                  u93_20 00F1                    u85_20 00A1                    u77_20 0051  
                  u93_21 00F0                    u85_21 00A0                    u77_21 0050  
                  u94_20 00FB                    u86_20 00AB                    u78_20 005B  
                  u94_21 00FA                    u86_21 00AA                    u78_21 005A  
                  u95_20 0105                    u87_20 00B5                    u79_20 0065  
                  u95_21 0104                    u87_21 00B4                    u79_21 0064  
                  u96_20 010F                    u88_20 00BF                    u96_21 010E  
                  u88_21 00BE                    u89_20 00C9                    u89_21 00C8  
                  _TXREG 0019                    _envio 0020                    _signo 0077  
                  _setup 03BE         __end_of_USARTcon 04CB                    pclath 000A  
        __end_of_spiInit 049E          __end_of_spiRead 04D4                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0314  
                 ??_main 0037                   ?_LECT1 0070                   ?_LECT2 0070  
                 _ADCON1 009F                   ?_envio 0070         ___awdiv@dividend 0026  
                 ?_setup 0070                   _ANSELH 0189                   u103_20 045D  
                 u103_21 045C                   i1l1501 009B                   i1l1511 00B5  
                 i1l1503 00A1                   u104_20 0468                   i1l1521 00CD  
                 i1l1513 00B9                   i1l1505 00A5                   u104_21 0467  
                 i1l1531 00E7                   i1l1523 00D3                   i1l1515 00BF  
                 i1l1507 00AB                   i1l1541 00FF                   i1l1533 00EB  
                 i1l1525 00D7                   i1l1517 00C3                   i1l1509 00AF  
                 i1l1461 0037                   i1l1453 0020                   i1l1543 0105  
                 i1l1535 00F1                   i1l1527 00DD                   i1l1519 00C9  
                 i1l1471 0051                   i1l1463 003D                   i1l1455 0029  
                 u105_20 0475                   i1l1545 0109                   i1l1537 00F5  
                 i1l1529 00E1                   i1l1481 0069                   i1l1473 0055  
                 i1l1465 0041                   i1l1457 002D                   u105_21 0474  
                 i1l1547 010F                   i1l1539 00FB                   i1l1491 0083  
                 i1l1483 006F                   i1l1475 005B                   i1l1467 0047  
                 i1l1459 0033                   i1l1651 0468                   i1l1643 0459  
                 i1l1549 0113                   i1l1493 0087                   i1l1485 0073  
                 i1l1477 005F                   i1l1469 004B                   i1l1653 046D  
                 i1l1645 045D                   i1l1495 008D                   i1l1487 0079  
                 i1l1479 0065                   i1l1655 0470                   i1l1647 045E  
                 i1l1497 0091                   i1l1489 007D                   i1l1657 0475  
                 i1l1649 0462                   i1l1499 0097                   _SPBRGH 009A  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   ___bmul 049E  
                 ___wmul 0432                ??___awdiv 0028         ___awdiv@quotient 002B  
                 saved_w 007E         __end_of_spiWrite 04E9                ??_spiInit 0074  
              ??_spiRead 0074                ?_CONTADOR 0070  __end_of__initialization 001C  
          __end_of_LECT1 0296            __end_of_LECT2 01E4      ___bmul@multiplicand 0074  
         __pcstackCOMMON 0070            __end_of_envio 0115            __end_of_setup 03FB  
              ?_USARTcon 0070                  ??_LECT1 002D                  ??_LECT2 002D  
                ??_envio 0070                  ??_setup 0075               ??_CONTADOR 0074  
             __pbssBANK0 0039               __pmaintext 0296                  ?___bmul 0074  
                ?___wmul 0020               __pintentry 0004  __size_of_spiReceiveWait 0007  
             ??_USARTcon 0074       __size_of_num_ascii 0041                  _SSPSTAT 0094  
              ?_spiWrite 0070          __size_of___bmul 0017                  ___awdiv 0314  
        __size_of___wmul 0027                  __ptext1 04E3                  __ptext2 04CB  
                __ptext3 04DC                  __ptext4 03BE                  __ptext5 0480  
                __ptext6 04B5                  __ptext7 0115                  __ptext8 01E4  
                __ptext9 037D             __size_of_ISR 0027                  _spiInit 0480  
                _spiRead 04CB                  clrloop0 04D5     end_of_initialization 001C  
      __end_of_num_ascii 03BE                _RCSTAbits 0018               ??_spiWrite 0074  
              _PORTCbits 0007                _TRISCbits 0087              spiWrite@dat 0074  
      __size_of_CONTADOR 0037                _TXSTAbits 0098           _spiReceiveWait 04DC  
         __end_of___bmul 04B5           __end_of___wmul 0459              _BAUDCTLbits 0187  
      __size_of_USARTcon 0016      start_initialization 000F              __end_of_ISR 0480  
 __end_of_spiReceiveWait 04E3                 ??___bmul 0075                 ??___wmul 0074  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070                 ?___awdiv 0024        __size_of_spiWrite 0006  
         __size_of_LECT1 00B2           __size_of_LECT2 00CF                 ?_spiInit 0020  
               ?_spiRead 0070           __size_of_envio 00F5                 _CONTADOR 03FB  
         __size_of_setup 003D     spiInit@sTransmitEdge 0022        interrupt_function 0004  
         ___wmul@product 0074                clear_ram0 04D4                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C                _num_ascii 037D  
               _USARTcon 04B5        ___wmul@multiplier 0020               ?_num_ascii 0070  
       __size_of___awdiv 0069               _LECT2$1177 0035                 __ptext10 0432  
               __ptext11 049E                 __ptext12 0314                 __ptext13 03FB  
               __ptext14 0459                 __ptext15 0020         __size_of_spiInit 001E  
       __size_of_spiRead 0009            __size_of_main 007E                 _spiWrite 04E3  
               _toggleTX 0078             spiInit@sType 0074        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0074  
           num_ascii@num 0020               _OSCCONbits 008F              ??_num_ascii 0074  
             _OPTION_REG 0081  
