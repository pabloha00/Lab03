

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 02 18:16:46 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370                           
   371                           	psect	idataCOMMON
   372  01BA                     __pidataCOMMON:
   373                           
   374                           ;initializer for _T
   375  01BA  3401               	retlw	1
   376  0013                     _SSPBUF	set	19
   377  0014                     _SSPCON	set	20
   378  001F                     _ADCON0bits	set	31
   379  0009                     _PORTE	set	9
   380  0008                     _PORTD	set	8
   381  0007                     _PORTC	set	7
   382  0005                     _PORTA	set	5
   383  0006                     _PORTB	set	6
   384  001E                     _ADRESH	set	30
   385  000C                     _PIR1bits	set	12
   386  0001                     _TMR0	set	1
   387  000B                     _INTCONbits	set	11
   388  0063                     _SSPIF	set	99
   389  0094                     _SSPSTATbits	set	148
   390  0094                     _SSPSTAT	set	148
   391  0081                     _OPTION_REG	set	129
   392  009F                     _ADCON1	set	159
   393  008F                     _OSCCONbits	set	143
   394  0085                     _TRISAbits	set	133
   395  008C                     _PIE1bits	set	140
   396  0089                     _TRISE	set	137
   397  0088                     _TRISD	set	136
   398  0086                     _TRISB	set	134
   399  043B                     _TRISC3	set	1083
   400  043D                     _TRISC5	set	1085
   401  0429                     _TRISA1	set	1065
   402  0428                     _TRISA0	set	1064
   403  0189                     _ANSELH	set	393
   404  0188                     _ANSEL	set	392
   405                           
   406                           	psect	cinit
   407  000F                     start_initialization:	
   408                           ; #config settings
   409                           
   410  000F                     __initialization:
   411                           
   412                           ; Initialize objects allocated to COMMON
   413  000F  120A  118A  21BA  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   414  0014  00F9               	movwf	__pdataCOMMON& (0+127)
   415                           
   416                           ; Clear objects allocated to BANK0
   417  0015  01A4               	clrf	__pbssBANK0& (0+127)
   418  0016  01A5               	clrf	(__pbssBANK0+1)& (0+127)
   419                           
   420                           ; Clear objects allocated to COMMON
   421  0017  01F5               	clrf	__pbssCOMMON& (0+127)
   422  0018  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   423  0019  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   424  001A  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   425  001B                     end_of_initialization:	
   426                           ;End of C runtime variable initialization code
   427                           
   428  001B                     __end_of__initialization:
   429  001B  0183               	clrf	3
   430  001C  120A  118A  2992   	ljmp	_main	;jump to C main() function
   431                           
   432                           	psect	bssCOMMON
   433  0075                     __pbssCOMMON:
   434  0075                     _v2:
   435  0075                     	ds	1
   436  0076                     _v1:
   437  0076                     	ds	1
   438  0077                     _anlec:
   439  0077                     	ds	1
   440  0078                     _nowadc:
   441  0078                     	ds	1
   442                           
   443                           	psect	dataCOMMON
   444  0079                     __pdataCOMMON:
   445  0079                     _T:
   446  0079                     	ds	1
   447                           
   448                           	psect	bssBANK0
   449  0024                     __pbssBANK0:
   450  0024                     _P2:
   451  0024                     	ds	1
   452  0025                     _P1:
   453  0025                     	ds	1
   454                           
   455                           	psect	cstackCOMMON
   456  0070                     __pcstackCOMMON:
   457  0070                     ?_spiRead:
   458  0070                     ??_spiRead:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_spiWrite:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ??_spiWrite:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_Setup:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_ADCL:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_ISR:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_main:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_spiReceiveWait:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ??_spiReceiveWait:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     spiWrite@dat:	
   486                           ; 1 bytes @ 0x0
   487                           
   488                           
   489                           ; 1 bytes @ 0x0
   490  0070                     	ds	1
   491  0071                     ??_ISR:
   492                           
   493                           ; 1 bytes @ 0x1
   494  0071                     	ds	3
   495  0074                     ?_ADC_init:
   496  0074                     ??_spiInit:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0074                     ADC_init@chan:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0074                     spiInit@sType:	
   503                           ; 1 bytes @ 0x4
   504                           
   505                           
   506                           ; 1 bytes @ 0x4
   507  0074                     	ds	1
   508  0075                     ??_main:
   509                           
   510                           	psect	cstackBANK0
   511  0020                     __pcstackBANK0:	
   512                           ; 1 bytes @ 0x5
   513                           
   514  0020                     ??_ADC_init:
   515  0020                     ?_spiInit:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0020                     spiInit@sDataSample:	
   519                           ; 1 bytes @ 0x0
   520                           
   521                           
   522                           ; 1 bytes @ 0x0
   523  0020                     	ds	1
   524  0021                     spiInit@sClockIdle:
   525                           
   526                           ; 1 bytes @ 0x1
   527  0021                     	ds	1
   528  0022                     ADC_init@vel:
   529  0022                     spiInit@sTransmitEdge:	
   530                           ; 1 bytes @ 0x2
   531                           
   532                           
   533                           ; 1 bytes @ 0x2
   534  0022                     	ds	1
   535  0023                     ??_Setup:
   536  0023                     ??_ADCL:	
   537                           ; 1 bytes @ 0x3
   538                           
   539                           
   540                           ; 1 bytes @ 0x3
   541  0023                     	ds	1
   542                           
   543                           	psect	maintext
   544  0192                     __pmaintext:	
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 70 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : B00/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels required when called: 5
   570 ;; This function calls:
   571 ;;		_ADCL
   572 ;;		_Setup
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _main
   580  0192                     _main:
   581  0192                     l1216:	
   582                           ;incstack = 0
   583                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   584                           
   585                           
   586                           ;main.c: 71:     Setup();
   587  0192  120A  118A  20BF  120A  118A  	fcall	_Setup
   588  0197                     l85:	
   589                           ;main.c: 72:     while(1){
   590                           
   591                           
   592                           ;main.c: 73:         ADCL();
   593  0197  120A  118A  2142  120A  118A  	fcall	_ADCL
   594  019C                     l1218:
   595                           
   596                           ;main.c: 74:         PORTB = anlec;
   597  019C  0877               	movf	_anlec,w
   598  019D  1283               	bcf	3,5	;RP0=0, select bank0
   599  019E  1303               	bcf	3,6	;RP1=0, select bank0
   600  019F  0086               	movwf	6	;volatile
   601  01A0  2997               	goto	l85
   602  01A1  120A  118A  280C   	ljmp	start
   603  01A4                     __end_of_main:
   604                           
   605                           	psect	text1
   606  00BF                     __ptext1:	
   607 ;; *************** function _Setup *****************
   608 ;; Defined at:
   609 ;;		line 79 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0
   625 ;;      Temps:          0       1       0       0       0
   626 ;;      Totals:         0       1       0       0       0
   627 ;;Total ram usage:        1 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 4
   630 ;; This function calls:
   631 ;;		_ADC_init
   632 ;;		_spiInit
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _Setup
   640  00BF                     _Setup:
   641  00BF                     l1134:	
   642                           ;incstack = 0
   643                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   644                           
   645                           
   646                           ;main.c: 81:     ANSEL = 0;
   647  00BF  1683               	bsf	3,5	;RP0=1, select bank3
   648  00C0  1703               	bsf	3,6	;RP1=1, select bank3
   649  00C1  0188               	clrf	8	;volatile
   650                           
   651                           ;main.c: 82:     ANSELH = 0;
   652  00C2  0189               	clrf	9	;volatile
   653  00C3                     l1136:
   654                           
   655                           ;main.c: 83:     ANSEL = 0b00000011;
   656  00C3  3003               	movlw	3
   657  00C4  0088               	movwf	8	;volatile
   658  00C5                     l1138:
   659                           
   660                           ;main.c: 84:     TRISA0 = 1;
   661  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   662  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   663  00C7  1405               	bsf	5,0	;volatile
   664  00C8                     l1140:
   665                           
   666                           ;main.c: 85:     TRISA1 = 1;
   667  00C8  1485               	bsf	5,1	;volatile
   668  00C9                     l1142:
   669                           
   670                           ;main.c: 86:     TRISB = 0;
   671  00C9  0186               	clrf	6	;volatile
   672  00CA                     l1144:
   673                           
   674                           ;main.c: 87:     TRISD = 0;
   675  00CA  0188               	clrf	8	;volatile
   676  00CB                     l1146:
   677                           
   678                           ;main.c: 88:     TRISE = 0;
   679  00CB  0189               	clrf	9	;volatile
   680  00CC                     l1148:
   681                           
   682                           ;main.c: 89:     PORTA = 0;
   683  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   684  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   685  00CE  0185               	clrf	5	;volatile
   686  00CF                     l1150:
   687                           
   688                           ;main.c: 90:     PORTB = 0;
   689  00CF  0186               	clrf	6	;volatile
   690  00D0                     l1152:
   691                           
   692                           ;main.c: 91:     PORTC = 0;
   693  00D0  0187               	clrf	7	;volatile
   694  00D1                     l1154:
   695                           
   696                           ;main.c: 92:     PORTD = 0;
   697  00D1  0188               	clrf	8	;volatile
   698  00D2                     l1156:
   699                           
   700                           ;main.c: 93:     PORTE = 0;
   701  00D2  0189               	clrf	9	;volatile
   702  00D3                     l1158:
   703                           
   704                           ;main.c: 94:     INTCONbits.TMR0IF = 0;
   705  00D3  110B               	bcf	11,2	;volatile
   706  00D4                     l1160:
   707                           
   708                           ;main.c: 95:     INTCONbits.RBIF = 0;
   709  00D4  100B               	bcf	11,0	;volatile
   710  00D5                     l1162:
   711                           
   712                           ;main.c: 96:     INTCONbits.GIE = 1;
   713  00D5  178B               	bsf	11,7	;volatile
   714  00D6                     l1164:
   715                           
   716                           ;main.c: 97:     INTCONbits.PEIE = 1;
   717  00D6  170B               	bsf	11,6	;volatile
   718  00D7                     l1166:
   719                           
   720                           ;main.c: 98:     INTCONbits.T0IE = 1;
   721  00D7  168B               	bsf	11,5	;volatile
   722  00D8                     l1168:
   723                           
   724                           ;main.c: 99:     INTCONbits.RBIE = 0;
   725  00D8  118B               	bcf	11,3	;volatile
   726  00D9                     l1170:
   727                           
   728                           ;main.c: 100:     PIR1bits.ADIF = 0;
   729  00D9  130C               	bcf	12,6	;volatile
   730  00DA                     l1172:
   731                           
   732                           ;main.c: 101:     PIR1bits.SSPIF = 0;
   733  00DA  118C               	bcf	12,3	;volatile
   734  00DB                     l1174:
   735                           
   736                           ;main.c: 102:     PIE1bits.SSPIE = 1;
   737  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   738  00DC  1303               	bcf	3,6	;RP1=0, select bank1
   739  00DD  158C               	bsf	12,3	;volatile
   740  00DE                     l1176:
   741                           
   742                           ;main.c: 103:     TRISAbits.TRISA5 = 1;
   743  00DE  1685               	bsf	5,5	;volatile
   744  00DF                     l1178:
   745                           
   746                           ;main.c: 104:     OSCCONbits.IRCF0 = 1;
   747  00DF  160F               	bsf	15,4	;volatile
   748  00E0                     l1180:
   749                           
   750                           ;main.c: 105:     OSCCONbits.IRCF1 = 1;
   751  00E0  168F               	bsf	15,5	;volatile
   752  00E1                     l1182:
   753                           
   754                           ;main.c: 106:     OSCCONbits.IRCF2 = 1;
   755  00E1  170F               	bsf	15,6	;volatile
   756  00E2                     l1184:
   757                           
   758                           ;main.c: 107:     ADC_init(20, 20);
   759  00E2  3014               	movlw	20
   760  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   761  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   762  00E5  00A3               	movwf	??_Setup
   763  00E6  0823               	movf	??_Setup,w
   764  00E7  00F4               	movwf	ADC_init@chan
   765  00E8  3014               	movlw	20
   766  00E9  120A  118A  201F  120A  118A  	fcall	_ADC_init
   767  00EE                     l1186:
   768                           
   769                           ;main.c: 108:     ADCON1 = 0;
   770  00EE  1683               	bsf	3,5	;RP0=1, select bank1
   771  00EF  1303               	bcf	3,6	;RP1=0, select bank1
   772  00F0  019F               	clrf	31	;volatile
   773  00F1                     l1188:
   774                           
   775                           ;main.c: 109:     TMR0 = 216;
   776  00F1  30D8               	movlw	216
   777  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   778  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   779  00F4  0081               	movwf	1	;volatile
   780  00F5                     l1190:
   781                           
   782                           ;main.c: 110:     OPTION_REG = 0b01010111;
   783  00F5  3057               	movlw	87
   784  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   785  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   786  00F8  0081               	movwf	1	;volatile
   787  00F9                     l1192:
   788                           
   789                           ;main.c: 111:     PIE1bits.ADIE = 1;
   790  00F9  170C               	bsf	12,6	;volatile
   791  00FA                     l1194:
   792                           
   793                           ;main.c: 112:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   794  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   795  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   796  00FC  01A0               	clrf	spiInit@sDataSample
   797  00FD  01A1               	clrf	spiInit@sClockIdle
   798  00FE  01A2               	clrf	spiInit@sTransmitEdge
   799  00FF  3024               	movlw	36
   800  0100  120A  118A  2174  120A  118A  	fcall	_spiInit
   801  0105                     l91:
   802  0105  0008               	return
   803  0106                     __end_of_Setup:
   804                           
   805                           	psect	text2
   806  0174                     __ptext2:	
   807 ;; *************** function _spiInit *****************
   808 ;; Defined at:
   809 ;;		line 4 in file "SPI_2.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  sType           1    wreg     enum E1264
   812 ;;  sDataSample     1    0[BANK0 ] enum E1272
   813 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   814 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  sType           1    4[COMMON] enum E1264
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       3       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0
   829 ;;      Totals:         1       3       0       0       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 3
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_Setup
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _spiInit
   842  0174                     _spiInit:
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   846                           ;spiInit@sType stored from wreg
   847  0174  00F4               	movwf	spiInit@sType
   848  0175                     l1124:
   849                           
   850                           ;SPI_2.c: 4: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_2.c: 5: {;SPI_2.c: 6:     TRISC5 = 0;
   851  0175  1683               	bsf	3,5	;RP0=1, select bank1
   852  0176  1303               	bcf	3,6	;RP1=0, select bank1
   853  0177  1287               	bcf	7,5	;volatile
   854                           
   855                           ;SPI_2.c: 7:     if(sType & 0b00000100)
   856  0178  1D74               	btfss	spiInit@sType,2
   857  0179  297B               	goto	u111
   858  017A  297C               	goto	u110
   859  017B                     u111:
   860  017B  2984               	goto	l1130
   861  017C                     u110:
   862  017C                     l1126:
   863                           
   864                           ;SPI_2.c: 8:     {;SPI_2.c: 9:         SSPSTAT = sTransmitEdge;
   865  017C  1283               	bcf	3,5	;RP0=0, select bank0
   866  017D  1303               	bcf	3,6	;RP1=0, select bank0
   867  017E  0822               	movf	spiInit@sTransmitEdge,w
   868  017F  1683               	bsf	3,5	;RP0=1, select bank1
   869  0180  1303               	bcf	3,6	;RP1=0, select bank1
   870  0181  0094               	movwf	20	;volatile
   871  0182                     l1128:
   872                           
   873                           ;SPI_2.c: 10:         TRISC3 = 1;
   874  0182  1587               	bsf	7,3	;volatile
   875                           
   876                           ;SPI_2.c: 11:     }
   877  0183  298C               	goto	l142
   878  0184                     l1130:
   879                           
   880                           ;SPI_2.c: 13:     {;SPI_2.c: 14:         SSPSTAT = sDataSample | sTransmitEdge;
   881  0184  1283               	bcf	3,5	;RP0=0, select bank0
   882  0185  1303               	bcf	3,6	;RP1=0, select bank0
   883  0186  0820               	movf	spiInit@sDataSample,w
   884  0187  0422               	iorwf	spiInit@sTransmitEdge,w
   885  0188  1683               	bsf	3,5	;RP0=1, select bank1
   886  0189  1303               	bcf	3,6	;RP1=0, select bank1
   887  018A  0094               	movwf	20	;volatile
   888  018B                     l1132:
   889                           
   890                           ;SPI_2.c: 15:         TRISC3 = 0;
   891  018B  1187               	bcf	7,3	;volatile
   892  018C                     l142:	
   893                           ;SPI_2.c: 16:     }
   894                           
   895                           
   896                           ;SPI_2.c: 18:     SSPCON = sType | sClockIdle;
   897  018C  0874               	movf	spiInit@sType,w
   898  018D  1283               	bcf	3,5	;RP0=0, select bank0
   899  018E  1303               	bcf	3,6	;RP1=0, select bank0
   900  018F  0421               	iorwf	spiInit@sClockIdle,w
   901  0190  0094               	movwf	20	;volatile
   902  0191                     l143:
   903  0191  0008               	return
   904  0192                     __end_of_spiInit:
   905                           
   906                           	psect	text3
   907  0142                     __ptext3:	
   908 ;; *************** function _ADCL *****************
   909 ;; Defined at:
   910 ;;		line 115 in file "main.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0
   926 ;;      Temps:          0       1       0       0       0
   927 ;;      Totals:         0       1       0       0       0
   928 ;;Total ram usage:        1 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; Hardware stack levels required when called: 4
   931 ;; This function calls:
   932 ;;		_ADC_init
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _ADCL
   940  0142                     _ADCL:
   941  0142                     l1196:	
   942                           ;incstack = 0
   943                           ; Regs used in _ADCL: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   944                           
   945                           
   946                           ;main.c: 116:     if (nowadc > 5){
   947  0142  3006               	movlw	6
   948  0143  0278               	subwf	_nowadc,w
   949  0144  1C03               	skipc
   950  0145  2947               	goto	u121
   951  0146  2948               	goto	u120
   952  0147                     u121:
   953  0147  2973               	goto	l97
   954  0148                     u120:
   955  0148                     l1198:
   956                           
   957                           ;main.c: 117:      nowadc = 0;
   958  0148  01F8               	clrf	_nowadc
   959  0149                     l1200:
   960                           
   961                           ;main.c: 118:      ADCON0bits.GO_nDONE = 1;
   962  0149  1283               	bcf	3,5	;RP0=0, select bank0
   963  014A  1303               	bcf	3,6	;RP1=0, select bank0
   964  014B  149F               	bsf	31,1	;volatile
   965  014C                     l1202:
   966                           
   967                           ;main.c: 119:         if (T==0){
   968  014C  0879               	movf	_T,w
   969  014D  1D03               	btfss	3,2
   970  014E  2950               	goto	u131
   971  014F  2951               	goto	u130
   972  0150                     u131:
   973  0150  2964               	goto	l1210
   974  0151                     u130:
   975  0151                     l1204:
   976                           
   977                           ;main.c: 120:          ADC_init(1, 20);
   978  0151  3014               	movlw	20
   979  0152  00A3               	movwf	??_ADCL
   980  0153  0823               	movf	??_ADCL,w
   981  0154  00F4               	movwf	ADC_init@chan
   982  0155  3001               	movlw	1
   983  0156  120A  118A  201F  120A  118A  	fcall	_ADC_init
   984  015B                     l1206:
   985                           
   986                           ;main.c: 121:          v1 = anlec;
   987  015B  0877               	movf	_anlec,w
   988  015C  1283               	bcf	3,5	;RP0=0, select bank0
   989  015D  1303               	bcf	3,6	;RP1=0, select bank0
   990  015E  00A3               	movwf	??_ADCL
   991  015F  0823               	movf	??_ADCL,w
   992  0160  00F6               	movwf	_v1
   993  0161                     l1208:
   994                           
   995                           ;main.c: 122:          T = 1;
   996  0161  01F9               	clrf	_T
   997  0162  0AF9               	incf	_T,f
   998                           
   999                           ;main.c: 123:     }
  1000  0163  2973               	goto	l97
  1001  0164                     l1210:
  1002                           
  1003                           ;main.c: 125:          ADC_init(1, 1);
  1004  0164  01F4               	clrf	ADC_init@chan
  1005  0165  0AF4               	incf	ADC_init@chan,f
  1006  0166  3001               	movlw	1
  1007  0167  120A  118A  201F  120A  118A  	fcall	_ADC_init
  1008  016C                     l1212:
  1009                           
  1010                           ;main.c: 126:          v2 = anlec;
  1011  016C  0877               	movf	_anlec,w
  1012  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1013  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1014  016F  00A3               	movwf	??_ADCL
  1015  0170  0823               	movf	??_ADCL,w
  1016  0171  00F5               	movwf	_v2
  1017  0172                     l1214:
  1018                           
  1019                           ;main.c: 127:          T = 0;
  1020  0172  01F9               	clrf	_T
  1021  0173                     l97:
  1022  0173  0008               	return
  1023  0174                     __end_of_ADCL:
  1024                           
  1025                           	psect	text4
  1026  001F                     __ptext4:	
  1027 ;; *************** function _ADC_init *****************
  1028 ;; Defined at:
  1029 ;;		line 3 in file "ADC_2.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  vel             1    wreg     unsigned char 
  1032 ;;  chan            1    4[COMMON] unsigned char 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  vel             1    2[BANK0 ] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1044 ;;      Params:         1       0       0       0       0
  1045 ;;      Locals:         0       1       0       0       0
  1046 ;;      Temps:          0       2       0       0       0
  1047 ;;      Totals:         1       3       0       0       0
  1048 ;;Total ram usage:        4 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 3
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_Setup
  1055 ;;		_ADCL
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _ADC_init
  1061  001F                     _ADC_init:
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
  1065                           ;ADC_init@vel stored from wreg
  1066  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0021  00A2               	movwf	ADC_init@vel
  1069  0022                     l1100:
  1070                           
  1071                           ;ADC_2.c: 4:     switch(vel){
  1072  0022  282F               	goto	l1104
  1073  0023                     l105:	
  1074                           ;ADC_2.c: 5:         case 1:
  1075                           
  1076                           
  1077                           ;ADC_2.c: 6:             ADCON0bits.ADCS0 = 1;
  1078  0023  171F               	bsf	31,6	;volatile
  1079                           
  1080                           ;ADC_2.c: 7:             ADCON0bits.ADCS1 = 0;
  1081  0024  139F               	bcf	31,7	;volatile
  1082                           
  1083                           ;ADC_2.c: 8:             break;
  1084  0025  2888               	goto	l1108
  1085  0026                     l107:	
  1086                           ;ADC_2.c: 9:         case 2:
  1087                           
  1088                           
  1089                           ;ADC_2.c: 10:             ADCON0bits.ADCS0 = 0;
  1090  0026  131F               	bcf	31,6	;volatile
  1091                           
  1092                           ;ADC_2.c: 11:             ADCON0bits.ADCS1 = 1;
  1093  0027  179F               	bsf	31,7	;volatile
  1094                           
  1095                           ;ADC_2.c: 12:             break;
  1096  0028  2888               	goto	l1108
  1097  0029                     l108:	
  1098                           ;ADC_2.c: 13:         case 3:
  1099                           
  1100                           
  1101                           ;ADC_2.c: 14:             ADCON0bits.ADCS0 = 1;
  1102  0029  171F               	bsf	31,6	;volatile
  1103                           
  1104                           ;ADC_2.c: 15:             ADCON0bits.ADCS1 = 1;
  1105  002A  179F               	bsf	31,7	;volatile
  1106                           
  1107                           ;ADC_2.c: 16:             break;
  1108  002B  2888               	goto	l1108
  1109  002C                     l109:	
  1110                           ;ADC_2.c: 17:         default:
  1111                           
  1112                           
  1113                           ;ADC_2.c: 18:             ADCON0bits.ADCS0 = 0;
  1114  002C  131F               	bcf	31,6	;volatile
  1115                           
  1116                           ;ADC_2.c: 19:             ADCON0bits.ADCS1 = 0;
  1117  002D  139F               	bcf	31,7	;volatile
  1118                           
  1119                           ;ADC_2.c: 20:             break;
  1120  002E  2888               	goto	l1108
  1121  002F                     l1104:
  1122  002F  0822               	movf	ADC_init@vel,w
  1123  0030  00A0               	movwf	??_ADC_init
  1124  0031  01A1               	clrf	??_ADC_init+1
  1125                           
  1126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1127                           ; Switch size 1, requested type "simple"
  1128                           ; Number of cases is 1, Range of values is 0 to 0
  1129                           ; switch strategies available:
  1130                           ; Name         Instructions Cycles
  1131                           ; simple_byte            4     3 (average)
  1132                           ; direct_byte           11     8 (fixed)
  1133                           ; jumptable            260     6 (fixed)
  1134                           ;	Chosen strategy is simple_byte
  1135  0032  0821               	movf	??_ADC_init+1,w
  1136  0033  3A00               	xorlw	0	; case 0
  1137  0034  1903               	skipnz
  1138  0035  2837               	goto	l1280
  1139  0036  282C               	goto	l109
  1140  0037                     l1280:
  1141                           
  1142                           ; Switch size 1, requested type "simple"
  1143                           ; Number of cases is 3, Range of values is 1 to 3
  1144                           ; switch strategies available:
  1145                           ; Name         Instructions Cycles
  1146                           ; simple_byte           10     6 (average)
  1147                           ; direct_byte           20    11 (fixed)
  1148                           ; jumptable            263     9 (fixed)
  1149                           ;	Chosen strategy is simple_byte
  1150  0037  0820               	movf	??_ADC_init,w
  1151  0038  3A01               	xorlw	1	; case 1
  1152  0039  1903               	skipnz
  1153  003A  2823               	goto	l105
  1154  003B  3A03               	xorlw	3	; case 2
  1155  003C  1903               	skipnz
  1156  003D  2826               	goto	l107
  1157  003E  3A01               	xorlw	1	; case 3
  1158  003F  1903               	skipnz
  1159  0040  2829               	goto	l108
  1160  0041  282C               	goto	l109
  1161  0042                     l111:	
  1162                           ;ADC_2.c: 24:         default:
  1163                           
  1164                           
  1165                           ;ADC_2.c: 25:             ADCON0bits.CHS0 = 0;
  1166  0042  111F               	bcf	31,2	;volatile
  1167                           
  1168                           ;ADC_2.c: 26:             ADCON0bits.CHS1 = 0;
  1169  0043  119F               	bcf	31,3	;volatile
  1170                           
  1171                           ;ADC_2.c: 27:             ADCON0bits.CHS2 = 0;
  1172  0044  121F               	bcf	31,4	;volatile
  1173                           
  1174                           ;ADC_2.c: 28:             ADCON0bits.CHS3 = 0;
  1175  0045  129F               	bcf	31,5	;volatile
  1176                           
  1177                           ;ADC_2.c: 29:             break;
  1178  0046  28B9               	goto	l112
  1179  0047                     l113:	
  1180                           ;ADC_2.c: 30:         case 1:
  1181                           
  1182                           
  1183                           ;ADC_2.c: 31:             ADCON0bits.CHS0 = 1;
  1184  0047  151F               	bsf	31,2	;volatile
  1185                           
  1186                           ;ADC_2.c: 32:             ADCON0bits.CHS1 = 0;
  1187  0048  119F               	bcf	31,3	;volatile
  1188                           
  1189                           ;ADC_2.c: 33:             ADCON0bits.CHS2 = 0;
  1190  0049  121F               	bcf	31,4	;volatile
  1191                           
  1192                           ;ADC_2.c: 34:             ADCON0bits.CHS3 = 0;
  1193  004A  129F               	bcf	31,5	;volatile
  1194                           
  1195                           ;ADC_2.c: 35:             break;
  1196  004B  28B9               	goto	l112
  1197  004C                     l114:	
  1198                           ;ADC_2.c: 36:         case 2:
  1199                           
  1200                           
  1201                           ;ADC_2.c: 37:             ADCON0bits.CHS0 = 0;
  1202  004C  111F               	bcf	31,2	;volatile
  1203                           
  1204                           ;ADC_2.c: 38:             ADCON0bits.CHS1 = 1;
  1205  004D  159F               	bsf	31,3	;volatile
  1206                           
  1207                           ;ADC_2.c: 39:             ADCON0bits.CHS2 = 0;
  1208  004E  121F               	bcf	31,4	;volatile
  1209                           
  1210                           ;ADC_2.c: 40:             ADCON0bits.CHS3 = 0;
  1211  004F  129F               	bcf	31,5	;volatile
  1212                           
  1213                           ;ADC_2.c: 41:             break;
  1214  0050  28B9               	goto	l112
  1215  0051                     l115:	
  1216                           ;ADC_2.c: 42:         case 3:
  1217                           
  1218                           
  1219                           ;ADC_2.c: 43:             ADCON0bits.CHS0 = 1;
  1220  0051  151F               	bsf	31,2	;volatile
  1221                           
  1222                           ;ADC_2.c: 44:             ADCON0bits.CHS1 = 1;
  1223  0052  159F               	bsf	31,3	;volatile
  1224                           
  1225                           ;ADC_2.c: 45:             ADCON0bits.CHS2 = 0;
  1226  0053  121F               	bcf	31,4	;volatile
  1227                           
  1228                           ;ADC_2.c: 46:             ADCON0bits.CHS3 = 0;
  1229  0054  129F               	bcf	31,5	;volatile
  1230                           
  1231                           ;ADC_2.c: 47:             break;
  1232  0055  28B9               	goto	l112
  1233  0056                     l116:	
  1234                           ;ADC_2.c: 48:         case 4:
  1235                           
  1236                           
  1237                           ;ADC_2.c: 49:             ADCON0bits.CHS0 = 0;
  1238  0056  111F               	bcf	31,2	;volatile
  1239                           
  1240                           ;ADC_2.c: 50:             ADCON0bits.CHS1 = 0;
  1241  0057  119F               	bcf	31,3	;volatile
  1242                           
  1243                           ;ADC_2.c: 51:             ADCON0bits.CHS2 = 1;
  1244  0058  161F               	bsf	31,4	;volatile
  1245                           
  1246                           ;ADC_2.c: 52:             ADCON0bits.CHS3 = 0;
  1247  0059  129F               	bcf	31,5	;volatile
  1248                           
  1249                           ;ADC_2.c: 53:             break;
  1250  005A  28B9               	goto	l112
  1251  005B                     l117:	
  1252                           ;ADC_2.c: 54:         case 5:
  1253                           
  1254                           
  1255                           ;ADC_2.c: 55:             ADCON0bits.CHS0 = 1;
  1256  005B  151F               	bsf	31,2	;volatile
  1257                           
  1258                           ;ADC_2.c: 56:             ADCON0bits.CHS1 = 0;
  1259  005C  119F               	bcf	31,3	;volatile
  1260                           
  1261                           ;ADC_2.c: 57:             ADCON0bits.CHS2 = 1;
  1262  005D  161F               	bsf	31,4	;volatile
  1263                           
  1264                           ;ADC_2.c: 58:             ADCON0bits.CHS3 = 0;
  1265  005E  129F               	bcf	31,5	;volatile
  1266                           
  1267                           ;ADC_2.c: 59:             break;
  1268  005F  28B9               	goto	l112
  1269  0060                     l118:	
  1270                           ;ADC_2.c: 60:         case 6:
  1271                           
  1272                           
  1273                           ;ADC_2.c: 61:             ADCON0bits.CHS0 = 0;
  1274  0060  111F               	bcf	31,2	;volatile
  1275                           
  1276                           ;ADC_2.c: 62:             ADCON0bits.CHS1 = 1;
  1277  0061  159F               	bsf	31,3	;volatile
  1278                           
  1279                           ;ADC_2.c: 63:             ADCON0bits.CHS2 = 1;
  1280  0062  161F               	bsf	31,4	;volatile
  1281                           
  1282                           ;ADC_2.c: 64:             ADCON0bits.CHS3 = 0;
  1283  0063  129F               	bcf	31,5	;volatile
  1284                           
  1285                           ;ADC_2.c: 65:             break;
  1286  0064  28B9               	goto	l112
  1287  0065                     l119:	
  1288                           ;ADC_2.c: 66:         case 7:
  1289                           
  1290                           
  1291                           ;ADC_2.c: 67:             ADCON0bits.CHS0 = 1;
  1292  0065  151F               	bsf	31,2	;volatile
  1293                           
  1294                           ;ADC_2.c: 68:             ADCON0bits.CHS1 = 1;
  1295  0066  159F               	bsf	31,3	;volatile
  1296                           
  1297                           ;ADC_2.c: 69:             ADCON0bits.CHS2 = 1;
  1298  0067  161F               	bsf	31,4	;volatile
  1299                           
  1300                           ;ADC_2.c: 70:             ADCON0bits.CHS3 = 0;
  1301  0068  129F               	bcf	31,5	;volatile
  1302                           
  1303                           ;ADC_2.c: 71:             break;
  1304  0069  28B9               	goto	l112
  1305  006A                     l120:	
  1306                           ;ADC_2.c: 72:         case 8:
  1307                           
  1308                           
  1309                           ;ADC_2.c: 73:             ADCON0bits.CHS0 = 0;
  1310  006A  111F               	bcf	31,2	;volatile
  1311                           
  1312                           ;ADC_2.c: 74:             ADCON0bits.CHS1 = 0;
  1313  006B  119F               	bcf	31,3	;volatile
  1314                           
  1315                           ;ADC_2.c: 75:             ADCON0bits.CHS2 = 0;
  1316  006C  121F               	bcf	31,4	;volatile
  1317                           
  1318                           ;ADC_2.c: 76:             ADCON0bits.CHS3 = 1;
  1319  006D  169F               	bsf	31,5	;volatile
  1320                           
  1321                           ;ADC_2.c: 77:             break;
  1322  006E  28B9               	goto	l112
  1323  006F                     l121:	
  1324                           ;ADC_2.c: 78:         case 9:
  1325                           
  1326                           
  1327                           ;ADC_2.c: 79:             ADCON0bits.CHS0 = 1;
  1328  006F  151F               	bsf	31,2	;volatile
  1329                           
  1330                           ;ADC_2.c: 80:             ADCON0bits.CHS1 = 0;
  1331  0070  119F               	bcf	31,3	;volatile
  1332                           
  1333                           ;ADC_2.c: 81:             ADCON0bits.CHS2 = 0;
  1334  0071  121F               	bcf	31,4	;volatile
  1335                           
  1336                           ;ADC_2.c: 82:             ADCON0bits.CHS3 = 1;
  1337  0072  169F               	bsf	31,5	;volatile
  1338                           
  1339                           ;ADC_2.c: 83:             break;
  1340  0073  28B9               	goto	l112
  1341  0074                     l122:	
  1342                           ;ADC_2.c: 84:         case 10:
  1343                           
  1344                           
  1345                           ;ADC_2.c: 85:             ADCON0bits.CHS0 = 0;
  1346  0074  111F               	bcf	31,2	;volatile
  1347                           
  1348                           ;ADC_2.c: 86:             ADCON0bits.CHS1 = 1;
  1349  0075  159F               	bsf	31,3	;volatile
  1350                           
  1351                           ;ADC_2.c: 87:             ADCON0bits.CHS2 = 0;
  1352  0076  121F               	bcf	31,4	;volatile
  1353                           
  1354                           ;ADC_2.c: 88:             ADCON0bits.CHS3 = 1;
  1355  0077  169F               	bsf	31,5	;volatile
  1356                           
  1357                           ;ADC_2.c: 89:             break;
  1358  0078  28B9               	goto	l112
  1359  0079                     l123:	
  1360                           ;ADC_2.c: 90:         case 11:
  1361                           
  1362                           
  1363                           ;ADC_2.c: 91:             ADCON0bits.CHS0 = 1;
  1364  0079  151F               	bsf	31,2	;volatile
  1365                           
  1366                           ;ADC_2.c: 92:             ADCON0bits.CHS1 = 1;
  1367  007A  159F               	bsf	31,3	;volatile
  1368                           
  1369                           ;ADC_2.c: 93:             ADCON0bits.CHS2 = 0;
  1370  007B  121F               	bcf	31,4	;volatile
  1371                           
  1372                           ;ADC_2.c: 94:             ADCON0bits.CHS3 = 1;
  1373  007C  169F               	bsf	31,5	;volatile
  1374                           
  1375                           ;ADC_2.c: 95:             break;
  1376  007D  28B9               	goto	l112
  1377  007E                     l124:	
  1378                           ;ADC_2.c: 96:         case 12:
  1379                           
  1380                           
  1381                           ;ADC_2.c: 97:             ADCON0bits.CHS0 = 0;
  1382  007E  111F               	bcf	31,2	;volatile
  1383                           
  1384                           ;ADC_2.c: 98:             ADCON0bits.CHS1 = 0;
  1385  007F  119F               	bcf	31,3	;volatile
  1386                           
  1387                           ;ADC_2.c: 99:             ADCON0bits.CHS2 = 1;
  1388  0080  161F               	bsf	31,4	;volatile
  1389                           
  1390                           ;ADC_2.c: 100:             ADCON0bits.CHS3 = 1;
  1391  0081  169F               	bsf	31,5	;volatile
  1392                           
  1393                           ;ADC_2.c: 101:             break;
  1394  0082  28B9               	goto	l112
  1395  0083                     l125:	
  1396                           ;ADC_2.c: 102:         case 13:
  1397                           
  1398                           
  1399                           ;ADC_2.c: 103:             ADCON0bits.CHS0 = 1;
  1400  0083  151F               	bsf	31,2	;volatile
  1401                           
  1402                           ;ADC_2.c: 104:             ADCON0bits.CHS1 = 0;
  1403  0084  119F               	bcf	31,3	;volatile
  1404                           
  1405                           ;ADC_2.c: 105:             ADCON0bits.CHS2 = 1;
  1406  0085  161F               	bsf	31,4	;volatile
  1407                           
  1408                           ;ADC_2.c: 106:             ADCON0bits.CHS3 = 1;
  1409  0086  169F               	bsf	31,5	;volatile
  1410                           
  1411                           ;ADC_2.c: 107:             break;
  1412  0087  28B9               	goto	l112
  1413  0088                     l1108:
  1414  0088  0874               	movf	ADC_init@chan,w
  1415  0089  00A0               	movwf	??_ADC_init
  1416  008A  01A1               	clrf	??_ADC_init+1
  1417                           
  1418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1419                           ; Switch size 1, requested type "simple"
  1420                           ; Number of cases is 1, Range of values is 0 to 0
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte            4     3 (average)
  1424                           ; direct_byte           11     8 (fixed)
  1425                           ; jumptable            260     6 (fixed)
  1426                           ;	Chosen strategy is simple_byte
  1427  008B  0821               	movf	??_ADC_init+1,w
  1428  008C  3A00               	xorlw	0	; case 0
  1429  008D  1903               	skipnz
  1430  008E  2890               	goto	l1282
  1431  008F  2842               	goto	l111
  1432  0090                     l1282:
  1433                           
  1434                           ; Switch size 1, requested type "simple"
  1435                           ; Number of cases is 13, Range of values is 1 to 13
  1436                           ; switch strategies available:
  1437                           ; Name         Instructions Cycles
  1438                           ; simple_byte           40    21 (average)
  1439                           ; direct_byte           50    11 (fixed)
  1440                           ; jumptable            263     9 (fixed)
  1441                           ;	Chosen strategy is simple_byte
  1442  0090  0820               	movf	??_ADC_init,w
  1443  0091  3A01               	xorlw	1	; case 1
  1444  0092  1903               	skipnz
  1445  0093  2847               	goto	l113
  1446  0094  3A03               	xorlw	3	; case 2
  1447  0095  1903               	skipnz
  1448  0096  284C               	goto	l114
  1449  0097  3A01               	xorlw	1	; case 3
  1450  0098  1903               	skipnz
  1451  0099  2851               	goto	l115
  1452  009A  3A07               	xorlw	7	; case 4
  1453  009B  1903               	skipnz
  1454  009C  2856               	goto	l116
  1455  009D  3A01               	xorlw	1	; case 5
  1456  009E  1903               	skipnz
  1457  009F  285B               	goto	l117
  1458  00A0  3A03               	xorlw	3	; case 6
  1459  00A1  1903               	skipnz
  1460  00A2  2860               	goto	l118
  1461  00A3  3A01               	xorlw	1	; case 7
  1462  00A4  1903               	skipnz
  1463  00A5  2865               	goto	l119
  1464  00A6  3A0F               	xorlw	15	; case 8
  1465  00A7  1903               	skipnz
  1466  00A8  286A               	goto	l120
  1467  00A9  3A01               	xorlw	1	; case 9
  1468  00AA  1903               	skipnz
  1469  00AB  286F               	goto	l121
  1470  00AC  3A03               	xorlw	3	; case 10
  1471  00AD  1903               	skipnz
  1472  00AE  2874               	goto	l122
  1473  00AF  3A01               	xorlw	1	; case 11
  1474  00B0  1903               	skipnz
  1475  00B1  2879               	goto	l123
  1476  00B2  3A07               	xorlw	7	; case 12
  1477  00B3  1903               	skipnz
  1478  00B4  287E               	goto	l124
  1479  00B5  3A01               	xorlw	1	; case 13
  1480  00B6  1903               	skipnz
  1481  00B7  2883               	goto	l125
  1482  00B8  2842               	goto	l111
  1483  00B9                     l112:
  1484                           
  1485                           ;ADC_2.c: 109:     ADCON0bits.GO = 0;
  1486  00B9  109F               	bcf	31,1	;volatile
  1487                           
  1488                           ;ADC_2.c: 110:     ADCON0bits.ADON = 1;
  1489  00BA  141F               	bsf	31,0	;volatile
  1490  00BB                     l1110:
  1491                           
  1492                           ;ADC_2.c: 111:     ADCON1 = 0;
  1493  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1494  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1495  00BD  019F               	clrf	31	;volatile
  1496  00BE                     l126:
  1497  00BE  0008               	return
  1498  00BF                     __end_of_ADC_init:
  1499                           
  1500                           	psect	text5
  1501  0106                     __ptext5:	
  1502 ;; *************** function _ISR *****************
  1503 ;; Defined at:
  1504 ;;		line 50 in file "main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2, status,0, pclath, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1518 ;;      Params:         0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0
  1520 ;;      Temps:          3       0       0       0       0
  1521 ;;      Totals:         3       0       0       0       0
  1522 ;;Total ram usage:        3 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; Hardware stack levels required when called: 2
  1525 ;; This function calls:
  1526 ;;		_spiRead
  1527 ;;		_spiWrite
  1528 ;; This function is called by:
  1529 ;;		Interrupt level 1
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _ISR
  1535  0106                     _ISR:
  1536  0106                     i1l874:
  1537                           
  1538                           ;main.c: 51:     if(INTCONbits.TMR0IF == 1){
  1539  0106  1D0B               	btfss	11,2	;volatile
  1540  0107  2909               	goto	u5_21
  1541  0108  290A               	goto	u5_20
  1542  0109                     u5_21:
  1543  0109  2913               	goto	i1l882
  1544  010A                     u5_20:
  1545  010A                     i1l876:
  1546                           
  1547                           ;main.c: 52:         INTCONbits.TMR0IF = 0;
  1548  010A  110B               	bcf	11,2	;volatile
  1549  010B                     i1l878:
  1550                           
  1551                           ;main.c: 53:         TMR0 = 216;
  1552  010B  30D8               	movlw	216
  1553  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1554  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1555  010E  0081               	movwf	1	;volatile
  1556  010F                     i1l880:
  1557                           
  1558                           ;main.c: 54:         nowadc++;
  1559  010F  3001               	movlw	1
  1560  0110  00F1               	movwf	??_ISR
  1561  0111  0871               	movf	??_ISR,w
  1562  0112  07F8               	addwf	_nowadc,f
  1563  0113                     i1l882:
  1564                           
  1565                           ;main.c: 56:     if (PIR1bits.ADIF == 1){
  1566  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0115  1F0C               	btfss	12,6	;volatile
  1569  0116  2918               	goto	u6_21
  1570  0117  2919               	goto	u6_20
  1571  0118                     u6_21:
  1572  0118  291E               	goto	i1l888
  1573  0119                     u6_20:
  1574  0119                     i1l884:
  1575                           
  1576                           ;main.c: 57:         PIR1bits.ADIF = 0;
  1577  0119  130C               	bcf	12,6	;volatile
  1578  011A                     i1l886:
  1579                           
  1580                           ;main.c: 58:         anlec = ADRESH;
  1581  011A  081E               	movf	30,w	;volatile
  1582  011B  00F1               	movwf	??_ISR
  1583  011C  0871               	movf	??_ISR,w
  1584  011D  00F7               	movwf	_anlec
  1585  011E                     i1l888:
  1586                           
  1587                           ;main.c: 60:     if(SSPIF == 1){
  1588  011E  1D8C               	btfss	12,3	;volatile
  1589  011F  2921               	goto	u7_21
  1590  0120  2922               	goto	u7_20
  1591  0121                     u7_21:
  1592  0121  293B               	goto	i1l80
  1593  0122                     u7_20:
  1594  0122                     i1l890:
  1595                           
  1596                           ;main.c: 61:         spiRead();
  1597  0122  120A  118A  21A4  120A  118A  	fcall	_spiRead
  1598                           
  1599                           ;main.c: 62:         spiWrite(v1);
  1600  0127  0876               	movf	_v1,w
  1601  0128  120A  118A  21B4  120A  118A  	fcall	_spiWrite
  1602                           
  1603                           ;main.c: 63:         spiRead();
  1604  012D  120A  118A  21A4  120A  118A  	fcall	_spiRead
  1605                           
  1606                           ;main.c: 64:         spiWrite(v2);
  1607  0132  0875               	movf	_v2,w
  1608  0133  120A  118A  21B4  120A  118A  	fcall	_spiWrite
  1609  0138                     i1l892:
  1610                           
  1611                           ;main.c: 65:         SSPIF = 0;
  1612  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1614  013A  118C               	bcf	12,3	;volatile
  1615  013B                     i1l80:
  1616  013B  0873               	movf	??_ISR+2,w
  1617  013C  008A               	movwf	10
  1618  013D  0E72               	swapf	??_ISR+1,w
  1619  013E  0083               	movwf	3
  1620  013F  0EFE               	swapf	btemp,f
  1621  0140  0E7E               	swapf	btemp,w
  1622  0141  0009               	retfie
  1623  0142                     __end_of_ISR:
  1624                           
  1625                           	psect	intentry
  1626  0004                     __pintentry:	
  1627                           ;incstack = 0
  1628                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1629                           
  1630  0004                     interrupt_function:
  1631  007E                     saved_w	set	btemp
  1632  0004  00FE               	movwf	btemp
  1633  0005  0E03               	swapf	3,w
  1634  0006  00F2               	movwf	??_ISR+1
  1635  0007  080A               	movf	10,w
  1636  0008  00F3               	movwf	??_ISR+2
  1637  0009  120A  118A  2906   	ljmp	_ISR
  1638                           
  1639                           	psect	text6
  1640  01B4                     __ptext6:	
  1641 ;; *************** function _spiWrite *****************
  1642 ;; Defined at:
  1643 ;;		line 26 in file "SPI_2.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  dat             1    wreg     unsigned char 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  dat             1    0[COMMON] unsigned char 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         0       0       0       0       0
  1658 ;;      Locals:         1       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0
  1660 ;;      Totals:         1       0       0       0       0
  1661 ;;Total ram usage:        1 bytes
  1662 ;; Hardware stack levels used: 1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_ISR
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           
  1671                           ;psect for function _spiWrite
  1672  01B4                     _spiWrite:
  1673                           
  1674                           ;incstack = 0
  1675                           ; Regs used in _spiWrite: [wreg]
  1676                           ;spiWrite@dat stored from wreg
  1677  01B4  00F0               	movwf	spiWrite@dat
  1678  01B5                     i1l790:
  1679                           
  1680                           ;SPI_2.c: 26: void spiWrite(char dat);SPI_2.c: 27: {;SPI_2.c: 28:     SSPBUF = dat;
  1681  01B5  0870               	movf	spiWrite@dat,w
  1682  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1683  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1684  01B8  0093               	movwf	19	;volatile
  1685  01B9                     i1l152:
  1686  01B9  0008               	return
  1687  01BA                     __end_of_spiWrite:
  1688                           
  1689                           	psect	text7
  1690  01A4                     __ptext7:	
  1691 ;; *************** function _spiRead *****************
  1692 ;; Defined at:
  1693 ;;		line 39 in file "SPI_2.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      unsigned char 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0
  1710 ;;      Totals:         0       0       0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used: 1
  1713 ;; Hardware stack levels required when called: 1
  1714 ;; This function calls:
  1715 ;;		_spiReceiveWait
  1716 ;; This function is called by:
  1717 ;;		_ISR
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           
  1722                           ;psect for function _spiRead
  1723  01A4                     _spiRead:
  1724  01A4                     i1l784:	
  1725                           ;incstack = 0
  1726                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1727                           
  1728                           
  1729                           ;SPI_2.c: 41:     spiReceiveWait();
  1730  01A4  120A  118A  21AD  120A  118A  	fcall	_spiReceiveWait
  1731  01A9                     i1l786:
  1732                           
  1733                           ;SPI_2.c: 42:     return(SSPBUF);;	Return value of _spiRead is never used
  1734  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1735  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1736  01AB  0813               	movf	19,w	;volatile
  1737  01AC                     i1l160:
  1738  01AC  0008               	return
  1739  01AD                     __end_of_spiRead:
  1740                           
  1741                           	psect	text8
  1742  01AD                     __ptext8:	
  1743 ;; *************** function _spiReceiveWait *****************
  1744 ;; Defined at:
  1745 ;;		line 21 in file "SPI_2.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		None
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0
  1762 ;;      Totals:         0       0       0       0       0
  1763 ;;Total ram usage:        0 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_spiRead
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _spiReceiveWait
  1774  01AD                     _spiReceiveWait:
  1775  01AD                     i1l782:	
  1776                           ;incstack = 0
  1777                           ; Regs used in _spiReceiveWait: []
  1778                           
  1779  01AD                     i1l146:	
  1780                           ;SPI_2.c: 23:     while ( !SSPSTATbits.BF );
  1781                           
  1782  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1783  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1784  01AF  1C14               	btfss	20,0	;volatile
  1785  01B0  29B2               	goto	u2_21
  1786  01B1  29B3               	goto	u2_20
  1787  01B2                     u2_21:
  1788  01B2  29AD               	goto	i1l146
  1789  01B3                     u2_20:
  1790  01B3                     i1l149:
  1791  01B3  0008               	return
  1792  01B4                     __end_of_spiReceiveWait:
  1793  007E                     btemp	set	126	;btemp
  1794  007E                     wtemp0	set	126
  1795                           
  1796                           	psect	config
  1797                           
  1798                           ;Config register CONFIG1 @ 0x2007
  1799                           ;	Oscillator Selection bits
  1800                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1801                           ;	Watchdog Timer Enable bit
  1802                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1803                           ;	Power-up Timer Enable bit
  1804                           ;	PWRTE = OFF, PWRT disabled
  1805                           ;	RE3/MCLR pin function select bit
  1806                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1807                           ;	Code Protection bit
  1808                           ;	CP = OFF, Program memory code protection is disabled
  1809                           ;	Data Code Protection bit
  1810                           ;	CPD = OFF, Data memory code protection is disabled
  1811                           ;	Brown Out Reset Selection bits
  1812                           ;	BOREN = OFF, BOR disabled
  1813                           ;	Internal External Switchover bit
  1814                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1815                           ;	Fail-Safe Clock Monitor Enabled bit
  1816                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1817                           ;	Low Voltage Programming Enable bit
  1818                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1819                           ;	In-Circuit Debugger Mode bit
  1820                           ;	DEBUG = 0x1, unprogrammed default
  1821  2007                     	org	8199
  1822  2007  20D4               	dw	8404
  1823                           
  1824                           ;Config register CONFIG2 @ 0x2008
  1825                           ;	Brown-out Reset Selection bit
  1826                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1827                           ;	Flash Program Memory Self Write Enable bits
  1828                           ;	WRT = OFF, Write protection off
  1829  2008                     	org	8200
  1830  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      4       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Setup->_ADC_init
    _Setup->_spiInit
    _ADCL->_ADC_init

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_ADCL
    _main->_Setup
    _Setup->_ADC_init
    _Setup->_spiInit
    _ADCL->_ADC_init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1120
                               _ADCL
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0     788
                                              3 BANK0      1     1      0
                           _ADC_init
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ADCL                                                 1     1      0     332
                                              3 BANK0      1     1      0
                           _ADC_init
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             4     3      1     332
                                              4 COMMON     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCL
     _ADC_init
   _Setup
     _ADC_init
     _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4       6       5        7.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10      12        0.0%
ABS                  0      0      10       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 02 18:16:46 2021

                      _T 0079              _SSPSTATbits 0094                       _P1 0025  
                     _P2 0024                       l91 0105                       l85 0197  
                     l97 0173                       _v1 0076                       _v2 0075  
                    l111 0042                      l120 006A                      l112 00B9  
                    l121 006F                      l113 0047                      l105 0023  
                    l122 0074                      l114 004C                      l123 0079  
                    l115 0051                      l107 0026                      l124 007E  
                    l116 0056                      l108 0029                      l125 0083  
                    l117 005B                      l109 002C                      l126 00BE  
                    l118 0060                      l142 018C                      l119 0065  
                    l143 0191                      u110 017C                      u111 017B  
                    u120 0148                      u121 0147                      u130 0151  
                    u131 0150                      _ISR 0106                     ?_ISR 0070  
                   l1100 0022                     l1110 00BB                     l1104 002F  
                   l1200 0149                     l1210 0164                     l1202 014C  
                   l1130 0184                     l1108 0088                     l1212 016C  
                   l1204 0151                     l1132 018B                     l1124 0175  
                   l1140 00C8                     l1214 0172                     l1206 015B  
                   l1126 017C                     l1150 00CF                     l1142 00C9  
                   l1134 00BF                     l1208 0161                     l1128 0182  
                   l1160 00D4                     l1152 00D0                     l1144 00CA  
                   l1136 00C3                     l1216 0192                     l1170 00D9  
                   l1162 00D5                     l1154 00D1                     l1146 00CB  
                   l1138 00C5                     l1218 019C                     l1180 00E0  
                   l1172 00DA                     l1164 00D6                     l1156 00D2  
                   l1148 00CC                     l1190 00F5                     l1182 00E1  
                   l1174 00DB                     l1166 00D7                     l1158 00D3  
                   l1280 0037                     l1192 00F9                     l1184 00E2  
                   l1176 00DE                     l1168 00D8                     l1282 0090  
                   l1194 00FA                     l1186 00EE                     l1178 00DF  
                   l1196 0142                     l1188 00F1                     l1198 0148  
                   _ADCL 0142                     i1l80 013B                     _TMR0 0001  
                   u2_20 01B3                     u2_21 01B2                     u5_20 010A  
                   u5_21 0109                     u6_20 0119                     u6_21 0118  
                   u7_20 0122                     u7_21 0121                     _main 0192  
                   btemp 007E                     start 000C         __end_of_ADC_init 00BF  
                  ??_ISR 0071                    ?_ADCL 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l160 01AC                    i1l152 01B9  
                  i1l146 01AD                    i1l149 01B3                    i1l782 01AD  
                  i1l790 01B5                    i1l784 01A4                    i1l880 010F  
                  i1l786 01A9                    i1l890 0122                    i1l882 0113  
                  i1l874 0106                    i1l892 0138                    i1l884 0119  
                  i1l876 010A                    i1l886 011A                    i1l878 010B  
                  i1l888 011E                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    _Setup 00BF                    _anlec 0077  
                  pclath 000A          __end_of_spiInit 0192          __end_of_spiRead 01AD  
                  status 0003                    wtemp0 007E             __end_of_ADCL 0174  
        __initialization 000F             __end_of_main 01A4                   ??_ADCL 0023  
                 ??_main 0075                   ?_Setup 0070                   _ADCON1 009F  
                 _ADRESH 001E                   _ANSELH 0189                   _TRISA0 0428  
                 _TRISA1 0429                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   _nowadc 0078  
           __pdataCOMMON 0079                   saved_w 007E         __end_of_spiWrite 01BA  
              ??_spiInit 0074                ?_ADC_init 0074                ??_spiRead 0070  
__end_of__initialization 001B           __pcstackCOMMON 0070            __end_of_Setup 0106  
             ??_ADC_init 0020                  ??_Setup 0023               __pbssBANK0 0024  
             __pmaintext 0192               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 00BF  
                __ptext2 0174                  __ptext3 0142                  __ptext4 001F  
                __ptext5 0106                  __ptext6 01B4                  __ptext7 01A4  
                __ptext8 01AD             __size_of_ISR 003C                  _spiInit 0174  
                _spiRead 01A4     end_of_initialization 001B               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070        __size_of_ADC_init 00A0  
           ADC_init@chan 0074           _spiReceiveWait 01AD            __pidataCOMMON 01BA  
    start_initialization 000F              __end_of_ISR 0142   __end_of_spiReceiveWait 01B4  
            __pbssCOMMON 0075                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0020  
               _ADC_init 001F                 ?_spiRead 0070           __size_of_Setup 0047  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C               _ADCON0bits 001F  
            ADC_init@vel 0022         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_ADCL 0032            __size_of_main 0012                 _spiWrite 01B4  
           spiInit@sType 0074        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
             _OPTION_REG 0081  
